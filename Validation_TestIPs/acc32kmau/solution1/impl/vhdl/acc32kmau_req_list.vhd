-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity acc32kmau_req_list_rom is 
    generic(
             DWIDTH     : integer := 15; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 1024
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of acc32kmau_req_list_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "000000000000011", 1 => "000000000001100", 2 => "000000000000010", 
    3 to 5=> "000000000000001", 6 => "000000000001000", 7 to 8=> "000000000000011", 
    9 to 10=> "000000000001101", 11 => "000000000001111", 12 => "000000000000111", 
    13 => "000000000000101", 14 => "000000000001011", 15 => "000000000000111", 
    16 to 17=> "000000000010000", 18 to 19=> "000000000000001", 20 to 21=> "000000000000011", 
    22 to 23=> "000000000000101", 24 => "000000000000010", 25 => "000000000000101", 
    26 => "000000000000100", 27 => "000000000010000", 28 => "000000001110000", 
    29 => "000000000000111", 30 => "000000000000011", 31 to 33=> "000000000010000", 
    34 to 36=> "000000000000101", 37 => "000000000001100", 38 => "000000000110000", 
    39 => "000000001101000", 40 => "000000010010000", 41 => "000000000000011", 
    42 => "000000000001101", 43 => "000000000001100", 44 => "000000000000100", 
    45 => "000000000001001", 46 => "000000000000111", 47 => "000000000000100", 
    48 => "000000000000111", 49 => "000000001101011", 50 => "000000011000110", 
    51 => "000000000000011", 52 => "000000010000000", 53 => "000000010011010", 
    54 => "000100000011111", 55 => "000000000001010", 56 => "000000000000100", 
    57 => "000000000001010", 58 => "000000000110111", 59 => "001000001010100", 
    60 => "000000000001010", 61 => "000000010111000", 62 => "000000000000011", 
    63 => "000000000000100", 64 => "000000100000111", 65 => "000010000100001", 
    66 => "000000101100111", 67 => "000000100010111", 68 => "000000000001000", 
    69 => "000000000000001", 70 => "000000000001010", 71 => "000000010010100", 
    72 => "000000000001001", 73 => "000000010000000", 74 => "000001001111010", 
    75 => "000000000001101", 76 => "000000100100000", 77 => "000000000000010", 
    78 => "000000000001010", 79 => "000000100111011", 80 => "000000011001000", 
    81 => "000100001101011", 82 => "000000000000111", 83 => "000010000001011", 
    84 => "000000010100000", 85 => "000000011010000", 86 => "000000010100011", 
    87 => "000000000000100", 88 => "000000110000000", 89 => "000000010000011", 
    90 => "000000000110000", 91 => "000000000000101", 92 => "000000000000110", 
    93 => "000000000001001", 94 => "000100001001101", 95 => "000000000000101", 
    96 => "000000011010000", 97 => "000000011111000", 98 => "000000100000000", 
    99 => "000000000001010", 100 => "000000101000000", 101 => "000000000000011", 
    102 => "000000000000111", 103 => "110000000000000", 104 => "000000010000111", 
    105 => "000000001000101", 106 => "000000000110000", 107 => "100010000000000", 
    108 => "000000000000111", 109 to 110=> "000000000000011", 111 => "000000000001101", 
    112 to 113=> "000000000110000", 114 => "000000101000000", 115 => "000000000100010", 
    116 => "000000011010000", 117 => "000000000000001", 118 => "000000000000011", 
    119 => "000000000000001", 120 => "000000010011011", 121 => "000000000000110", 
    122 => "000000000000111", 123 => "000000011010100", 124 => "000010000110010", 
    125 => "000000000001000", 126 => "000000000000111", 127 => "000000000001000", 
    128 => "000000100000000", 129 => "000000000000110", 130 => "000010000111010", 
    131 => "000000000000100", 132 => "000000010111000", 133 => "000000000001011", 
    134 => "000000010000000", 135 => "000000000000100", 136 => "000000011111000", 
    137 => "000000001000100", 138 => "000000010100000", 139 => "000000000000100", 
    140 => "000000000101010", 141 => "000000000000110", 142 => "000000000000111", 
    143 => "000000000001101", 144 => "000000000000110", 145 => "000000010100000", 
    146 => "000000000110000", 147 => "000000001101111", 148 => "000000010000010", 
    149 => "000000100101010", 150 => "000000011001000", 151 => "000000010010100", 
    152 => "000000000000001", 153 => "000000000001001", 154 => "000000000000111", 
    155 => "000000000000001", 156 => "000000000000101", 157 => "000010000000000", 
    158 => "000000011010001", 159 => "000000010000000", 160 => "000000010101100", 
    161 => "000000000000110", 162 => "000010000000000", 163 => "000000001010000", 
    164 => "000000000000110", 165 => "000001000000000", 166 => "000000001111001", 
    167 to 168=> "000000000001010", 169 => "000000000001001", 170 => "001000000000000", 
    171 => "000000000001001", 172 => "000000010110000", 173 => "000000010000000", 
    174 => "000000011011000", 175 => "000000000000100", 176 => "000010001011000", 
    177 => "000001100000000", 178 => "000000010001001", 179 => "000000001010001", 
    180 => "000000000000010", 181 => "000000000000111", 182 => "000000000000001", 
    183 => "000000000000110", 184 => "000001010000000", 185 => "000000000001010", 
    186 => "000000010011110", 187 => "000000010011010", 188 => "000000000101001", 
    189 => "000000000001110", 190 => "000000010101000", 191 => "001000100000000", 
    192 => "000001000100011", 193 => "000000000000110", 194 => "000000001110000", 
    195 => "000000000000111", 196 => "000000000001100", 197 => "100011000100000", 
    198 => "000000000001001", 199 => "100001100101000", 200 => "000000010010110", 
    201 => "000000000000010", 202 => "000000001000000", 203 => "000000011110000", 
    204 => "000000011010000", 205 => "000000000101101", 206 => "000000101000000", 
    207 => "000000000001010", 208 => "000000000000001", 209 => "000000000001001", 
    210 => "000000000000011", 211 => "000000000001001", 212 => "110000000000000", 
    213 => "000000000000110", 214 => "000000100100111", 215 => "000001011000000", 
    216 => "000001000001110", 217 => "000000000001000", 218 => "000000000000101", 
    219 => "000000011011000", 220 => "000000000000101", 221 => "000000010000010", 
    222 => "000000000001010", 223 => "000000011011000", 224 => "000000001010010", 
    225 => "000000000001011", 226 => "000000011110000", 227 => "000000000001110", 
    228 => "000000000001010", 229 => "000000000000101", 230 => "000000000111000", 
    231 => "000010000000000", 232 => "000000000001000", 233 => "100001100101000", 
    234 => "000001010101000", 235 => "000000000000100", 236 => "000000000001110", 
    237 => "000100000000000", 238 => "000000000000111", 239 => "000000000000110", 
    240 => "000000010100000", 241 => "000000000000111", 242 => "000000001010001", 
    243 => "000000001000000", 244 to 245=> "000000000000100", 246 => "000000000001000", 
    247 => "000000000000110", 248 => "000000000000001", 249 => "000000001010010", 
    250 => "100101100000000", 251 => "101000000000000", 252 => "000010000100011", 
    253 => "000010000000000", 254 => "000000001011010", 255 => "000000000110011", 
    256 => "000000000000101", 257 => "000000101001101", 258 => "000000010000001", 
    259 => "000000011011000", 260 => "001100000000000", 261 => "000000011011000", 
    262 => "000000000000101", 263 => "000000000001010", 264 => "000000000001110", 
    265 => "000000011000000", 266 => "000000011100000", 267 => "000000001110110", 
    268 => "000000000001001", 269 => "000001001011110", 270 => "000000000110000", 
    271 => "000000101010100", 272 => "000001011010000", 273 => "000000000011000", 
    274 => "000000000000100", 275 => "000111000000000", 276 => "000000001010011", 
    277 => "000000000000111", 278 => "000000001010000", 279 => "000000000000110", 
    280 => "000000000000010", 281 => "000000010000000", 282 => "000000000000011", 
    283 => "100000000000000", 284 => "000000000001101", 285 => "000000000000010", 
    286 => "000000000000100", 287 => "000000000000001", 288 => "000010000000100", 
    289 => "000000000000001", 290 => "110000000000000", 291 => "000000000001001", 
    292 => "000001100000000", 293 => "000000011000110", 294 => "000000000000011", 
    295 => "000000011001000", 296 => "000000001101100", 297 => "000000000000101", 
    298 => "000000000001011", 299 => "000001001101010", 300 to 1023=> "000000000000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity acc32kmau_req_list is
    generic (
        DataWidth : INTEGER := 15;
        AddressRange : INTEGER := 1024;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of acc32kmau_req_list is
    component acc32kmau_req_list_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    acc32kmau_req_list_rom_U :  component acc32kmau_req_list_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


