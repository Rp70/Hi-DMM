

================================================================
== Vivado HLS Report for 'HLS_free_1_s'
================================================================
* Date:           Mon Jul 30 01:22:09 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        test128mau128
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     0.000|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    1|    1|    1|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%free_target_read = call i7 @_ssdm_op_Read.ap_auto.i7(i7 %free_target)"   --->   Operation 3 'read' 'free_target_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%free_target_cast = zext i7 %free_target_read to i32"   --->   Operation 4 'zext' 'free_target_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.volatile.i8P(i8* %allocator_cmd, i8 3)" [test128mau128/solution1/top.cc:43]   --->   Operation 5 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.volatile.i32P(i32* %allocator_size, i32 0)" [test128mau128/solution1/top.cc:45]   --->   Operation 6 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.volatile.i32P(i32* %allocator_free_targe, i32 %free_target_cast)" [test128mau128/solution1/top.cc:46]   --->   Operation 7 'write' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProtocol(i32 1, [1 x i8]* @p_str1) nounwind" [test128mau128/solution1/top.cc:42]   --->   Operation 8 'specprotocol' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProtocol(i32 1, [1 x i8]* @p_str1) nounwind" [test128mau128/solution1/top.cc:44]   --->   Operation 9 'specprotocol' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_Wait(i32 1) nounwind" [test128mau128/solution1/top.cc:47]   --->   Operation 10 'wait' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 11 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ free_target]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ allocator_size]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_hs:ce=0
Port [ allocator_free_targe]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_hs:ce=0
Port [ allocator_cmd]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_hs:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
free_target_read (read        ) [ 000]
free_target_cast (zext        ) [ 000]
StgValue_5       (write       ) [ 000]
StgValue_6       (write       ) [ 000]
StgValue_7       (write       ) [ 000]
StgValue_8       (specprotocol) [ 000]
StgValue_9       (specprotocol) [ 000]
StgValue_10      (wait        ) [ 000]
StgValue_11      (ret         ) [ 000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="free_target">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="free_target"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="allocator_size">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="allocator_size"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="allocator_free_targe">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="allocator_free_targe"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="allocator_cmd">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="allocator_cmd"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i7"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_auto.volatile.i8P"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_auto.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecProtocol"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Wait"/></StgValue>
</bind>
</comp>

<comp id="26" class="1004" name="free_target_read_read_fu_26">
<pin_list>
<pin id="27" dir="0" index="0" bw="7" slack="0"/>
<pin id="28" dir="0" index="1" bw="7" slack="0"/>
<pin id="29" dir="1" index="2" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="free_target_read/1 "/>
</bind>
</comp>

<comp id="32" class="1004" name="StgValue_5_write_fu_32">
<pin_list>
<pin id="33" dir="0" index="0" bw="0" slack="0"/>
<pin id="34" dir="0" index="1" bw="8" slack="0"/>
<pin id="35" dir="0" index="2" bw="3" slack="0"/>
<pin id="36" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_5/1 "/>
</bind>
</comp>

<comp id="40" class="1004" name="StgValue_6_write_fu_40">
<pin_list>
<pin id="41" dir="0" index="0" bw="0" slack="0"/>
<pin id="42" dir="0" index="1" bw="32" slack="0"/>
<pin id="43" dir="0" index="2" bw="1" slack="0"/>
<pin id="44" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_6/1 "/>
</bind>
</comp>

<comp id="48" class="1004" name="StgValue_7_write_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="0" slack="0"/>
<pin id="50" dir="0" index="1" bw="32" slack="0"/>
<pin id="51" dir="0" index="2" bw="7" slack="0"/>
<pin id="52" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_7/1 "/>
</bind>
</comp>

<comp id="55" class="1004" name="free_target_cast_fu_55">
<pin_list>
<pin id="56" dir="0" index="0" bw="7" slack="0"/>
<pin id="57" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="free_target_cast/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="30"><net_src comp="8" pin="0"/><net_sink comp="26" pin=0"/></net>

<net id="31"><net_src comp="0" pin="0"/><net_sink comp="26" pin=1"/></net>

<net id="37"><net_src comp="10" pin="0"/><net_sink comp="32" pin=0"/></net>

<net id="38"><net_src comp="6" pin="0"/><net_sink comp="32" pin=1"/></net>

<net id="39"><net_src comp="12" pin="0"/><net_sink comp="32" pin=2"/></net>

<net id="45"><net_src comp="14" pin="0"/><net_sink comp="40" pin=0"/></net>

<net id="46"><net_src comp="2" pin="0"/><net_sink comp="40" pin=1"/></net>

<net id="47"><net_src comp="16" pin="0"/><net_sink comp="40" pin=2"/></net>

<net id="53"><net_src comp="14" pin="0"/><net_sink comp="48" pin=0"/></net>

<net id="54"><net_src comp="4" pin="0"/><net_sink comp="48" pin=1"/></net>

<net id="58"><net_src comp="26" pin="2"/><net_sink comp="55" pin=0"/></net>

<net id="59"><net_src comp="55" pin="1"/><net_sink comp="48" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: allocator_size | {1 }
	Port: allocator_free_targe | {1 }
	Port: allocator_cmd | {1 }
 - Input state : 
	Port: HLS_free<1> : free_target | {1 }
  - Chain level:
	State 1
		StgValue_7 : 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-----------------------------|
| Operation|       Functional Unit       |
|----------|-----------------------------|
|   read   | free_target_read_read_fu_26 |
|----------|-----------------------------|
|          |    StgValue_5_write_fu_32   |
|   write  |    StgValue_6_write_fu_40   |
|          |    StgValue_7_write_fu_48   |
|----------|-----------------------------|
|   zext   |    free_target_cast_fu_55   |
|----------|-----------------------------|
|   Total  |                             |
|----------|-----------------------------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+
|           |
+-----------+
|  Function |
|   Memory  |
|Multiplexer|
|  Register |
+-----------+
|   Total   |
+-----------+
