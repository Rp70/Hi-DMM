-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity acc4kmau_req_cmd_rom is 
    generic(
             DWIDTH     : integer := 2; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 1024
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of acc4kmau_req_cmd_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 2=> "10", 3 to 4=> "11", 5 to 7=> "10", 8 => "11", 9 => "10", 10 to 11=> "11", 
    12 to 15=> "10", 16 => "11", 17 => "10", 18 => "11", 19 to 21=> "10", 22 to 23=> "11", 
    24 to 26=> "10", 27 => "11", 28 to 29=> "10", 30 => "11", 31 to 41=> "10", 42 to 44=> "11", 
    45 => "10", 46 => "11", 47 to 49=> "10", 50 to 51=> "11", 52 to 54=> "10", 55 => "11", 
    56 => "10", 57 to 59=> "11", 60 to 61=> "10", 62 to 63=> "11", 64 to 65=> "10", 66 => "11", 
    67 to 70=> "10", 71 => "11", 72 => "10", 73 => "11", 74 => "10", 75 to 77=> "11", 
    78 to 79=> "10", 80 => "11", 81 to 85=> "10", 86 => "11", 87 => "10", 88 => "11", 
    89 => "10", 90 => "11", 91 => "10", 92 to 94=> "11", 95 to 99=> "10", 100 to 103=> "11", 
    104 to 105=> "10", 106 => "11", 107 => "10", 108 => "11", 109 to 115=> "10", 116 => "11", 
    117 => "10", 118 => "11", 119 to 121=> "10", 122 => "11", 123 => "10", 124 to 125=> "11", 
    126 to 127=> "10", 128 => "11", 129 => "10", 130 to 131=> "11", 132 => "10", 133 => "11", 
    134 => "10", 135 => "11", 136 to 137=> "10", 138 => "11", 139 to 141=> "10", 142 => "11", 
    143 to 145=> "10", 146 => "11", 147 to 148=> "10", 149 to 150=> "11", 151 => "10", 152 => "11", 
    153 to 155=> "10", 156 to 157=> "11", 158 to 160=> "10", 161 => "11", 162 to 168=> "10", 169 => "11", 
    170 => "10", 171 to 172=> "11", 173 => "10", 174 to 175=> "11", 176 => "10", 177 to 178=> "11", 
    179 to 180=> "10", 181 to 187=> "11", 188 to 189=> "10", 190 to 191=> "11", 192 => "10", 193 to 194=> "11", 
    195 => "10", 196 => "11", 197 => "10", 198 => "11", 199 to 204=> "10", 205 => "11", 
    206 => "10", 207 to 208=> "11", 209 to 211=> "10", 212 to 213=> "11", 214 => "10", 215 => "11", 
    216 to 218=> "10", 219 => "11", 220 to 222=> "10", 223 to 225=> "11", 226 to 227=> "10", 228 to 230=> "11", 
    231 => "10", 232 => "11", 233 to 235=> "10", 236 => "11", 237 to 240=> "10", 241 => "11", 
    242 to 244=> "10", 245 => "11", 246 to 247=> "10", 248 => "11", 249 to 250=> "10", 251 => "11", 
    252 => "10", 253 => "11", 254 to 255=> "10", 256 => "11", 257 => "10", 258 to 260=> "11", 
    261 to 265=> "10", 266 to 267=> "11", 268 => "10", 269 => "11", 270 => "10", 271 => "11", 
    272 to 276=> "10", 277 to 279=> "11", 280 to 282=> "10", 283 => "11", 284 to 285=> "10", 286 to 287=> "11", 
    288 to 290=> "10", 291 => "11", 292 => "10", 293 => "11", 294 to 298=> "10", 299 => "11", 
    300 => "10", 301 to 302=> "11", 303 => "10", 304 => "11", 305 to 310=> "10", 311 to 313=> "11", 
    314 => "10", 315 => "11", 316 to 317=> "10", 318 => "11", 319 to 322=> "10", 323 => "11", 
    324 to 325=> "10", 326 to 327=> "11", 328 => "10", 329 => "11", 330 => "10", 331 to 332=> "11", 
    333 to 335=> "10", 336 => "11", 337 to 338=> "10", 339 => "11", 340 to 341=> "10", 342 to 343=> "11", 
    344 to 346=> "10", 347 => "11", 348 to 349=> "10", 350 => "11", 351 to 353=> "10", 354 to 355=> "11", 
    356 => "10", 357 to 358=> "11", 359 to 362=> "10", 363 => "11", 364 to 366=> "10", 367 to 369=> "11", 
    370 => "10", 371 to 372=> "11", 373 to 374=> "10", 375 => "11", 376 to 378=> "10", 379 to 382=> "11", 
    383 => "10", 384 => "11", 385 to 387=> "10", 388 => "11", 389 to 390=> "10", 391 to 398=> "11", 
    399 => "10", 400 to 1023=> "00" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity acc4kmau_req_cmd is
    generic (
        DataWidth : INTEGER := 2;
        AddressRange : INTEGER := 1024;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of acc4kmau_req_cmd is
    component acc4kmau_req_cmd_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    acc4kmau_req_cmd_rom_U :  component acc4kmau_req_cmd_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


