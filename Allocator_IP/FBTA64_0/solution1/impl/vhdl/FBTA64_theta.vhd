-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FBTA64_theta is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    alloc_size : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_size_ap_vld : IN STD_LOGIC;
    alloc_size_ap_ack : OUT STD_LOGIC;
    alloc_free_target : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_free_target_ap_vld : IN STD_LOGIC;
    alloc_free_target_ap_ack : OUT STD_LOGIC;
    alloc_addr : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_addr_ap_vld : OUT STD_LOGIC;
    alloc_addr_ap_ack : IN STD_LOGIC;
    alloc_cmd : IN STD_LOGIC_VECTOR (7 downto 0);
    alloc_cmd_ap_vld : IN STD_LOGIC;
    alloc_cmd_ap_ack : OUT STD_LOGIC );
end;


architecture behav of FBTA64_theta is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "FBTA64_theta,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.356500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=1017,HLS_SYN_LUT=3864,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_FF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011111111";
    constant ap_const_lv64_FFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000011111111111111111111111111111111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_FFFF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000001111111111111111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal buddy_tree_V_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal buddy_tree_V_1_ce0 : STD_LOGIC;
    signal buddy_tree_V_1_we0 : STD_LOGIC;
    signal buddy_tree_V_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_1_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal buddy_tree_V_1_ce1 : STD_LOGIC;
    signal buddy_tree_V_1_we1 : STD_LOGIC;
    signal buddy_tree_V_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal buddy_tree_V_0_ce0 : STD_LOGIC;
    signal buddy_tree_V_0_we0 : STD_LOGIC;
    signal buddy_tree_V_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_0_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal buddy_tree_V_0_ce1 : STD_LOGIC;
    signal buddy_tree_V_0_we1 : STD_LOGIC;
    signal buddy_tree_V_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal addr_layer_map_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal addr_layer_map_V_ce0 : STD_LOGIC;
    signal addr_layer_map_V_we0 : STD_LOGIC;
    signal addr_layer_map_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal alloc_size_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal alloc_free_target_blk_n : STD_LOGIC;
    signal alloc_addr_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal alloc_cmd_blk_n : STD_LOGIC;
    signal p_01606_0_in_reg_444 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_01598_1_in_reg_454 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_01590_5_in_reg_463 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_01594_1_in_reg_473 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_01586_3_in_reg_482 : STD_LOGIC_VECTOR (7 downto 0);
    signal op2_assign_5_reg_491 : STD_LOGIC_VECTOR (8 downto 0);
    signal size_V_fu_546_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal size_V_reg_1531 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal free_target_V_fu_550_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal free_target_V_reg_1536 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_560_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_reg_1543 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_s_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1553 : STD_LOGIC_VECTOR (0 downto 0);
    signal ans_V_fu_717_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ans_V_reg_1558 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal addr_layer_map_V_loa_reg_1572 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_27_fu_733_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_1578 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex2_fu_747_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex2_reg_1583 : STD_LOGIC_VECTOR (63 downto 0);
    signal ans_V_2_fu_753_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ans_V_2_reg_1599 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal r_V_12_fu_805_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_reg_1605 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_834_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_reg_1611 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_2_fu_840_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal r_V_fu_853_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal now1_V_4_fu_858_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal now1_V_4_reg_1628 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state8_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp1_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_1633 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_1633_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_880_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_1637 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_1637_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex6_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex6_reg_1642 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex6_reg_1642_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal loc1_V_fu_900_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal loc1_V_reg_1658 : STD_LOGIC_VECTOR (6 downto 0);
    signal buddy_tree_V_0_load_2_reg_1663 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal buddy_tree_V_1_load_2_reg_1668 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_3_fu_914_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_reg_1673 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_fu_975_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal p_Repl2_2_fu_981_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_2_reg_1684 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state12_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_29_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1689 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_fu_993_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_s_reg_1693 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_fu_999_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1698 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_13_fu_1057_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_13_reg_1703 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex9_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex9_reg_1708 : STD_LOGIC_VECTOR (63 downto 0);
    signal cnt_fu_1079_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_s_fu_1099_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_s_reg_1729 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_20_fu_1105_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1736 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex4_fu_1119_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex4_reg_1741 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_load_1_s_fu_1125_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_load_1_s_reg_1757 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_5_fu_1132_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_1765 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_1138_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_reg_1770 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal tmp_V_fu_1142_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_reg_1775 : STD_LOGIC_VECTOR (63 downto 0);
    signal now1_V_cast_fu_1152_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal now1_V_cast_reg_1780 : STD_LOGIC_VECTOR (7 downto 0);
    signal now2_V_fu_1156_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal now2_V_reg_1785 : STD_LOGIC_VECTOR (3 downto 0);
    signal now2_V_1_cast_fu_1161_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal now2_V_1_cast_reg_1790 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1171_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_reg_1795 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc1_V_11_log_2_64bit_fu_522_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal loc1_V_11_reg_1801 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_18_fu_1176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_1807 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc1_V_2_reg_1812 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_46_fu_1235_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_alloc_addr_ap_ack : STD_LOGIC;
    signal op2_assign_2_fu_1274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal op2_assign_2_reg_1843 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal tmp_25_fu_1280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_1848 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_reg_1852 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_fu_1362_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_reg_1856 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_1368_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_1861 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex_fu_1382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex_reg_1866 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1882 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex10_fu_1404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex10_reg_1886 : STD_LOGIC_VECTOR (63 downto 0);
    signal now1_V_2_fu_1509_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal now2_V_2_fu_1518_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state8 : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal loc1_V_11_log_2_64bit_fu_522_ap_ready : STD_LOGIC;
    signal ap_phi_mux_p_01598_1_in_phi_fu_457_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_p_01590_5_in_phi_fu_466_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_p_01594_1_in_phi_fu_476_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_p_01586_3_in_phi_fu_485_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_4_reg_502 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_reg_512 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_fu_1453_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmd_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal cnt_1_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal cnt_2_fu_1430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc2_V_2_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_10_fu_1230_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc2_V_3_fu_1424_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc1_V_6_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc1_V_4_fu_1227_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc1_V_9_fu_1490_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_cast_fu_1217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_alloc_addr_ap_ack : STD_LOGIC := '0';
    signal tmp_35_fu_964_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_5_fu_1092_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_8_fu_1417_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_1465_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_size_V_fu_554_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_not_fu_581_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_586_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_cast_cast_fu_641_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal newSel_fu_655_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_cond1_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel1_fu_669_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp2_fu_597_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_cond3_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_fu_683_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal newSel3_fu_697_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal newSel4_fu_705_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_cast_fu_713_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_30_fu_737_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs_V_cast_cast_fu_756_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_11_fu_759_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_fu_780_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_777_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_cast_fu_786_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_11_cast5_fu_765_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_790_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_769_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_801_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_796_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_813_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_3_fu_817_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal buddy_tree_V_load_ph_fu_827_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_849_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_fu_864_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal newIndex5_fu_884_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal loc1_V_12_fu_910_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_fu_924_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_932_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_942_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_946_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_4_fu_949_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal buddy_tree_V_load_2_s_fu_959_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_955_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1017_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_fu_1031_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_64_fu_1003_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1017_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_1031_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal mask_V_load_phi_fu_1045_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex8_fu_1063_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_1_fu_1085_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex3_fu_1109_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal now1_V_fu_1147_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal op2_assign_fu_1165_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_cast_fu_1190_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_cast_fu_1193_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1196_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_4_fu_1202_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_addr_V_cast_fu_1206_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_fu_1210_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_53_fu_1258_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_fu_1268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_1286_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_36_fu_1316_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_37_fu_1330_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_fu_1302_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1316_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1330_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal mask_V_load_1_phi_fu_1344_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_1352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_7_fu_1356_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex1_fu_1372_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal newIndex7_fu_1394_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_fu_1410_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_5_fu_1457_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_assign_fu_1449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc1_V_5_fu_1480_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal op2_assign_1_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_1505_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_1515_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component log_2_64bit IS
    port (
        ap_ready : OUT STD_LOGIC;
        tmp_V : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component FBTA64_theta_mux_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FBTA64_theta_buddbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FBTA64_theta_buddcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FBTA64_theta_addrdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    buddy_tree_V_1_U : component FBTA64_theta_buddbkb
    generic map (
        DataWidth => 64,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buddy_tree_V_1_address0,
        ce0 => buddy_tree_V_1_ce0,
        we0 => buddy_tree_V_1_we0,
        d0 => buddy_tree_V_1_d0,
        q0 => buddy_tree_V_1_q0,
        address1 => buddy_tree_V_1_address1,
        ce1 => buddy_tree_V_1_ce1,
        we1 => buddy_tree_V_1_we1,
        d1 => buddy_tree_V_1_d1,
        q1 => buddy_tree_V_1_q1);

    buddy_tree_V_0_U : component FBTA64_theta_buddcud
    generic map (
        DataWidth => 64,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buddy_tree_V_0_address0,
        ce0 => buddy_tree_V_0_ce0,
        we0 => buddy_tree_V_0_we0,
        d0 => buddy_tree_V_0_d0,
        q0 => buddy_tree_V_0_q0,
        address1 => buddy_tree_V_0_address1,
        ce1 => buddy_tree_V_0_ce1,
        we1 => buddy_tree_V_0_we1,
        d1 => buddy_tree_V_0_d1,
        q1 => buddy_tree_V_0_q1);

    addr_layer_map_V_U : component FBTA64_theta_addrdEe
    generic map (
        DataWidth => 4,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => addr_layer_map_V_address0,
        ce0 => addr_layer_map_V_ce0,
        we0 => addr_layer_map_V_we0,
        d0 => p_s_reg_1729,
        q0 => addr_layer_map_V_q0);

    loc1_V_11_log_2_64bit_fu_522 : component log_2_64bit
    port map (
        ap_ready => loc1_V_11_log_2_64bit_fu_522_ap_ready,
        tmp_V => tmp_V_reg_1775,
        ap_return => loc1_V_11_log_2_64bit_fu_522_ap_return);

    FBTA64_theta_mux_eOg_U2 : component FBTA64_theta_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_3,
        din1 => ap_const_lv64_FF,
        din2 => ap_const_lv64_FFFFFFFF,
        din3 => ap_const_lv64_FFFFFFFFFFFFFFFF,
        din4 => tmp_41_fu_1017_p5,
        dout => tmp_41_fu_1017_p6);

    FBTA64_theta_mux_eOg_U3 : component FBTA64_theta_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_0,
        din1 => ap_const_lv64_F,
        din2 => ap_const_lv64_FFFF,
        din3 => ap_const_lv64_FFFFFFFFFFFFFFFF,
        din4 => tmp_42_fu_1031_p5,
        dout => tmp_42_fu_1031_p6);

    FBTA64_theta_mux_eOg_U4 : component FBTA64_theta_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_3,
        din1 => ap_const_lv64_FF,
        din2 => ap_const_lv64_FFFFFFFF,
        din3 => ap_const_lv64_FFFFFFFFFFFFFFFF,
        din4 => tmp_36_fu_1316_p5,
        dout => tmp_36_fu_1316_p6);

    FBTA64_theta_mux_eOg_U5 : component FBTA64_theta_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_0,
        din1 => ap_const_lv64_F,
        din2 => ap_const_lv64_FFFF,
        din3 => ap_const_lv64_FFFFFFFFFFFFFFFF,
        din4 => tmp_37_fu_1330_p5,
        dout => tmp_37_fu_1330_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state12);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_alloc_addr_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                    if ((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)) then 
                        ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = alloc_addr_ap_ack)) then 
                        ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    cmd_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                cmd_fu_172 <= alloc_cmd;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                cmd_fu_172 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    cnt_1_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp2_reg_1852 = ap_const_lv1_1) and (tmp_25_reg_1848 = ap_const_lv1_1))) then 
                cnt_1_fu_176 <= cnt_2_fu_1430_p2;
            elsif (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (tmp_46_fu_1235_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cnt_1_fu_176 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    loc1_V_6_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_44_reg_1882 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_25_reg_1848 = ap_const_lv1_1))) then 
                                loc1_V_6_fu_184(6 downto 0) <= loc1_V_9_fu_1490_p1(6 downto 0);
            elsif (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (tmp_46_fu_1235_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                                loc1_V_6_fu_184(6 downto 0) <= loc1_V_4_fu_1227_p1(6 downto 0);
            end if; 
        end if;
    end process;

    loc2_V_2_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp2_reg_1852 = ap_const_lv1_1) and (tmp_25_reg_1848 = ap_const_lv1_1))) then 
                                loc2_V_2_fu_180(7 downto 1) <= loc2_V_3_fu_1424_p2(7 downto 1);
            elsif (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (tmp_46_fu_1235_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                                loc2_V_2_fu_180(7 downto 1) <= r_V_10_fu_1230_p2(7 downto 1);
            end if; 
        end if;
    end process;

    op2_assign_5_reg_491_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                op2_assign_5_reg_491 <= ap_const_lv9_1;
            elsif (((tmp_29_fu_987_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                op2_assign_5_reg_491 <= cnt_fu_1079_p2;
            end if; 
        end if;
    end process;

    p_01586_3_in_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                p_01586_3_in_reg_482 <= r_V_12_reg_1605;
            elsif (((tmp_29_reg_1689 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                p_01586_3_in_reg_482 <= p_Repl2_s_reg_1693;
            end if; 
        end if;
    end process;

    p_01590_5_in_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp1_reg_1633_pp0_iter1_reg = ap_const_lv1_1))) then 
                p_01590_5_in_reg_463 <= p_Result_3_reg_1673;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_01590_5_in_reg_463 <= p_Result_2_fu_840_p4;
            end if; 
        end if;
    end process;

    p_01594_1_in_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                p_01594_1_in_reg_473 <= ans_V_2_reg_1599;
            elsif (((tmp_29_reg_1689 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                p_01594_1_in_reg_473 <= p_Repl2_2_reg_1684;
            end if; 
        end if;
    end process;

    p_01598_1_in_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp1_reg_1633 = ap_const_lv1_1))) then 
                p_01598_1_in_reg_454 <= now1_V_4_reg_1628;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_01598_1_in_reg_454 <= ans_V_2_reg_1599;
            end if; 
        end if;
    end process;

    p_01606_0_in_reg_444_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp1_reg_1633_pp0_iter1_reg = ap_const_lv1_1))) then 
                p_01606_0_in_reg_444 <= r_V_3_fu_975_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_01606_0_in_reg_444 <= r_V_fu_853_p2;
            end if; 
        end if;
    end process;

    p_4_reg_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (tmp_46_fu_1235_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                p_4_reg_502 <= now1_V_cast_reg_1780;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_25_reg_1848 = ap_const_lv1_1))) then 
                p_4_reg_502 <= now1_V_2_fu_1509_p2;
            end if; 
        end if;
    end process;

    p_5_reg_512_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (tmp_46_fu_1235_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                p_5_reg_512 <= now2_V_1_cast_reg_1790;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_25_reg_1848 = ap_const_lv1_1))) then 
                p_5_reg_512 <= now2_V_2_fu_1518_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                addr_layer_map_V_loa_reg_1572 <= addr_layer_map_V_q0;
                    newIndex2_reg_1583(2 downto 0) <= newIndex2_fu_747_p1(2 downto 0);
                tmp_27_reg_1578 <= tmp_27_fu_733_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    ans_V_2_reg_1599(3 downto 0) <= ans_V_2_fu_753_p1(3 downto 0);
                r_V_12_reg_1605 <= r_V_12_fu_805_p3;
                tmp_17_reg_1611 <= tmp_17_fu_834_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_570_p2 = ap_const_lv1_1))) then
                ans_V_reg_1558 <= ans_V_fu_717_p2;
                tmp_s_reg_1553 <= tmp_s_fu_576_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp1_reg_1633 = ap_const_lv1_1))) then
                buddy_tree_V_0_load_2_reg_1663 <= buddy_tree_V_0_q0;
                buddy_tree_V_1_load_2_reg_1668 <= buddy_tree_V_1_q0;
                p_Result_3_reg_1673 <= p_Result_3_fu_914_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                buddy_tree_V_load_1_s_reg_1757 <= buddy_tree_V_load_1_s_fu_1125_p3;
                tmp_5_reg_1765 <= tmp_5_fu_1132_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                free_target_V_reg_1536 <= free_target_V_fu_550_p1;
                p_Result_1_reg_1543 <= p_Result_1_fu_560_p4;
                size_V_reg_1531 <= size_V_fu_546_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp1_reg_1633 <= icmp1_fu_874_p2;
                icmp1_reg_1633_pp0_iter1_reg <= icmp1_reg_1633;
                    newIndex6_reg_1642_pp0_iter1_reg(6 downto 0) <= newIndex6_reg_1642(6 downto 0);
                tmp_58_reg_1637_pp0_iter1_reg <= tmp_58_reg_1637;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_25_fu_1280_p2 = ap_const_lv1_1))) then
                icmp2_reg_1852 <= icmp2_fu_1296_p2;
                tmp_44_reg_1882 <= tmp_44_fu_1388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                loc1_V_11_reg_1801 <= loc1_V_11_log_2_64bit_fu_522_ap_return;
                loc1_V_2_reg_1812 <= loc1_V_11_log_2_64bit_fu_522_ap_return(7 downto 1);
                tmp_18_reg_1807 <= tmp_18_fu_1176_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp1_reg_1633 = ap_const_lv1_1))) then
                loc1_V_reg_1658 <= ap_phi_mux_p_01590_5_in_phi_fu_466_p4(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_44_fu_1388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_25_fu_1280_p2 = ap_const_lv1_1))) then
                    newIndex10_reg_1886(6 downto 0) <= newIndex10_fu_1404_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                    newIndex4_reg_1741(2 downto 0) <= newIndex4_fu_1119_p1(2 downto 0);
                p_s_reg_1729 <= p_s_fu_1099_p3;
                tmp_20_reg_1736 <= tmp_20_fu_1105_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp1_fu_874_p2 = ap_const_lv1_1))) then
                    newIndex6_reg_1642(6 downto 0) <= newIndex6_fu_894_p1(6 downto 0);
                tmp_58_reg_1637 <= tmp_58_fu_880_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_fu_987_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                    newIndex9_reg_1708(6 downto 0) <= newIndex9_fu_1073_p1(6 downto 0);
                r_V_13_reg_1703 <= r_V_13_fu_1057_p2;
                tmp_63_reg_1698 <= tmp_63_fu_999_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp2_fu_1296_p2 = ap_const_lv1_1) and (tmp_25_fu_1280_p2 = ap_const_lv1_1))) then
                    newIndex_reg_1866(6 downto 0) <= newIndex_fu_1382_p1(6 downto 0);
                rhs_V_reg_1856 <= rhs_V_fu_1362_p2;
                tmp_60_reg_1861 <= tmp_60_fu_1368_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                now1_V_4_reg_1628 <= now1_V_4_fu_858_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                    now1_V_cast_reg_1780(3 downto 0) <= now1_V_cast_fu_1152_p1(3 downto 0);
                    now2_V_1_cast_reg_1790(3 downto 0) <= now2_V_1_cast_fu_1161_p1(3 downto 0);
                now2_V_reg_1785 <= now2_V_fu_1156_p2;
                tmp_12_reg_1770 <= tmp_12_fu_1138_p2;
                tmp_13_reg_1795 <= tmp_13_fu_1171_p2;
                tmp_V_reg_1775 <= tmp_V_fu_1142_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                op2_assign_2_reg_1843 <= op2_assign_2_fu_1274_p2;
                tmp_25_reg_1848 <= tmp_25_fu_1280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_Repl2_2_reg_1684 <= p_Repl2_2_fu_981_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_fu_987_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                    p_Repl2_s_reg_1693(7 downto 1) <= p_Repl2_s_fu_993_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_29_reg_1689 <= tmp_29_fu_987_p2;
            end if;
        end if;
    end process;
    newIndex2_reg_1583(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    ans_V_2_reg_1599(7 downto 4) <= "0000";
    newIndex6_reg_1642(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex6_reg_1642_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    p_Repl2_s_reg_1693(0) <= '0';
    newIndex9_reg_1708(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex4_reg_1741(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    now1_V_cast_reg_1780(7 downto 4) <= "0000";
    now2_V_1_cast_reg_1790(7 downto 4) <= "0000";
    newIndex_reg_1866(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex10_reg_1886(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    loc2_V_2_fu_180(0) <= '0';
    loc1_V_6_fu_184(7) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2, ap_CS_fsm_state19, tmp_fu_570_p2, ap_CS_fsm_state3, tmp_6_fu_723_p2, ap_CS_fsm_state4, ap_enable_reg_pp0_iter0, icmp1_fu_874_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter0, tmp_29_fu_987_p2, tmp_46_fu_1235_p3, ap_sig_ioackin_alloc_addr_ap_ack, ap_CS_fsm_state20, tmp_25_fu_1280_p2, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_570_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_6_fu_723_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp1_fu_874_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp1_fu_874_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (tmp_29_fu_987_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (tmp_29_fu_987_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (tmp_46_fu_1235_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1235_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_25_fu_1280_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    addr_layer_map_V_address0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state4, tmp_8_fu_729_p1, tmp_21_fu_1222_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            addr_layer_map_V_address0 <= tmp_21_fu_1222_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            addr_layer_map_V_address0 <= tmp_8_fu_729_p1(7 - 1 downto 0);
        else 
            addr_layer_map_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    addr_layer_map_V_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state4, ap_sig_ioackin_alloc_addr_ap_ack)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            addr_layer_map_V_ce0 <= ap_const_logic_1;
        else 
            addr_layer_map_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    addr_layer_map_V_we0_assign_proc : process(ap_CS_fsm_state19, ap_sig_ioackin_alloc_addr_ap_ack)
    begin
        if (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            addr_layer_map_V_we0 <= ap_const_logic_1;
        else 
            addr_layer_map_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    alloc_addr <= p_Val2_4_cast_fu_1217_p1;

    alloc_addr_ap_vld_assign_proc : process(ap_CS_fsm_state19, ap_reg_ioackin_alloc_addr_ap_ack)
    begin
        if (((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            alloc_addr_ap_vld <= ap_const_logic_1;
        else 
            alloc_addr_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    alloc_addr_blk_n_assign_proc : process(alloc_addr_ap_ack, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            alloc_addr_blk_n <= alloc_addr_ap_ack;
        else 
            alloc_addr_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_cmd_ap_ack_assign_proc : process(alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_cmd_ap_ack <= ap_const_logic_1;
        else 
            alloc_cmd_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_cmd_blk_n_assign_proc : process(alloc_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_cmd_blk_n <= alloc_cmd_ap_vld;
        else 
            alloc_cmd_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_free_target_ap_ack_assign_proc : process(alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_free_target_ap_ack <= ap_const_logic_1;
        else 
            alloc_free_target_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_free_target_blk_n_assign_proc : process(alloc_free_target_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_free_target_blk_n <= alloc_free_target_ap_vld;
        else 
            alloc_free_target_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_size_ap_ack_assign_proc : process(alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_size_ap_ack <= ap_const_logic_1;
        else 
            alloc_size_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_size_blk_n_assign_proc : process(alloc_size_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_size_blk_n <= alloc_size_ap_vld;
        else 
            alloc_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ans_V_2_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_layer_map_V_loa_reg_1572),8));
    ans_V_fu_717_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(tmp_15_cast_fu_713_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state14 <= ap_CS_fsm(10);
    ap_CS_fsm_state15 <= ap_CS_fsm(11);
    ap_CS_fsm_state16 <= ap_CS_fsm(12);
    ap_CS_fsm_state17 <= ap_CS_fsm(13);
    ap_CS_fsm_state18 <= ap_CS_fsm(14);
    ap_CS_fsm_state19 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(16);
    ap_CS_fsm_state21 <= ap_CS_fsm(17);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_assign_proc : process(alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
                ap_block_state2 <= ((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld));
    end process;

        ap_block_state8_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state8_assign_proc : process(icmp1_fu_874_p2)
    begin
        if ((icmp1_fu_874_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state12_assign_proc : process(tmp_29_fu_987_p2)
    begin
        if ((tmp_29_fu_987_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_01586_3_in_phi_fu_485_p4_assign_proc : process(p_01586_3_in_reg_482, ap_CS_fsm_pp1_stage0, tmp_29_reg_1689, p_Repl2_s_reg_1693, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_29_reg_1689 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_p_01586_3_in_phi_fu_485_p4 <= p_Repl2_s_reg_1693;
        else 
            ap_phi_mux_p_01586_3_in_phi_fu_485_p4 <= p_01586_3_in_reg_482;
        end if; 
    end process;


    ap_phi_mux_p_01590_5_in_phi_fu_466_p4_assign_proc : process(p_01590_5_in_reg_463, icmp1_reg_1633_pp0_iter1_reg, p_Result_3_reg_1673, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp1_reg_1633_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_01590_5_in_phi_fu_466_p4 <= p_Result_3_reg_1673;
        else 
            ap_phi_mux_p_01590_5_in_phi_fu_466_p4 <= p_01590_5_in_reg_463;
        end if; 
    end process;


    ap_phi_mux_p_01594_1_in_phi_fu_476_p4_assign_proc : process(p_01594_1_in_reg_473, p_Repl2_2_reg_1684, ap_CS_fsm_pp1_stage0, tmp_29_reg_1689, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_29_reg_1689 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_p_01594_1_in_phi_fu_476_p4 <= p_Repl2_2_reg_1684;
        else 
            ap_phi_mux_p_01594_1_in_phi_fu_476_p4 <= p_01594_1_in_reg_473;
        end if; 
    end process;


    ap_phi_mux_p_01598_1_in_phi_fu_457_p4_assign_proc : process(p_01598_1_in_reg_454, now1_V_4_reg_1628, ap_CS_fsm_pp0_stage0, icmp1_reg_1633, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp1_reg_1633 = ap_const_lv1_1))) then 
            ap_phi_mux_p_01598_1_in_phi_fu_457_p4 <= now1_V_4_reg_1628;
        else 
            ap_phi_mux_p_01598_1_in_phi_fu_457_p4 <= p_01598_1_in_reg_454;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_alloc_addr_ap_ack_assign_proc : process(alloc_addr_ap_ack, ap_reg_ioackin_alloc_addr_ap_ack)
    begin
        if ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0)) then 
            ap_sig_ioackin_alloc_addr_ap_ack <= alloc_addr_ap_ack;
        else 
            ap_sig_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
        end if; 
    end process;


    buddy_tree_V_0_address0_assign_proc : process(ap_CS_fsm_state5, newIndex2_fu_747_p1, newIndex2_reg_1583, ap_CS_fsm_state7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, newIndex6_fu_894_p1, ap_CS_fsm_pp1_stage0, newIndex9_reg_1708, ap_CS_fsm_state20, newIndex_fu_1382_p1, newIndex_reg_1866, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            buddy_tree_V_0_address0 <= newIndex_reg_1866(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            buddy_tree_V_0_address0 <= newIndex_fu_1382_p1(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buddy_tree_V_0_address0 <= newIndex9_reg_1708(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buddy_tree_V_0_address0 <= newIndex6_fu_894_p1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buddy_tree_V_0_address0 <= newIndex2_reg_1583(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buddy_tree_V_0_address0 <= newIndex2_fu_747_p1(2 - 1 downto 0);
        else 
            buddy_tree_V_0_address0 <= "XX";
        end if; 
    end process;


    buddy_tree_V_0_address1_assign_proc : process(newIndex6_reg_1642_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, newIndex9_fu_1073_p1, ap_CS_fsm_state15, newIndex4_fu_1119_p1, newIndex4_reg_1741, ap_CS_fsm_state18, ap_CS_fsm_state20, newIndex10_fu_1404_p1, newIndex10_reg_1886, ap_CS_fsm_state21, ap_block_pp0_stage0, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            buddy_tree_V_0_address1 <= newIndex10_reg_1886(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            buddy_tree_V_0_address1 <= newIndex10_fu_1404_p1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            buddy_tree_V_0_address1 <= newIndex4_reg_1741(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            buddy_tree_V_0_address1 <= newIndex4_fu_1119_p1(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buddy_tree_V_0_address1 <= newIndex9_fu_1073_p1(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buddy_tree_V_0_address1 <= newIndex6_reg_1642_pp0_iter1_reg(2 - 1 downto 0);
        else 
            buddy_tree_V_0_address1 <= "XX";
        end if; 
    end process;


    buddy_tree_V_0_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buddy_tree_V_0_ce0 <= ap_const_logic_1;
        else 
            buddy_tree_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_state15, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buddy_tree_V_0_ce1 <= ap_const_logic_1;
        else 
            buddy_tree_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_0_d0_assign_proc : process(tmp_17_reg_1611, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, r_V_5_fu_1092_p2, r_V_8_fu_1417_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            buddy_tree_V_0_d0 <= r_V_8_fu_1417_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buddy_tree_V_0_d0 <= r_V_5_fu_1092_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buddy_tree_V_0_d0 <= tmp_17_reg_1611;
        else 
            buddy_tree_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buddy_tree_V_0_d1_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_13_reg_1795, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_block_pp0_stage0, tmp_35_fu_964_p2, p_Result_s_fu_1465_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            buddy_tree_V_0_d1 <= p_Result_s_fu_1465_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            buddy_tree_V_0_d1 <= tmp_13_reg_1795;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buddy_tree_V_0_d1 <= tmp_35_fu_964_p2;
        else 
            buddy_tree_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buddy_tree_V_0_we0_assign_proc : process(tmp_27_reg_1578, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_63_reg_1698, tmp_25_reg_1848, icmp2_reg_1852, tmp_60_reg_1861, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1)
    begin
        if ((((tmp_60_reg_1861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21) and (icmp2_reg_1852 = ap_const_lv1_1) and (tmp_25_reg_1848 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_63_reg_1698 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_27_reg_1578 = ap_const_lv1_0)))) then 
            buddy_tree_V_0_we0 <= ap_const_logic_1;
        else 
            buddy_tree_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_0_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_58_reg_1637_pp0_iter1_reg, ap_enable_reg_pp0_iter2, tmp_20_reg_1736, ap_CS_fsm_state18, tmp_25_reg_1848, tmp_44_reg_1882, ap_CS_fsm_state21, tmp_66_fu_1453_p1)
    begin
        if ((((tmp_66_fu_1453_p1 = ap_const_lv1_0) and (tmp_44_reg_1882 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_25_reg_1848 = ap_const_lv1_1)) or ((tmp_20_reg_1736 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_58_reg_1637_pp0_iter1_reg = ap_const_lv1_1)))) then 
            buddy_tree_V_0_we1 <= ap_const_logic_1;
        else 
            buddy_tree_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_1_address0_assign_proc : process(ap_CS_fsm_state5, newIndex2_fu_747_p1, newIndex2_reg_1583, ap_CS_fsm_state7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, newIndex6_fu_894_p1, ap_CS_fsm_pp1_stage0, newIndex9_reg_1708, ap_CS_fsm_state20, newIndex_fu_1382_p1, newIndex_reg_1866, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            buddy_tree_V_1_address0 <= newIndex_reg_1866(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            buddy_tree_V_1_address0 <= newIndex_fu_1382_p1(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buddy_tree_V_1_address0 <= newIndex9_reg_1708(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buddy_tree_V_1_address0 <= newIndex6_fu_894_p1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buddy_tree_V_1_address0 <= newIndex2_reg_1583(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buddy_tree_V_1_address0 <= newIndex2_fu_747_p1(2 - 1 downto 0);
        else 
            buddy_tree_V_1_address0 <= "XX";
        end if; 
    end process;


    buddy_tree_V_1_address1_assign_proc : process(newIndex6_reg_1642_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, newIndex9_fu_1073_p1, ap_CS_fsm_state15, newIndex4_fu_1119_p1, newIndex4_reg_1741, ap_CS_fsm_state18, ap_CS_fsm_state20, newIndex10_fu_1404_p1, newIndex10_reg_1886, ap_CS_fsm_state21, ap_block_pp0_stage0, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            buddy_tree_V_1_address1 <= newIndex10_reg_1886(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            buddy_tree_V_1_address1 <= newIndex10_fu_1404_p1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            buddy_tree_V_1_address1 <= newIndex4_reg_1741(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            buddy_tree_V_1_address1 <= newIndex4_fu_1119_p1(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buddy_tree_V_1_address1 <= newIndex9_fu_1073_p1(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buddy_tree_V_1_address1 <= newIndex6_reg_1642_pp0_iter1_reg(2 - 1 downto 0);
        else 
            buddy_tree_V_1_address1 <= "XX";
        end if; 
    end process;


    buddy_tree_V_1_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buddy_tree_V_1_ce0 <= ap_const_logic_1;
        else 
            buddy_tree_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_state15, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buddy_tree_V_1_ce1 <= ap_const_logic_1;
        else 
            buddy_tree_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_1_d0_assign_proc : process(tmp_17_reg_1611, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, r_V_5_fu_1092_p2, r_V_8_fu_1417_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            buddy_tree_V_1_d0 <= r_V_8_fu_1417_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buddy_tree_V_1_d0 <= r_V_5_fu_1092_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buddy_tree_V_1_d0 <= tmp_17_reg_1611;
        else 
            buddy_tree_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buddy_tree_V_1_d1_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_13_reg_1795, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_block_pp0_stage0, tmp_35_fu_964_p2, p_Result_s_fu_1465_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            buddy_tree_V_1_d1 <= p_Result_s_fu_1465_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            buddy_tree_V_1_d1 <= tmp_13_reg_1795;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buddy_tree_V_1_d1 <= tmp_35_fu_964_p2;
        else 
            buddy_tree_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buddy_tree_V_1_we0_assign_proc : process(tmp_27_reg_1578, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, tmp_63_reg_1698, tmp_25_reg_1848, icmp2_reg_1852, tmp_60_reg_1861, ap_CS_fsm_state21, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_60_reg_1861 = ap_const_lv1_1) and (icmp2_reg_1852 = ap_const_lv1_1) and (tmp_25_reg_1848 = ap_const_lv1_1)) or ((tmp_63_reg_1698 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_27_reg_1578 = ap_const_lv1_1)))) then 
            buddy_tree_V_1_we0 <= ap_const_logic_1;
        else 
            buddy_tree_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_58_reg_1637_pp0_iter1_reg, ap_enable_reg_pp0_iter2, tmp_20_reg_1736, ap_CS_fsm_state18, tmp_25_reg_1848, tmp_44_reg_1882, ap_CS_fsm_state21, tmp_66_fu_1453_p1)
    begin
        if ((((tmp_44_reg_1882 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_66_fu_1453_p1 = ap_const_lv1_1) and (tmp_25_reg_1848 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_20_reg_1736 = ap_const_lv1_1)) or ((tmp_58_reg_1637_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buddy_tree_V_1_we1 <= ap_const_logic_1;
        else 
            buddy_tree_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buddy_tree_V_load_1_s_fu_1125_p3 <= 
        buddy_tree_V_1_q1 when (tmp_20_reg_1736(0) = '1') else 
        buddy_tree_V_0_q1;
    buddy_tree_V_load_2_s_fu_959_p3 <= 
        buddy_tree_V_0_load_2_reg_1663 when (tmp_58_reg_1637_pp0_iter1_reg(0) = '1') else 
        buddy_tree_V_1_load_2_reg_1668;
    buddy_tree_V_load_ph_fu_827_p3 <= 
        buddy_tree_V_1_q0 when (tmp_27_reg_1578(0) = '1') else 
        buddy_tree_V_0_q0;
    cnt_2_fu_1430_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(cnt_1_fu_176));
    cnt_fu_1079_p2 <= std_logic_vector(unsigned(op2_assign_5_reg_491) + unsigned(ap_const_lv9_1));
    free_target_V_fu_550_p1 <= alloc_free_target(8 - 1 downto 0);
    i_assign_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_6_fu_184),32));
    icmp1_fu_874_p2 <= "1" when (tmp_54_fu_864_p4 = ap_const_lv5_0) else "0";
    icmp2_fu_1296_p2 <= "1" when (tmp_55_fu_1286_p4 = ap_const_lv5_0) else "0";
    icmp_fu_1268_p2 <= "1" when (tmp_53_fu_1258_p4 = ap_const_lv5_0) else "0";
    lhs_V_1_fu_1085_p3 <= 
        buddy_tree_V_0_q1 when (tmp_63_reg_1698(0) = '1') else 
        buddy_tree_V_1_q1;
    lhs_V_cast_cast_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_layer_map_V_loa_reg_1572),5));
    lhs_V_fu_1410_p3 <= 
        buddy_tree_V_1_q0 when (tmp_60_reg_1861(0) = '1') else 
        buddy_tree_V_0_q0;
    loc1_V_12_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_fu_900_p4),8));
    loc1_V_4_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_2_reg_1812),8));
    loc1_V_5_fu_1480_p4 <= loc1_V_6_fu_184(7 downto 1);
    loc1_V_9_fu_1490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_5_fu_1480_p4),8));
    loc1_V_fu_900_p4 <= ap_phi_mux_p_01590_5_in_phi_fu_466_p4(7 downto 1);
    loc2_V_3_fu_1424_p2 <= std_logic_vector(shift_left(unsigned(loc2_V_2_fu_180),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    mask_V_load_1_phi_fu_1344_p3 <= 
        tmp_36_fu_1316_p6 when (tmp_59_fu_1302_p1(0) = '1') else 
        tmp_37_fu_1330_p6;
    mask_V_load_phi_fu_1045_p3 <= 
        tmp_41_fu_1017_p6 when (tmp_64_fu_1003_p1(0) = '1') else 
        tmp_42_fu_1031_p6;
    newIndex10_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex7_fu_1394_p4),64));
    newIndex1_fu_1372_p4 <= p_5_reg_512(7 downto 1);
    newIndex2_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_737_p4),64));
    newIndex3_fu_1109_p4 <= p_s_fu_1099_p3(3 downto 1);
    newIndex4_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex3_fu_1109_p4),64));
    newIndex5_fu_884_p4 <= now1_V_4_fu_858_p2(7 downto 1);
    newIndex6_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex5_fu_884_p4),64));
    newIndex7_fu_1394_p4 <= p_4_reg_502(7 downto 1);
    newIndex8_fu_1063_p4 <= p_Repl2_2_fu_981_p2(7 downto 1);
    newIndex9_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex8_fu_1063_p4),64));
    newIndex_fu_1382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex1_fu_1372_p4),64));
    newSel1_fu_669_p3 <= 
        ap_const_lv3_5 when (sel_tmp5_fu_611_p2(0) = '1') else 
        ap_const_lv3_6;
    newSel2_fu_683_p3 <= 
        newSel_cast_cast_fu_641_p3 when (or_cond_fu_649_p2(0) = '1') else 
        newSel_fu_655_p3;
    newSel3_fu_697_p3 <= 
        newSel1_fu_669_p3 when (or_cond2_fu_677_p2(0) = '1') else 
        sel_tmp2_fu_597_p3;
    newSel4_fu_705_p3 <= 
        newSel2_fu_683_p3 when (or_cond3_fu_691_p2(0) = '1') else 
        newSel3_fu_697_p3;
    newSel_cast_cast_fu_641_p3 <= 
        ap_const_lv3_1 when (sel_tmp4_fu_635_p2(0) = '1') else 
        ap_const_lv3_2;
    newSel_fu_655_p3 <= 
        ap_const_lv3_3 when (sel_tmp9_fu_623_p2(0) = '1') else 
        ap_const_lv3_4;
    now1_V_2_fu_1509_p2 <= std_logic_vector(unsigned(tmp_45_fu_1505_p1) + unsigned(p_4_reg_502));
    now1_V_4_fu_858_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_01598_1_in_phi_fu_457_p4) + unsigned(ap_const_lv8_1));
    now1_V_cast_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(now1_V_fu_1147_p2),8));
    now1_V_fu_1147_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(p_s_reg_1729));
    now2_V_1_cast_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(now2_V_fu_1156_p2),8));
    now2_V_2_fu_1518_p2 <= std_logic_vector(unsigned(p_5_reg_512) - unsigned(tmp_47_fu_1515_p1));
    now2_V_fu_1156_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(p_s_reg_1729));
    op2_assign_1_fu_1499_p2 <= "0" when (p_4_reg_502 = ap_const_lv8_8) else "1";
    op2_assign_2_fu_1274_p2 <= "0" when (p_5_reg_512 = ap_const_lv8_0) else "1";
    op2_assign_3_fu_817_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & tmp_15_fu_813_p1(31-1 downto 0)))));
    op2_assign_4_fu_949_p2 <= std_logic_vector(shift_left(unsigned(tmp_32_fu_942_p1),to_integer(unsigned('0' & tmp_33_fu_946_p1(31-1 downto 0)))));
    op2_assign_fu_1165_p2 <= (tmp_V_fu_1142_p2 xor ap_const_lv64_FFFFFFFFFFFFFFFF);
    or_cond1_fu_663_p2 <= (sel_tmp9_fu_623_p2 or sel_tmp7_fu_617_p2);
    or_cond2_fu_677_p2 <= (sel_tmp5_fu_611_p2 or sel_tmp3_fu_605_p2);
    or_cond3_fu_691_p2 <= (or_cond_fu_649_p2 or or_cond1_fu_663_p2);
    or_cond_fu_649_p2 <= (sel_tmp4_fu_635_p2 or sel_tmp1_fu_629_p2);
    output_addr_V_cast_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_fu_1202_p1),9));
    p_Repl2_2_fu_981_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_01594_1_in_phi_fu_476_p4) + unsigned(ap_const_lv8_FF));
    p_Repl2_s_fu_993_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_p_01586_3_in_phi_fu_485_p4),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    
    p_Result_1_fu_560_p4_proc : process(tmp_size_V_fu_554_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(8+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(8+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable p_Result_1_fu_560_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(8 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(3 - 1 downto 0) := ap_const_lv32_7(3 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(3 - 1 downto 0) := ap_const_lv32_0(3 - 1 downto 0);
        v0_cpy := tmp_size_V_fu_554_p2;
        if (vlo_cpy(3 - 1 downto 0) > vhi_cpy(3 - 1 downto 0)) then
            vhi_cpy(3-1 downto 0) := std_logic_vector(8-1-unsigned(ap_const_lv32_0(3-1 downto 0)));
            vlo_cpy(3-1 downto 0) := std_logic_vector(8-1-unsigned(ap_const_lv32_7(3-1 downto 0)));
            for p_Result_1_fu_560_p4_i in 0 to 8-1 loop
                v0_cpy(p_Result_1_fu_560_p4_i) := tmp_size_V_fu_554_p2(8-1-p_Result_1_fu_560_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(3-1 downto 0)))));

        section := (others=>'0');
        section(3-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(3-1 downto 0)) - unsigned(vlo_cpy(3-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(8-1 downto 0)))));
        res_mask := res_mask(8-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_1_fu_560_p4 <= resvalue(8-1 downto 0);
    end process;

    
    p_Result_2_fu_840_p4_proc : process(r_V_12_reg_1605)
    begin
        p_Result_2_fu_840_p4 <= r_V_12_reg_1605;
        p_Result_2_fu_840_p4(0) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_3_fu_914_p4_proc : process(loc1_V_12_fu_910_p1)
    begin
        p_Result_3_fu_914_p4 <= loc1_V_12_fu_910_p1;
        p_Result_3_fu_914_p4(0) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_s_fu_1465_p4_proc : process(p_Val2_5_fu_1457_p3, i_assign_fu_1449_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        p_Result_s_fu_1465_p4 <= p_Val2_5_fu_1457_p3;
        if to_integer(unsigned(i_assign_fu_1449_p1)) >= p_Val2_5_fu_1457_p3'low and to_integer(unsigned(i_assign_fu_1449_p1)) <= p_Val2_5_fu_1457_p3'high then
            result(0) := '0';
            for i in ap_const_lv32_0'range loop
                result(0) := result(0) or ap_const_lv32_0(i);
            end loop;
            p_Result_s_fu_1465_p4(to_integer(unsigned(i_assign_fu_1449_p1))) <= result(0);
        end if;
    end process;

    p_Val2_2_fu_1210_p3 <= 
        ap_const_lv9_1FF when (tmp_18_reg_1807(0) = '1') else 
        output_addr_V_cast_fu_1206_p1;
        p_Val2_4_cast_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_fu_1210_p3),32));

    p_Val2_5_fu_1457_p3 <= 
        buddy_tree_V_1_q1 when (tmp_66_fu_1453_p1(0) = '1') else 
        buddy_tree_V_0_q1;
    p_not_fu_581_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(p_Result_1_reg_1543));
    p_s_fu_1099_p3 <= 
        ap_const_lv4_1 when (tmp_s_reg_1553(0) = '1') else 
        ans_V_reg_1558;
    r_V_10_fu_1230_p2 <= std_logic_vector(shift_left(unsigned(loc1_V_11_reg_1801),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
        r_V_11_cast5_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_11_fu_759_p2),8));

    r_V_11_fu_759_p2 <= std_logic_vector(signed(ap_const_lv5_1F) + signed(lhs_V_cast_cast_fu_756_p1));
    r_V_12_fu_805_p3 <= 
        tmp_24_fu_801_p1 when (tmp_23_fu_769_p3(0) = '1') else 
        tmp_14_fu_796_p2;
    r_V_13_fu_1057_p2 <= std_logic_vector(shift_left(unsigned(mask_V_load_phi_fu_1045_p3),to_integer(unsigned('0' & tmp_43_fu_1053_p1(31-1 downto 0)))));
    r_V_3_fu_975_p2 <= std_logic_vector(shift_right(unsigned(tmp_35_fu_964_p2),to_integer(unsigned('0' & tmp_40_fu_972_p1(31-1 downto 0)))));
    r_V_4_fu_1202_p1 <= tmp_19_fu_1196_p2(8 - 1 downto 0);
    r_V_5_fu_1092_p2 <= (r_V_13_reg_1703 or lhs_V_1_fu_1085_p3);
    r_V_7_fu_1356_p2 <= std_logic_vector(shift_left(unsigned(mask_V_load_1_phi_fu_1344_p3),to_integer(unsigned('0' & tmp_38_fu_1352_p1(31-1 downto 0)))));
    r_V_8_fu_1417_p2 <= (rhs_V_reg_1856 and lhs_V_fu_1410_p3);
    r_V_fu_853_p2 <= std_logic_vector(shift_right(unsigned(tmp_17_reg_1611),to_integer(unsigned('0' & tmp_22_fu_849_p1(31-1 downto 0)))));
    rhs_V_fu_1362_p2 <= (r_V_7_fu_1356_p2 xor ap_const_lv64_FFFFFFFFFFFFFFFF);
    sel_tmp1_fu_629_p2 <= "1" when (tmp_7_fu_586_p2 = ap_const_lv8_4) else "0";
    sel_tmp2_fu_597_p3 <= 
        ap_const_lv3_7 when (sel_tmp_fu_591_p2(0) = '1') else 
        ap_const_lv3_0;
    sel_tmp3_fu_605_p2 <= "1" when (tmp_7_fu_586_p2 = ap_const_lv8_40) else "0";
    sel_tmp4_fu_635_p2 <= "1" when (tmp_7_fu_586_p2 = ap_const_lv8_2) else "0";
    sel_tmp5_fu_611_p2 <= "1" when (tmp_7_fu_586_p2 = ap_const_lv8_20) else "0";
    sel_tmp7_fu_617_p2 <= "1" when (tmp_7_fu_586_p2 = ap_const_lv8_10) else "0";
    sel_tmp9_fu_623_p2 <= "1" when (tmp_7_fu_586_p2 = ap_const_lv8_8) else "0";
    sel_tmp_fu_591_p2 <= "1" when (tmp_7_fu_586_p2 = ap_const_lv8_80) else "0";
    size_V_fu_546_p1 <= alloc_size(8 - 1 downto 0);
        tmp_10_cast_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_780_p2),32));

    tmp_10_fu_780_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) - unsigned(lhs_V_cast_cast_fu_756_p1));
    tmp_11_fu_790_p2 <= std_logic_vector(shift_left(unsigned(tmp_9_fu_777_p1),to_integer(unsigned('0' & tmp_10_cast_fu_786_p1(31-1 downto 0)))));
    tmp_12_fu_1138_p2 <= (tmp_5_reg_1765 and buddy_tree_V_load_1_s_reg_1757);
    tmp_13_fu_1171_p2 <= (op2_assign_fu_1165_p2 and buddy_tree_V_load_1_s_reg_1757);
    tmp_14_fu_796_p2 <= std_logic_vector(shift_right(unsigned(free_target_V_reg_1536),to_integer(unsigned('0' & r_V_11_cast5_fu_765_p1(8-1 downto 0)))));
    tmp_15_cast_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newSel4_fu_705_p3),4));
    tmp_15_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_12_fu_805_p3),32));
        tmp_16_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(op2_assign_3_fu_817_p2),64));

    tmp_17_fu_834_p2 <= (tmp_16_fu_823_p1 or buddy_tree_V_load_ph_fu_827_p3);
    tmp_18_fu_1176_p2 <= "1" when (buddy_tree_V_load_1_s_reg_1757 = tmp_12_reg_1770) else "0";
    tmp_19_fu_1196_p2 <= std_logic_vector(shift_left(unsigned(tmp_28_cast_fu_1190_p1),to_integer(unsigned('0' & tmp_33_cast_fu_1193_p1(16-1 downto 0)))));
    tmp_20_fu_1105_p1 <= p_s_fu_1099_p3(1 - 1 downto 0);
    tmp_21_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_4_cast_fu_1217_p1),64));
    tmp_22_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_fu_840_p4),64));
    tmp_23_fu_769_p3 <= r_V_11_fu_759_p2(4 downto 4);
    tmp_24_fu_801_p1 <= tmp_11_fu_790_p2(8 - 1 downto 0);
    tmp_25_fu_1280_p2 <= (op2_assign_2_fu_1274_p2 or icmp_fu_1268_p2);
    tmp_27_fu_733_p1 <= addr_layer_map_V_q0(1 - 1 downto 0);
    tmp_28_cast_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_11_reg_1801),16));
    tmp_29_fu_987_p2 <= "1" when (p_Repl2_2_fu_981_p2 = ap_const_lv8_0) else "0";
    tmp_30_fu_737_p4 <= addr_layer_map_V_q0(3 downto 1);
    tmp_31_fu_936_p2 <= (tmp_57_fu_932_p1 and tmp_56_fu_924_p3);
    tmp_32_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_936_p2),32));
    tmp_33_cast_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(now2_V_reg_1785),16));
    tmp_33_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_reg_1658),32));
        tmp_34_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(op2_assign_4_fu_949_p2),64));

    tmp_35_fu_964_p2 <= (tmp_34_fu_955_p1 or buddy_tree_V_load_2_s_fu_959_p3);
    tmp_36_fu_1316_p5 <= cnt_1_fu_176(2 downto 1);
    tmp_37_fu_1330_p5 <= cnt_1_fu_176(2 downto 1);
    tmp_38_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc2_V_2_fu_180),64));
    tmp_40_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_3_reg_1673),64));
    tmp_41_fu_1017_p5 <= op2_assign_5_reg_491(2 downto 1);
    tmp_42_fu_1031_p5 <= op2_assign_5_reg_491(2 downto 1);
    tmp_43_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Repl2_s_fu_993_p2),64));
    tmp_44_fu_1388_p2 <= "1" when (p_4_reg_502 = ap_const_lv8_0) else "0";
    tmp_45_fu_1505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op2_assign_1_fu_1499_p2),8));
    tmp_46_fu_1235_p3 <= p_Val2_2_fu_1210_p3(8 downto 8);
    tmp_47_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op2_assign_2_reg_1843),8));
    tmp_53_fu_1258_p4 <= p_4_reg_502(7 downto 3);
    tmp_54_fu_864_p4 <= now1_V_4_fu_858_p2(7 downto 3);
    tmp_55_fu_1286_p4 <= p_5_reg_512(7 downto 3);
    tmp_56_fu_924_p3 <= p_01606_0_in_reg_444(1 downto 1);
    tmp_57_fu_932_p1 <= p_01606_0_in_reg_444(1 - 1 downto 0);
    tmp_58_fu_880_p1 <= ap_phi_mux_p_01598_1_in_phi_fu_457_p4(1 - 1 downto 0);
    tmp_59_fu_1302_p1 <= cnt_1_fu_176(1 - 1 downto 0);
    tmp_5_fu_1132_p2 <= std_logic_vector(signed(ap_const_lv64_FFFFFFFFFFFFFFFF) + signed(buddy_tree_V_load_1_s_fu_1125_p3));
    tmp_60_fu_1368_p1 <= p_5_reg_512(1 - 1 downto 0);
    tmp_63_fu_999_p1 <= ap_phi_mux_p_01594_1_in_phi_fu_476_p4(1 - 1 downto 0);
    tmp_64_fu_1003_p1 <= op2_assign_5_reg_491(1 - 1 downto 0);
    tmp_66_fu_1453_p1 <= p_4_reg_502(1 - 1 downto 0);
    tmp_6_fu_723_p2 <= "1" when (cmd_fu_172 = ap_const_lv8_3) else "0";
    tmp_7_fu_586_p2 <= (p_not_fu_581_p2 and p_Result_1_reg_1543);
    tmp_8_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(free_target_V_reg_1536),64));
    tmp_9_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(free_target_V_reg_1536),32));
    tmp_V_fu_1142_p2 <= std_logic_vector(unsigned(buddy_tree_V_load_1_s_reg_1757) - unsigned(tmp_12_fu_1138_p2));
    tmp_fu_570_p2 <= "1" when (cmd_fu_172 = ap_const_lv8_2) else "0";
    tmp_s_fu_576_p2 <= "1" when (size_V_reg_1531 = ap_const_lv8_1) else "0";
    tmp_size_V_fu_554_p2 <= std_logic_vector(signed(ap_const_lv8_FF) + signed(size_V_fu_546_p1));
end behav;
