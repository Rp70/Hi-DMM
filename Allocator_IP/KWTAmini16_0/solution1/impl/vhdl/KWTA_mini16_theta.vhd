-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity KWTA_mini16_theta is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    alloc_size : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_size_ap_vld : IN STD_LOGIC;
    alloc_size_ap_ack : OUT STD_LOGIC;
    alloc_free_target : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_free_target_ap_vld : IN STD_LOGIC;
    alloc_free_target_ap_ack : OUT STD_LOGIC;
    alloc_addr : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_addr_ap_vld : OUT STD_LOGIC;
    alloc_addr_ap_ack : IN STD_LOGIC;
    alloc_cmd : IN STD_LOGIC_VECTOR (7 downto 0);
    alloc_cmd_ap_vld : IN STD_LOGIC;
    alloc_cmd_ap_ack : OUT STD_LOGIC );
end;


architecture behav of KWTA_mini16_theta is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "KWTA_mini16_theta,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.356500,HLS_SYN_LAT=5,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=0,HLS_SYN_FF=612,HLS_SYN_LUT=1684,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv20_FFFFF : STD_LOGIC_VECTOR (19 downto 0) := "11111111111111111111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv16_4000 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv16_2000 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv16_1000 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv16_800 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv16_400 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv16_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv16_40 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv16_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv16_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv19_7FFFF : STD_LOGIC_VECTOR (18 downto 0) := "1111111111111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal top_heap_V : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    signal last_offset_V : STD_LOGIC_VECTOR (19 downto 0) := "11111111111111111111";
    signal last_addr_V : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal used_free_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal used_free_V_ce0 : STD_LOGIC;
    signal used_free_V_we0 : STD_LOGIC;
    signal used_free_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal used_free_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_loc1_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal last_loc2_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal heap_tree_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal heap_tree_V_ce0 : STD_LOGIC;
    signal heap_tree_V_we0 : STD_LOGIC;
    signal heap_tree_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal heap_tree_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal alloc_size_blk_n : STD_LOGIC;
    signal alloc_free_target_blk_n : STD_LOGIC;
    signal alloc_addr_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_939_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_reg_1463 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1499 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal alloc_cmd_blk_n : STD_LOGIC;
    signal alloc_cmd_read_reg_1445 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal alloc_size_read_reg_1451 : STD_LOGIC_VECTOR (31 downto 0);
    signal alloc_free_target_re_reg_1456 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_ioackin_alloc_addr_ap_ack : STD_LOGIC;
    signal ap_predicate_op38_write_state2 : BOOLEAN;
    signal ap_predicate_op60_write_state2 : BOOLEAN;
    signal ap_predicate_op65_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal p_Val2_5_reg_1467 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_reg_1478 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_7_reg_1483 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_911_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_1489 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_reg_1503 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_not_fu_956_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_not_reg_1517 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_2_fu_978_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_7_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_reg_1530 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1037_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_1540 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_11_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1550 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal last_loc1_V_load_reg_1554 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_reg_1559 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0167_0_i1_cast_fu_1178_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0167_0_i1_cast_reg_1587 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal p_0252_0_i1_cast_fu_1188_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0252_0_i1_cast_reg_1595 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_22_fu_1230_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_reg_1606 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal AA_V_1_fu_1259_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal AA_V_1_reg_1616 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal BB_V_1_reg_1621 : STD_LOGIC_VECTOR (15 downto 0);
    signal CC_V_1_reg_1626 : STD_LOGIC_VECTOR (15 downto 0);
    signal DD_V_1_reg_1631 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_1353_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_reg_1648 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_29_fu_1375_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_29_reg_1653 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_30_fu_1381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_reg_1659 : STD_LOGIC_VECTOR (63 downto 0);
    signal phitmp_fu_1415_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal phitmp_reg_1669 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal storemerge_reg_392 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal AA_V_fu_1138_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_19_fu_1182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal BB_V_fu_1142_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0248_0_i1_reg_516 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_20_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal CC_V_fu_1152_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0244_0_i1_reg_573 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_21_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal DD_V_fu_1162_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0167_0_i_phi_fu_649_p34 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_0252_0_i_phi_fu_705_p34 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_25_fu_1302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_0248_0_i_phi_fu_761_p34 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_26_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_0244_0_i_phi_fu_817_p34 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_27_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_23_fu_1242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_1_fu_997_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_fu_1119_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_cast_fu_1386_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_9_fu_1026_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal phitmp_cast_fu_1421_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_8_fu_951_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_cast_fu_1440_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_alloc_addr_ap_ack : STD_LOGIC := '0';
    signal ap_predicate_op334_write_state15 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal p_Result_4_fu_1063_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_9_fu_1395_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_39_fu_1015_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_3_fu_1099_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_8_fu_902_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_922_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_962_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal loc_V_2_trunc_fu_972_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_assign_1_fu_994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_assign_fu_1012_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_1041_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal loc_V_trunc_fu_1057_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_assign_2_fu_1095_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_assign_3_fu_1116_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_fu_1134_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0244_0_i1_cast1_fu_1204_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_fu_1212_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0244_0_i1_cast_fu_1208_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp3_fu_1221_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_cast_fu_1217_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_cast_fu_1226_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_not1_fu_1247_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_7_fu_1253_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0244_0_i_cast1_fu_1325_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0252_0_i_cast_fu_1307_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0167_0_i_cast_fu_1298_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_fu_1333_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0244_0_i_cast_fu_1329_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0248_0_i_cast_fu_1316_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp5_fu_1343_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp4_cast_fu_1339_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp5_cast_fu_1349_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc2_V_cast_fu_1365_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_fu_1368_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_31_fu_1408_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_37_cast_fu_1431_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_33_fu_1434_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_condition_1009 : BOOLEAN;
    signal ap_condition_927 : BOOLEAN;
    signal ap_condition_496 : BOOLEAN;
    signal ap_condition_845 : BOOLEAN;
    signal ap_condition_680 : BOOLEAN;
    signal ap_condition_596 : BOOLEAN;

    component KWTA_mini16_thetabkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KWTA_mini16_thetacud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    used_free_V_U : component KWTA_mini16_thetabkb
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => used_free_V_address0,
        ce0 => used_free_V_ce0,
        we0 => used_free_V_we0,
        d0 => used_free_V_d0,
        q0 => used_free_V_q0);

    heap_tree_V_U : component KWTA_mini16_thetacud
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => heap_tree_V_address0,
        ce0 => heap_tree_V_ce0,
        we0 => heap_tree_V_we0,
        d0 => heap_tree_V_d0,
        q0 => heap_tree_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_alloc_addr_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
            else
                if ((((ap_predicate_op65_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io)) or ((ap_predicate_op60_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io)) or ((ap_predicate_op38_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io)) or ((ap_predicate_op334_write_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_boolean_0 = ap_block_state15_io)))) then 
                    ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
                elsif ((((ap_predicate_op65_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = alloc_addr_ap_ack)) or ((ap_predicate_op60_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = alloc_addr_ap_ack)) or ((ap_predicate_op38_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = alloc_addr_ap_ack)) or ((or_cond_reg_1499 = ap_const_lv1_0) and (tmp_34_reg_1508 = ap_const_lv1_1) and (tmp_reg_1463 = ap_const_lv1_1) and (ap_const_logic_1 = alloc_addr_ap_ack) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
                    ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    last_addr_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                last_addr_V <= phitmp_cast_fu_1421_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                last_addr_V <= tmp_9_fu_1026_p2;
            end if; 
        end if;
    end process;

    last_offset_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                last_offset_V <= tmp_33_cast_fu_1386_p1;
            elsif (((tmp_11_fu_1051_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                last_offset_V <= ap_const_lv20_FFFFF;
            end if; 
        end if;
    end process;

    p_0244_0_i1_reg_573_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                if ((tmp_21_fu_1198_p2 = ap_const_lv1_1)) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_0;
                elsif ((ap_const_boolean_1 = ap_condition_680)) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_10;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_11;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_12;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_13;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_14;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_15;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_16;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_17;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_18;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_19;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_1A;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_1B;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_1C;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_1D;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_1E;
                elsif (((tmp_21_fu_1198_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = DD_V_fu_1162_p4))) then 
                    p_0244_0_i1_reg_573 <= ap_const_lv5_1F;
                end if;
            end if; 
        end if;
    end process;

    p_0248_0_i1_reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                if ((tmp_20_fu_1192_p2 = ap_const_lv1_1)) then 
                    p_0248_0_i1_reg_516(0) <= '0';
                    p_0248_0_i1_reg_516(1) <= '0';
                    p_0248_0_i1_reg_516(2) <= '0';
                    p_0248_0_i1_reg_516(3) <= '0';
                    p_0248_0_i1_reg_516(5) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_596)) then 
                    p_0248_0_i1_reg_516(0) <= '0';
                    p_0248_0_i1_reg_516(1) <= '0';
                    p_0248_0_i1_reg_516(2) <= '0';
                    p_0248_0_i1_reg_516(3) <= '0';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '1';
                    p_0248_0_i1_reg_516(1) <= '0';
                    p_0248_0_i1_reg_516(2) <= '0';
                    p_0248_0_i1_reg_516(3) <= '0';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '0';
                    p_0248_0_i1_reg_516(1) <= '1';
                    p_0248_0_i1_reg_516(2) <= '0';
                    p_0248_0_i1_reg_516(3) <= '0';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '1';
                    p_0248_0_i1_reg_516(1) <= '1';
                    p_0248_0_i1_reg_516(2) <= '0';
                    p_0248_0_i1_reg_516(3) <= '0';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '0';
                    p_0248_0_i1_reg_516(1) <= '0';
                    p_0248_0_i1_reg_516(2) <= '1';
                    p_0248_0_i1_reg_516(3) <= '0';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '1';
                    p_0248_0_i1_reg_516(1) <= '0';
                    p_0248_0_i1_reg_516(2) <= '1';
                    p_0248_0_i1_reg_516(3) <= '0';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '0';
                    p_0248_0_i1_reg_516(1) <= '1';
                    p_0248_0_i1_reg_516(2) <= '1';
                    p_0248_0_i1_reg_516(3) <= '0';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '1';
                    p_0248_0_i1_reg_516(1) <= '1';
                    p_0248_0_i1_reg_516(2) <= '1';
                    p_0248_0_i1_reg_516(3) <= '0';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '0';
                    p_0248_0_i1_reg_516(1) <= '0';
                    p_0248_0_i1_reg_516(2) <= '0';
                    p_0248_0_i1_reg_516(3) <= '1';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '1';
                    p_0248_0_i1_reg_516(1) <= '0';
                    p_0248_0_i1_reg_516(2) <= '0';
                    p_0248_0_i1_reg_516(3) <= '1';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '0';
                    p_0248_0_i1_reg_516(1) <= '1';
                    p_0248_0_i1_reg_516(2) <= '0';
                    p_0248_0_i1_reg_516(3) <= '1';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '1';
                    p_0248_0_i1_reg_516(1) <= '1';
                    p_0248_0_i1_reg_516(2) <= '0';
                    p_0248_0_i1_reg_516(3) <= '1';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '0';
                    p_0248_0_i1_reg_516(1) <= '0';
                    p_0248_0_i1_reg_516(2) <= '1';
                    p_0248_0_i1_reg_516(3) <= '1';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '1';
                    p_0248_0_i1_reg_516(1) <= '0';
                    p_0248_0_i1_reg_516(2) <= '1';
                    p_0248_0_i1_reg_516(3) <= '1';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '0';
                    p_0248_0_i1_reg_516(1) <= '1';
                    p_0248_0_i1_reg_516(2) <= '1';
                    p_0248_0_i1_reg_516(3) <= '1';
                    p_0248_0_i1_reg_516(5) <= '1';
                elsif (((tmp_20_fu_1192_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = CC_V_fu_1152_p4))) then 
                    p_0248_0_i1_reg_516(0) <= '1';
                    p_0248_0_i1_reg_516(1) <= '1';
                    p_0248_0_i1_reg_516(2) <= '1';
                    p_0248_0_i1_reg_516(3) <= '1';
                    p_0248_0_i1_reg_516(5) <= '1';
                end if;
            end if; 
        end if;
    end process;

    storemerge_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                storemerge_reg_392 <= ap_const_lv32_0;
            elsif (((tmp_7_fu_966_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                storemerge_reg_392 <= p_Result_2_fu_978_p5;
            end if; 
        end if;
    end process;

    top_heap_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_reg_1550 = ap_const_lv1_1) and (tmp_16_fu_1110_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                top_heap_V <= p_Result_5_fu_1119_p4;
            elsif (((tmp_7_fu_966_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                top_heap_V <= p_Result_1_fu_997_p4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                AA_V_1_reg_1616 <= AA_V_1_fu_1259_p1;
                BB_V_1_reg_1621 <= p_Val2_7_fu_1253_p2(31 downto 16);
                CC_V_1_reg_1626 <= p_Val2_7_fu_1253_p2(47 downto 32);
                DD_V_1_reg_1631 <= p_Val2_7_fu_1253_p2(63 downto 48);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                alloc_cmd_read_reg_1445 <= alloc_cmd;
                alloc_free_target_re_reg_1456 <= alloc_free_target;
                alloc_size_read_reg_1451 <= alloc_size;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                last_loc1_V <= tmp_22_fu_1230_p2;
                tmp_22_reg_1606 <= tmp_22_fu_1230_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1051_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                last_loc1_V_load_reg_1554 <= last_loc1_V;
                    tmp_15_reg_1559(7 downto 0) <= tmp_15_fu_1080_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                last_loc2_V <= tmp_28_fu_1353_p2;
                tmp_28_reg_1648 <= tmp_28_fu_1353_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                or_cond_reg_1499 <= or_cond_fu_929_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    p_0167_0_i1_cast_reg_1587(3 downto 0) <= p_0167_0_i1_cast_fu_1178_p1(3 downto 0);
                    p_0252_0_i1_cast_reg_1595(4 downto 0) <= p_0252_0_i1_cast_fu_1188_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_fu_879_p2 = ap_const_lv1_1) and (tmp_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                p_Result_6_reg_1478 <= alloc_free_target_re_reg_1456(9 downto 4);
                p_Result_7_reg_1483 <= alloc_free_target_re_reg_1456(19 downto 10);
                    tmp_5_reg_1489(15 downto 0) <= tmp_5_fu_911_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                p_Val2_5_reg_1467 <= top_heap_V;
                tmp_reg_1463 <= tmp_fu_870_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_fu_929_p2 = ap_const_lv1_0) and (tmp_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                p_Val2_s_reg_1503 <= last_offset_V;
                tmp_34_reg_1508 <= last_offset_V(19 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_fu_929_p2 = ap_const_lv1_0) and (tmp_34_fu_939_p3 = ap_const_lv1_1) and (tmp_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                p_not_reg_1517 <= p_not_fu_956_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                    phitmp_reg_1669(17 downto 4) <= phitmp_fu_1415_p2(17 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_11_reg_1550 <= tmp_11_fu_1051_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_fu_966_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    tmp_13_reg_1530(9 downto 0) <= tmp_13_fu_990_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                tmp_29_reg_1653 <= tmp_29_fu_1375_p2;
                    tmp_30_reg_1659(13 downto 0) <= tmp_30_fu_1381_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                tmp_3_reg_1474 <= tmp_3_fu_879_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    tmp_s_reg_1540(19 downto 0) <= tmp_s_fu_1037_p1(19 downto 0);
            end if;
        end if;
    end process;
    tmp_5_reg_1489(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    tmp_13_reg_1530(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_s_reg_1540(63 downto 20) <= "00000000000000000000000000000000000000000000";
    tmp_15_reg_1559(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    p_0167_0_i1_cast_reg_1587(5 downto 4) <= "00";
    p_0252_0_i1_cast_reg_1595(6 downto 5) <= "00";
    tmp_30_reg_1659(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    phitmp_reg_1669(3 downto 0) <= "0001";
    p_0248_0_i1_reg_516(4) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2, tmp_fu_870_p2, or_cond_fu_929_p2, tmp_34_fu_939_p3, ap_CS_fsm_state15, tmp_3_fu_879_p2, ap_block_state2_io, ap_CS_fsm_state3, tmp_7_fu_966_p2, ap_block_state15_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((or_cond_fu_929_p2 = ap_const_lv1_1) and (tmp_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((or_cond_fu_929_p2 = ap_const_lv1_0) and (tmp_34_fu_939_p3 = ap_const_lv1_1) and (tmp_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((tmp_34_fu_939_p3 = ap_const_lv1_0) and (or_cond_fu_929_p2 = ap_const_lv1_0) and (tmp_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((tmp_3_fu_879_p2 = ap_const_lv1_0) and (tmp_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((tmp_3_fu_879_p2 = ap_const_lv1_1) and (tmp_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_7_fu_966_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_boolean_0 = ap_block_state15_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    AA_V_1_fu_1259_p1 <= p_Val2_7_fu_1253_p2(16 - 1 downto 0);
    AA_V_fu_1138_p1 <= p_Val2_2_fu_1134_p2(16 - 1 downto 0);
    BB_V_fu_1142_p4 <= p_Val2_2_fu_1134_p2(31 downto 16);
    CC_V_fu_1152_p4 <= p_Val2_2_fu_1134_p2(47 downto 32);
    DD_V_fu_1162_p4 <= p_Val2_2_fu_1134_p2(63 downto 48);

    alloc_addr_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state15, tmp_reg_1463, or_cond_reg_1499, tmp_34_reg_1508, ap_predicate_op38_write_state2, ap_predicate_op60_write_state2, ap_predicate_op65_write_state2, tmp_8_fu_951_p1, tmp_38_cast_fu_1440_p1)
    begin
        if (((or_cond_reg_1499 = ap_const_lv1_0) and (tmp_34_reg_1508 = ap_const_lv1_1) and (tmp_reg_1463 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            alloc_addr <= tmp_38_cast_fu_1440_p1;
        elsif (((ap_predicate_op60_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_addr <= tmp_8_fu_951_p1;
        elsif ((((ap_predicate_op65_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_predicate_op38_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            alloc_addr <= ap_const_lv32_FFFFFFFF;
        else 
            alloc_addr <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    alloc_addr_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state15, ap_predicate_op38_write_state2, ap_predicate_op60_write_state2, ap_predicate_op65_write_state2, ap_reg_ioackin_alloc_addr_ap_ack, ap_predicate_op334_write_state15)
    begin
        if ((((ap_predicate_op65_write_state2 = ap_const_boolean_1) and (ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_predicate_op60_write_state2 = ap_const_boolean_1) and (ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_predicate_op38_write_state2 = ap_const_boolean_1) and (ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_predicate_op334_write_state15 = ap_const_boolean_1) and (ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            alloc_addr_ap_vld <= ap_const_logic_1;
        else 
            alloc_addr_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    alloc_addr_blk_n_assign_proc : process(alloc_addr_ap_ack, ap_CS_fsm_state2, tmp_fu_870_p2, or_cond_fu_929_p2, tmp_34_fu_939_p3, ap_CS_fsm_state15, tmp_reg_1463, or_cond_reg_1499, tmp_34_reg_1508, tmp_3_fu_879_p2)
    begin
        if ((((tmp_34_fu_939_p3 = ap_const_lv1_0) and (or_cond_fu_929_p2 = ap_const_lv1_0) and (tmp_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_cond_fu_929_p2 = ap_const_lv1_1) and (tmp_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_3_fu_879_p2 = ap_const_lv1_0) and (tmp_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_cond_reg_1499 = ap_const_lv1_0) and (tmp_34_reg_1508 = ap_const_lv1_1) and (tmp_reg_1463 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            alloc_addr_blk_n <= alloc_addr_ap_ack;
        else 
            alloc_addr_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_cmd_ap_ack_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_cmd_ap_ack <= ap_const_logic_1;
        else 
            alloc_cmd_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_cmd_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_cmd_ap_vld)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_cmd_blk_n <= alloc_cmd_ap_vld;
        else 
            alloc_cmd_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_free_target_ap_ack_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_free_target_ap_ack <= ap_const_logic_1;
        else 
            alloc_free_target_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_free_target_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_free_target_ap_vld)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_free_target_blk_n <= alloc_free_target_ap_vld;
        else 
            alloc_free_target_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_size_ap_ack_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_size_ap_ack <= ap_const_logic_1;
        else 
            alloc_size_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_size_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_size_blk_n <= alloc_size_ap_vld;
        else 
            alloc_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state15_io_assign_proc : process(ap_sig_ioackin_alloc_addr_ap_ack, ap_predicate_op334_write_state15)
    begin
                ap_block_state15_io <= ((ap_predicate_op334_write_state15 = ap_const_boolean_1) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(ap_sig_ioackin_alloc_addr_ap_ack, ap_predicate_op38_write_state2, ap_predicate_op60_write_state2, ap_predicate_op65_write_state2)
    begin
                ap_block_state2_io <= (((ap_predicate_op65_write_state2 = ap_const_boolean_1) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0)) or ((ap_predicate_op60_write_state2 = ap_const_boolean_1) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0)) or ((ap_predicate_op38_write_state2 = ap_const_boolean_1) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0)));
    end process;


    ap_condition_1009_assign_proc : process(DD_V_1_reg_1631, tmp_27_fu_1320_p2)
    begin
                ap_condition_1009 <= (not((ap_const_lv16_2 = DD_V_1_reg_1631)) and not((ap_const_lv16_4 = DD_V_1_reg_1631)) and not((ap_const_lv16_8 = DD_V_1_reg_1631)) and not((ap_const_lv16_10 = DD_V_1_reg_1631)) and not((ap_const_lv16_20 = DD_V_1_reg_1631)) and not((ap_const_lv16_40 = DD_V_1_reg_1631)) and not((ap_const_lv16_80 = DD_V_1_reg_1631)) and not((ap_const_lv16_100 = DD_V_1_reg_1631)) and not((ap_const_lv16_200 = DD_V_1_reg_1631)) and not((ap_const_lv16_400 = DD_V_1_reg_1631)) and not((ap_const_lv16_800 = DD_V_1_reg_1631)) and not((ap_const_lv16_1000 = DD_V_1_reg_1631)) and not((ap_const_lv16_2000 = DD_V_1_reg_1631)) and not((ap_const_lv16_4000 = DD_V_1_reg_1631)) and not((ap_const_lv16_8000 = DD_V_1_reg_1631)) and (tmp_27_fu_1320_p2 = ap_const_lv1_0));
    end process;


    ap_condition_496_assign_proc : process(tmp_19_fu_1182_p2, BB_V_fu_1142_p4)
    begin
                ap_condition_496 <= (not((ap_const_lv16_2 = BB_V_fu_1142_p4)) and not((ap_const_lv16_4 = BB_V_fu_1142_p4)) and not((ap_const_lv16_8 = BB_V_fu_1142_p4)) and not((ap_const_lv16_10 = BB_V_fu_1142_p4)) and not((ap_const_lv16_20 = BB_V_fu_1142_p4)) and not((ap_const_lv16_40 = BB_V_fu_1142_p4)) and not((ap_const_lv16_80 = BB_V_fu_1142_p4)) and not((ap_const_lv16_100 = BB_V_fu_1142_p4)) and not((ap_const_lv16_200 = BB_V_fu_1142_p4)) and not((ap_const_lv16_400 = BB_V_fu_1142_p4)) and not((ap_const_lv16_800 = BB_V_fu_1142_p4)) and not((ap_const_lv16_1000 = BB_V_fu_1142_p4)) and not((ap_const_lv16_2000 = BB_V_fu_1142_p4)) and not((ap_const_lv16_4000 = BB_V_fu_1142_p4)) and not((ap_const_lv16_8000 = BB_V_fu_1142_p4)) and (tmp_19_fu_1182_p2 = ap_const_lv1_0));
    end process;


    ap_condition_596_assign_proc : process(tmp_20_fu_1192_p2, CC_V_fu_1152_p4)
    begin
                ap_condition_596 <= (not((ap_const_lv16_2 = CC_V_fu_1152_p4)) and not((ap_const_lv16_4 = CC_V_fu_1152_p4)) and not((ap_const_lv16_8 = CC_V_fu_1152_p4)) and not((ap_const_lv16_10 = CC_V_fu_1152_p4)) and not((ap_const_lv16_20 = CC_V_fu_1152_p4)) and not((ap_const_lv16_40 = CC_V_fu_1152_p4)) and not((ap_const_lv16_80 = CC_V_fu_1152_p4)) and not((ap_const_lv16_100 = CC_V_fu_1152_p4)) and not((ap_const_lv16_200 = CC_V_fu_1152_p4)) and not((ap_const_lv16_400 = CC_V_fu_1152_p4)) and not((ap_const_lv16_800 = CC_V_fu_1152_p4)) and not((ap_const_lv16_1000 = CC_V_fu_1152_p4)) and not((ap_const_lv16_2000 = CC_V_fu_1152_p4)) and not((ap_const_lv16_4000 = CC_V_fu_1152_p4)) and not((ap_const_lv16_8000 = CC_V_fu_1152_p4)) and (tmp_20_fu_1192_p2 = ap_const_lv1_0));
    end process;


    ap_condition_680_assign_proc : process(tmp_21_fu_1198_p2, DD_V_fu_1162_p4)
    begin
                ap_condition_680 <= (not((ap_const_lv16_2 = DD_V_fu_1162_p4)) and not((ap_const_lv16_4 = DD_V_fu_1162_p4)) and not((ap_const_lv16_8 = DD_V_fu_1162_p4)) and not((ap_const_lv16_10 = DD_V_fu_1162_p4)) and not((ap_const_lv16_20 = DD_V_fu_1162_p4)) and not((ap_const_lv16_40 = DD_V_fu_1162_p4)) and not((ap_const_lv16_80 = DD_V_fu_1162_p4)) and not((ap_const_lv16_100 = DD_V_fu_1162_p4)) and not((ap_const_lv16_200 = DD_V_fu_1162_p4)) and not((ap_const_lv16_400 = DD_V_fu_1162_p4)) and not((ap_const_lv16_800 = DD_V_fu_1162_p4)) and not((ap_const_lv16_1000 = DD_V_fu_1162_p4)) and not((ap_const_lv16_2000 = DD_V_fu_1162_p4)) and not((ap_const_lv16_4000 = DD_V_fu_1162_p4)) and not((ap_const_lv16_8000 = DD_V_fu_1162_p4)) and (tmp_21_fu_1198_p2 = ap_const_lv1_0));
    end process;


    ap_condition_845_assign_proc : process(BB_V_1_reg_1621, tmp_25_fu_1302_p2)
    begin
                ap_condition_845 <= (not((ap_const_lv16_2 = BB_V_1_reg_1621)) and not((ap_const_lv16_4 = BB_V_1_reg_1621)) and not((ap_const_lv16_8 = BB_V_1_reg_1621)) and not((ap_const_lv16_10 = BB_V_1_reg_1621)) and not((ap_const_lv16_20 = BB_V_1_reg_1621)) and not((ap_const_lv16_40 = BB_V_1_reg_1621)) and not((ap_const_lv16_80 = BB_V_1_reg_1621)) and not((ap_const_lv16_100 = BB_V_1_reg_1621)) and not((ap_const_lv16_200 = BB_V_1_reg_1621)) and not((ap_const_lv16_400 = BB_V_1_reg_1621)) and not((ap_const_lv16_800 = BB_V_1_reg_1621)) and not((ap_const_lv16_1000 = BB_V_1_reg_1621)) and not((ap_const_lv16_2000 = BB_V_1_reg_1621)) and not((ap_const_lv16_4000 = BB_V_1_reg_1621)) and not((ap_const_lv16_8000 = BB_V_1_reg_1621)) and (tmp_25_fu_1302_p2 = ap_const_lv1_0));
    end process;


    ap_condition_927_assign_proc : process(CC_V_1_reg_1626, tmp_26_fu_1311_p2)
    begin
                ap_condition_927 <= (not((ap_const_lv16_2 = CC_V_1_reg_1626)) and not((ap_const_lv16_4 = CC_V_1_reg_1626)) and not((ap_const_lv16_8 = CC_V_1_reg_1626)) and not((ap_const_lv16_10 = CC_V_1_reg_1626)) and not((ap_const_lv16_20 = CC_V_1_reg_1626)) and not((ap_const_lv16_40 = CC_V_1_reg_1626)) and not((ap_const_lv16_80 = CC_V_1_reg_1626)) and not((ap_const_lv16_100 = CC_V_1_reg_1626)) and not((ap_const_lv16_200 = CC_V_1_reg_1626)) and not((ap_const_lv16_400 = CC_V_1_reg_1626)) and not((ap_const_lv16_800 = CC_V_1_reg_1626)) and not((ap_const_lv16_1000 = CC_V_1_reg_1626)) and not((ap_const_lv16_2000 = CC_V_1_reg_1626)) and not((ap_const_lv16_4000 = CC_V_1_reg_1626)) and not((ap_const_lv16_8000 = CC_V_1_reg_1626)) and (tmp_26_fu_1311_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state15, ap_block_state15_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_boolean_0 = ap_block_state15_io))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0167_0_i1_phi_fu_407_p34_assign_proc : process(ap_CS_fsm_state9, tmp_12_fu_1172_p2, AA_V_fu_1138_p1)
    begin
        if ((((tmp_12_fu_1172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not((ap_const_lv16_2 = AA_V_fu_1138_p1)) and not((ap_const_lv16_4 = AA_V_fu_1138_p1)) and not((ap_const_lv16_8 = AA_V_fu_1138_p1)) and not((ap_const_lv16_10 = AA_V_fu_1138_p1)) and not((ap_const_lv16_20 = AA_V_fu_1138_p1)) and not((ap_const_lv16_40 = AA_V_fu_1138_p1)) and not((ap_const_lv16_80 = AA_V_fu_1138_p1)) and not((ap_const_lv16_100 = AA_V_fu_1138_p1)) and not((ap_const_lv16_200 = AA_V_fu_1138_p1)) and not((ap_const_lv16_400 = AA_V_fu_1138_p1)) and not((ap_const_lv16_800 = AA_V_fu_1138_p1)) and not((ap_const_lv16_1000 = AA_V_fu_1138_p1)) and not((ap_const_lv16_2000 = AA_V_fu_1138_p1)) and not((ap_const_lv16_4000 = AA_V_fu_1138_p1)) and not((ap_const_lv16_8000 = AA_V_fu_1138_p1)) and (tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_0;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_1;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_2;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_3;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_4;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_5;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_6;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_7;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_8;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_9;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_A;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_B;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_C;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_D;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_E;
        elsif (((tmp_12_fu_1172_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = AA_V_fu_1138_p1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= ap_const_lv4_F;
        else 
            ap_phi_mux_p_0167_0_i1_phi_fu_407_p34 <= "XXXX";
        end if; 
    end process;


    ap_phi_mux_p_0167_0_i_phi_fu_649_p34_assign_proc : process(AA_V_1_reg_1616, ap_CS_fsm_state12, tmp_24_fu_1293_p2)
    begin
        if ((((tmp_24_fu_1293_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((ap_const_lv16_2 = AA_V_1_reg_1616)) and not((ap_const_lv16_4 = AA_V_1_reg_1616)) and not((ap_const_lv16_8 = AA_V_1_reg_1616)) and not((ap_const_lv16_10 = AA_V_1_reg_1616)) and not((ap_const_lv16_20 = AA_V_1_reg_1616)) and not((ap_const_lv16_40 = AA_V_1_reg_1616)) and not((ap_const_lv16_80 = AA_V_1_reg_1616)) and not((ap_const_lv16_100 = AA_V_1_reg_1616)) and not((ap_const_lv16_200 = AA_V_1_reg_1616)) and not((ap_const_lv16_400 = AA_V_1_reg_1616)) and not((ap_const_lv16_800 = AA_V_1_reg_1616)) and not((ap_const_lv16_1000 = AA_V_1_reg_1616)) and not((ap_const_lv16_2000 = AA_V_1_reg_1616)) and not((ap_const_lv16_4000 = AA_V_1_reg_1616)) and not((ap_const_lv16_8000 = AA_V_1_reg_1616)) and (tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_0;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_1;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_2;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_3;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_4;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_5;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_6;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_7;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_8;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_9;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_A;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_B;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_C;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_D;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_E;
        elsif (((tmp_24_fu_1293_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = AA_V_1_reg_1616) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= ap_const_lv4_F;
        else 
            ap_phi_mux_p_0167_0_i_phi_fu_649_p34 <= "XXXX";
        end if; 
    end process;


    ap_phi_mux_p_0244_0_i_phi_fu_817_p34_assign_proc : process(DD_V_1_reg_1631, ap_CS_fsm_state12, tmp_27_fu_1320_p2, ap_condition_1009)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
            if ((tmp_27_fu_1320_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_0;
            elsif ((ap_const_boolean_1 = ap_condition_1009)) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_10;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_11;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_12;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_13;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_14;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_15;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_16;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_17;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_18;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_19;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_1A;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_1B;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_1C;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_1D;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_1E;
            elsif (((tmp_27_fu_1320_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = DD_V_1_reg_1631))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= ap_const_lv5_1F;
            else 
                ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= "XXXXX";
            end if;
        else 
            ap_phi_mux_p_0244_0_i_phi_fu_817_p34 <= "XXXXX";
        end if; 
    end process;


    ap_phi_mux_p_0248_0_i_phi_fu_761_p34_assign_proc : process(CC_V_1_reg_1626, ap_CS_fsm_state12, tmp_26_fu_1311_p2, ap_condition_927)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
            if ((tmp_26_fu_1311_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_0;
            elsif ((ap_const_boolean_1 = ap_condition_927)) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_20;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_21;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_22;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_23;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_24;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_25;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_26;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_27;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_28;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_29;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_2A;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_2B;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_2C;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_2D;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_2E;
            elsif (((tmp_26_fu_1311_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = CC_V_1_reg_1626))) then 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= ap_const_lv6_2F;
            else 
                ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= "XXXXXX";
            end if;
        else 
            ap_phi_mux_p_0248_0_i_phi_fu_761_p34 <= "XXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_0252_0_i1_phi_fu_463_p34_assign_proc : process(ap_CS_fsm_state9, tmp_19_fu_1182_p2, BB_V_fu_1142_p4, ap_condition_496)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
            if ((tmp_19_fu_1182_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_0;
            elsif ((ap_const_boolean_1 = ap_condition_496)) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_10;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_11;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_12;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_13;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_14;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_15;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_16;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_17;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_18;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_19;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_1A;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_1B;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_1C;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_1D;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_1E;
            elsif (((tmp_19_fu_1182_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = BB_V_fu_1142_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= ap_const_lv5_1F;
            else 
                ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= "XXXXX";
            end if;
        else 
            ap_phi_mux_p_0252_0_i1_phi_fu_463_p34 <= "XXXXX";
        end if; 
    end process;


    ap_phi_mux_p_0252_0_i_phi_fu_705_p34_assign_proc : process(BB_V_1_reg_1621, ap_CS_fsm_state12, tmp_25_fu_1302_p2, ap_condition_845)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
            if ((tmp_25_fu_1302_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_0;
            elsif ((ap_const_boolean_1 = ap_condition_845)) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_10;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_11;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_12;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_13;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_14;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_15;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_16;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_17;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_18;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_19;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_1A;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_1B;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_1C;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_1D;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_1E;
            elsif (((tmp_25_fu_1302_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = BB_V_1_reg_1621))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= ap_const_lv5_1F;
            else 
                ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= "XXXXX";
            end if;
        else 
            ap_phi_mux_p_0252_0_i_phi_fu_705_p34 <= "XXXXX";
        end if; 
    end process;


    ap_predicate_op334_write_state15_assign_proc : process(tmp_reg_1463, or_cond_reg_1499, tmp_34_reg_1508)
    begin
                ap_predicate_op334_write_state15 <= ((or_cond_reg_1499 = ap_const_lv1_0) and (tmp_34_reg_1508 = ap_const_lv1_1) and (tmp_reg_1463 = ap_const_lv1_1));
    end process;


    ap_predicate_op38_write_state2_assign_proc : process(tmp_fu_870_p2, tmp_3_fu_879_p2)
    begin
                ap_predicate_op38_write_state2 <= ((tmp_3_fu_879_p2 = ap_const_lv1_0) and (tmp_fu_870_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op60_write_state2_assign_proc : process(tmp_fu_870_p2, or_cond_fu_929_p2, tmp_34_fu_939_p3)
    begin
                ap_predicate_op60_write_state2 <= ((tmp_34_fu_939_p3 = ap_const_lv1_0) and (or_cond_fu_929_p2 = ap_const_lv1_0) and (tmp_fu_870_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op65_write_state2_assign_proc : process(tmp_fu_870_p2, or_cond_fu_929_p2)
    begin
                ap_predicate_op65_write_state2 <= ((or_cond_fu_929_p2 = ap_const_lv1_1) and (tmp_fu_870_p2 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15, ap_block_state15_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_boolean_0 = ap_block_state15_io))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_alloc_addr_ap_ack_assign_proc : process(alloc_addr_ap_ack, ap_reg_ioackin_alloc_addr_ap_ack)
    begin
        if ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0)) then 
            ap_sig_ioackin_alloc_addr_ap_ack <= alloc_addr_ap_ack;
        else 
            ap_sig_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
        end if; 
    end process;


    heap_tree_V_address0_assign_proc : process(ap_CS_fsm_state3, tmp_13_fu_990_p1, tmp_13_reg_1530, ap_CS_fsm_state7, tmp_15_fu_1080_p1, tmp_15_reg_1559, ap_CS_fsm_state10, ap_CS_fsm_state4, ap_CS_fsm_state8, tmp_23_fu_1242_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            heap_tree_V_address0 <= tmp_23_fu_1242_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            heap_tree_V_address0 <= tmp_15_reg_1559(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            heap_tree_V_address0 <= tmp_15_fu_1080_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            heap_tree_V_address0 <= tmp_13_reg_1530(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            heap_tree_V_address0 <= tmp_13_fu_990_p1(6 - 1 downto 0);
        else 
            heap_tree_V_address0 <= "XXXXXX";
        end if; 
    end process;


    heap_tree_V_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            heap_tree_V_ce0 <= ap_const_logic_1;
        else 
            heap_tree_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    heap_tree_V_d0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state8, p_Result_s_39_fu_1015_p4, p_Result_3_fu_1099_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            heap_tree_V_d0 <= p_Result_3_fu_1099_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            heap_tree_V_d0 <= p_Result_s_39_fu_1015_p4;
        else 
            heap_tree_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    heap_tree_V_we0_assign_proc : process(tmp_11_reg_1550, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((tmp_11_reg_1550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            heap_tree_V_we0 <= ap_const_logic_1;
        else 
            heap_tree_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_assign_1_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_7_reg_1483),32));
    i_assign_2_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(last_loc2_V),32));
    i_assign_3_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(last_loc1_V_load_reg_1554),32));
    i_assign_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_6_reg_1478),32));
    loc2_V_cast_fu_1365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_reg_1648),14));
    loc_V_2_trunc_fu_972_p2 <= std_logic_vector(unsigned(tmp_35_fu_962_p1) + unsigned(ap_const_lv5_1));
    loc_V_trunc_fu_1057_p2 <= std_logic_vector(unsigned(p_Result_s_fu_1041_p4) + unsigned(ap_const_lv5_1));
    or_cond_fu_929_p2 <= (tmp_1_fu_916_p2 or tmp_10_fu_922_p3);
    p_0167_0_i1_cast_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0167_0_i1_phi_fu_407_p34),6));
    p_0167_0_i_cast_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0167_0_i_phi_fu_649_p34),6));
        p_0244_0_i1_cast1_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0244_0_i1_reg_573),6));

    p_0244_0_i1_cast_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0244_0_i1_cast1_fu_1204_p1),7));
        p_0244_0_i_cast1_fu_1325_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_p_0244_0_i_phi_fu_817_p34),6));

    p_0244_0_i_cast_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0244_0_i_cast1_fu_1325_p1),7));
    p_0248_0_i_cast_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0248_0_i_phi_fu_761_p34),7));
    p_0252_0_i1_cast_fu_1188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0252_0_i1_phi_fu_463_p34),7));
    p_0252_0_i_cast_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0252_0_i_phi_fu_705_p34),6));
    
    p_Result_1_fu_997_p4_proc : process(p_Val2_5_reg_1467, i_assign_1_fu_994_p1)
    begin
        p_Result_1_fu_997_p4 <= p_Val2_5_reg_1467;
        if to_integer(unsigned(i_assign_1_fu_994_p1)) >= p_Val2_5_reg_1467'low and to_integer(unsigned(i_assign_1_fu_994_p1)) <= p_Val2_5_reg_1467'high then
            p_Result_1_fu_997_p4(to_integer(unsigned(i_assign_1_fu_994_p1))) <= ap_const_lv1_1(0);
        end if;
    end process;

    p_Result_2_fu_978_p5 <= (used_free_V_q0(31 downto 5) & loc_V_2_trunc_fu_972_p2);
    
    p_Result_3_fu_1099_p4_proc : process(heap_tree_V_q0, i_assign_2_fu_1095_p1)
    begin
        p_Result_3_fu_1099_p4 <= heap_tree_V_q0;
        if to_integer(unsigned(i_assign_2_fu_1095_p1)) >= heap_tree_V_q0'low and to_integer(unsigned(i_assign_2_fu_1095_p1)) <= heap_tree_V_q0'high then
            p_Result_3_fu_1099_p4(to_integer(unsigned(i_assign_2_fu_1095_p1))) <= ap_const_lv1_0(0);
        end if;
    end process;

    p_Result_4_fu_1063_p5 <= (used_free_V_q0(31 downto 10) & loc_V_trunc_fu_1057_p2 & used_free_V_q0(4 downto 0));
    
    p_Result_5_fu_1119_p4_proc : process(p_Val2_5_reg_1467, i_assign_3_fu_1116_p1)
    begin
        p_Result_5_fu_1119_p4 <= p_Val2_5_reg_1467;
        if to_integer(unsigned(i_assign_3_fu_1116_p1)) >= p_Val2_5_reg_1467'low and to_integer(unsigned(i_assign_3_fu_1116_p1)) <= p_Val2_5_reg_1467'high then
            p_Result_5_fu_1119_p4(to_integer(unsigned(i_assign_3_fu_1116_p1))) <= ap_const_lv1_0(0);
        end if;
    end process;

    p_Result_8_fu_902_p4 <= alloc_free_target_re_reg_1456(19 downto 4);
    p_Result_9_fu_1395_p5 <= (used_free_V_q0(31 downto 10) & ap_const_lv5_1 & used_free_V_q0(4 downto 0));
    
    p_Result_s_39_fu_1015_p4_proc : process(heap_tree_V_q0, i_assign_fu_1012_p1)
    begin
        p_Result_s_39_fu_1015_p4 <= heap_tree_V_q0;
        if to_integer(unsigned(i_assign_fu_1012_p1)) >= heap_tree_V_q0'low and to_integer(unsigned(i_assign_fu_1012_p1)) <= heap_tree_V_q0'high then
            p_Result_s_39_fu_1015_p4(to_integer(unsigned(i_assign_fu_1012_p1))) <= ap_const_lv1_1(0);
        end if;
    end process;

    p_Result_s_fu_1041_p4 <= used_free_V_q0(9 downto 5);
    p_Val2_2_fu_1134_p2 <= (p_not_reg_1517 and p_Val2_5_reg_1467);
    p_Val2_7_fu_1253_p2 <= (p_not1_fu_1247_p2 and heap_tree_V_q0);
    p_not1_fu_1247_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(heap_tree_V_q0));
    p_not_fu_956_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(top_heap_V));
    phitmp_cast_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phitmp_fu_1415_p2),20));
    phitmp_fu_1415_p2 <= (tmp_31_fu_1408_p3 or ap_const_lv18_1);
    r_V_fu_1368_p3 <= (tmp_22_reg_1606 & ap_const_lv6_0);
    tmp2_cast_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_1212_p2),8));
    tmp2_fu_1212_p2 <= std_logic_vector(unsigned(p_0248_0_i1_reg_516) + unsigned(p_0167_0_i1_cast_reg_1587));
    tmp3_cast_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_1221_p2),8));
    tmp3_fu_1221_p2 <= std_logic_vector(unsigned(p_0244_0_i1_cast_fu_1208_p1) + unsigned(p_0252_0_i1_cast_reg_1595));
    tmp4_cast_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_fu_1333_p2),8));
    tmp4_fu_1333_p2 <= std_logic_vector(unsigned(p_0252_0_i_cast_fu_1307_p1) + unsigned(p_0167_0_i_cast_fu_1298_p1));
    tmp5_cast_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp5_fu_1343_p2),8));
    tmp5_fu_1343_p2 <= std_logic_vector(unsigned(p_0244_0_i_cast_fu_1329_p1) + unsigned(p_0248_0_i_cast_fu_1316_p1));
    tmp_10_fu_922_p3 <= alloc_size_read_reg_1451(1 downto 1);
    tmp_11_fu_1051_p2 <= "1" when (p_Result_s_fu_1041_p4 = ap_const_lv5_F) else "0";
    tmp_12_fu_1172_p2 <= "1" when (AA_V_fu_1138_p1 = ap_const_lv16_0) else "0";
    tmp_13_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_7_reg_1483),64));
    tmp_15_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(last_loc1_V),64));
    tmp_16_fu_1110_p2 <= "1" when (p_Result_3_fu_1099_p4 = ap_const_lv64_0) else "0";
    tmp_19_fu_1182_p2 <= "1" when (BB_V_fu_1142_p4 = ap_const_lv16_0) else "0";
    tmp_1_fu_916_p2 <= "1" when (top_heap_V = ap_const_lv64_0) else "0";
    tmp_20_fu_1192_p2 <= "1" when (CC_V_fu_1152_p4 = ap_const_lv16_0) else "0";
    tmp_21_fu_1198_p2 <= "1" when (DD_V_fu_1162_p4 = ap_const_lv16_0) else "0";
    tmp_22_fu_1230_p2 <= std_logic_vector(unsigned(tmp2_cast_fu_1217_p1) + unsigned(tmp3_cast_fu_1226_p1));
    tmp_23_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_1230_p2),64));
    tmp_24_fu_1293_p2 <= "1" when (AA_V_1_reg_1616 = ap_const_lv16_0) else "0";
    tmp_25_fu_1302_p2 <= "1" when (BB_V_1_reg_1621 = ap_const_lv16_0) else "0";
    tmp_26_fu_1311_p2 <= "1" when (CC_V_1_reg_1626 = ap_const_lv16_0) else "0";
    tmp_27_fu_1320_p2 <= "1" when (DD_V_1_reg_1631 = ap_const_lv16_0) else "0";
    tmp_28_fu_1353_p2 <= std_logic_vector(unsigned(tmp4_cast_fu_1339_p1) + unsigned(tmp5_cast_fu_1349_p1));
    tmp_29_fu_1375_p2 <= std_logic_vector(unsigned(loc2_V_cast_fu_1365_p1) + unsigned(r_V_fu_1368_p3));
    tmp_30_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_1375_p2),64));
    tmp_31_fu_1408_p3 <= (tmp_29_reg_1653 & ap_const_lv4_0);
    tmp_33_cast_fu_1386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_reg_1653),20));
    tmp_33_fu_1434_p2 <= std_logic_vector(unsigned(tmp_37_cast_fu_1431_p1) + unsigned(ap_const_lv19_7FFFF));
    tmp_34_fu_939_p3 <= last_offset_V(19 downto 19);
    tmp_35_fu_962_p1 <= used_free_V_q0(5 - 1 downto 0);
    tmp_37_cast_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phitmp_reg_1669),19));
        tmp_38_cast_fu_1440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_33_fu_1434_p2),32));

    tmp_3_fu_879_p2 <= "1" when (alloc_cmd_read_reg_1445 = ap_const_lv8_3) else "0";
    tmp_5_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_8_fu_902_p4),64));
    tmp_7_fu_966_p2 <= "1" when (tmp_35_fu_962_p1 = ap_const_lv5_F) else "0";
    tmp_8_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(last_addr_V),32));
    tmp_9_fu_1026_p2 <= std_logic_vector(unsigned(last_addr_V) + unsigned(ap_const_lv20_1));
    tmp_fu_870_p2 <= "1" when (alloc_cmd_read_reg_1445 = ap_const_lv8_2) else "0";
    tmp_s_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_reg_1503),64));

    used_free_V_address0_assign_proc : process(ap_CS_fsm_state2, tmp_5_fu_911_p1, tmp_5_reg_1489, tmp_s_fu_1037_p1, tmp_s_reg_1540, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state13, tmp_30_fu_1381_p1, tmp_30_reg_1659, ap_CS_fsm_state14, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            used_free_V_address0 <= tmp_30_reg_1659(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            used_free_V_address0 <= tmp_30_fu_1381_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            used_free_V_address0 <= tmp_s_reg_1540(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            used_free_V_address0 <= tmp_s_fu_1037_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            used_free_V_address0 <= tmp_5_reg_1489(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            used_free_V_address0 <= tmp_5_fu_911_p1(12 - 1 downto 0);
        else 
            used_free_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    used_free_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_io, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io)))) then 
            used_free_V_ce0 <= ap_const_logic_1;
        else 
            used_free_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    used_free_V_d0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state14, storemerge_reg_392, ap_CS_fsm_state5, p_Result_4_fu_1063_p5, p_Result_9_fu_1395_p5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            used_free_V_d0 <= p_Result_9_fu_1395_p5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            used_free_V_d0 <= p_Result_4_fu_1063_p5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            used_free_V_d0 <= storemerge_reg_392;
        else 
            used_free_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    used_free_V_we0_assign_proc : process(tmp_3_reg_1474, tmp_11_fu_1051_p2, ap_CS_fsm_state7, ap_CS_fsm_state14, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_11_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((tmp_3_reg_1474 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            used_free_V_we0 <= ap_const_logic_1;
        else 
            used_free_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
