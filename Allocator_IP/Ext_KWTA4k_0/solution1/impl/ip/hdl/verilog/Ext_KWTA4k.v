// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Ext_KWTA4k,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.206500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1068,HLS_SYN_LUT=3084,HLS_VERSION=2018_2}" *)

module Ext_KWTA4k (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        alloc_size,
        alloc_size_ap_vld,
        alloc_size_ap_ack,
        alloc_free_target,
        alloc_free_target_ap_vld,
        alloc_free_target_ap_ack,
        alloc_addr,
        alloc_addr_ap_vld,
        alloc_addr_ap_ack,
        alloc_cmd,
        alloc_cmd_ap_vld,
        alloc_cmd_ap_ack,
        com_port_layer_V,
        com_port_layer_V_ap_vld,
        com_port_layer_V_ap_ack,
        com_port_target_V,
        com_port_target_V_ap_vld,
        com_port_target_V_ap_ack,
        com_port_allocated_addr_V,
        com_port_allocated_addr_V_ap_vld,
        com_port_allocated_addr_V_ap_ack,
        com_port_cmd,
        com_port_cmd_ap_vld,
        com_port_cmd_ap_ack
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_state4 = 32'd8;
parameter    ap_ST_fsm_state5 = 32'd16;
parameter    ap_ST_fsm_state6 = 32'd32;
parameter    ap_ST_fsm_state7 = 32'd64;
parameter    ap_ST_fsm_state8 = 32'd128;
parameter    ap_ST_fsm_state9 = 32'd256;
parameter    ap_ST_fsm_state10 = 32'd512;
parameter    ap_ST_fsm_state11 = 32'd1024;
parameter    ap_ST_fsm_state12 = 32'd2048;
parameter    ap_ST_fsm_state13 = 32'd4096;
parameter    ap_ST_fsm_state14 = 32'd8192;
parameter    ap_ST_fsm_state15 = 32'd16384;
parameter    ap_ST_fsm_state16 = 32'd32768;
parameter    ap_ST_fsm_state17 = 32'd65536;
parameter    ap_ST_fsm_state18 = 32'd131072;
parameter    ap_ST_fsm_state19 = 32'd262144;
parameter    ap_ST_fsm_state20 = 32'd524288;
parameter    ap_ST_fsm_state21 = 32'd1048576;
parameter    ap_ST_fsm_state22 = 32'd2097152;
parameter    ap_ST_fsm_state23 = 32'd4194304;
parameter    ap_ST_fsm_state24 = 32'd8388608;
parameter    ap_ST_fsm_state25 = 32'd16777216;
parameter    ap_ST_fsm_state26 = 32'd33554432;
parameter    ap_ST_fsm_state27 = 32'd67108864;
parameter    ap_ST_fsm_state28 = 32'd134217728;
parameter    ap_ST_fsm_state29 = 32'd268435456;
parameter    ap_ST_fsm_state30 = 32'd536870912;
parameter    ap_ST_fsm_state31 = 32'd1073741824;
parameter    ap_ST_fsm_state32 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] alloc_size;
input   alloc_size_ap_vld;
output   alloc_size_ap_ack;
input  [31:0] alloc_free_target;
input   alloc_free_target_ap_vld;
output   alloc_free_target_ap_ack;
output  [31:0] alloc_addr;
output   alloc_addr_ap_vld;
input   alloc_addr_ap_ack;
input  [7:0] alloc_cmd;
input   alloc_cmd_ap_vld;
output   alloc_cmd_ap_ack;
output  [7:0] com_port_layer_V;
output   com_port_layer_V_ap_vld;
input   com_port_layer_V_ap_ack;
output  [15:0] com_port_target_V;
output   com_port_target_V_ap_vld;
input   com_port_target_V_ap_ack;
input  [15:0] com_port_allocated_addr_V;
input   com_port_allocated_addr_V_ap_vld;
output   com_port_allocated_addr_V_ap_ack;
output  [7:0] com_port_cmd;
output   com_port_cmd_ap_vld;
input   com_port_cmd_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg alloc_size_ap_ack;
reg alloc_free_target_ap_ack;
reg[31:0] alloc_addr;
reg alloc_addr_ap_vld;
reg alloc_cmd_ap_ack;
reg[7:0] com_port_layer_V;
reg com_port_layer_V_ap_vld;
reg[15:0] com_port_target_V;
reg com_port_target_V_ap_vld;
reg com_port_allocated_addr_V_ap_ack;
reg[7:0] com_port_cmd;
reg com_port_cmd_ap_vld;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] top_heap_V_0;
reg   [2:0] maintain_mask_V_address0;
reg    maintain_mask_V_ce0;
wire   [32:0] maintain_mask_V_q0;
reg   [5:0] heap_tree_V_address0;
reg    heap_tree_V_ce0;
reg    heap_tree_V_we0;
reg   [31:0] heap_tree_V_d0;
wire   [31:0] heap_tree_V_q0;
reg   [10:0] group_tree_V_address0;
reg    group_tree_V_ce0;
reg    group_tree_V_we0;
reg   [3:0] group_tree_V_d0;
wire   [3:0] group_tree_V_q0;
reg   [6:0] mark_mask_V_address0;
reg    mark_mask_V_ce0;
wire   [3:0] mark_mask_V_q0;
reg    alloc_size_blk_n;
reg    alloc_free_target_blk_n;
reg    alloc_addr_blk_n;
wire    ap_CS_fsm_state27;
wire   [0:0] tmp_38_fu_1713_p3;
wire    ap_CS_fsm_state20;
wire   [0:0] or_cond_fu_1582_p2;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_4_fu_1071_p2;
wire   [0:0] tmp_6_fu_1080_p2;
reg    alloc_cmd_blk_n;
reg    com_port_layer_V_blk_n;
wire   [0:0] grp_fu_980_p2;
wire    ap_CS_fsm_state7;
wire   [0:0] tmp_39_fu_1313_p2;
reg    com_port_target_V_blk_n;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state8;
reg    com_port_allocated_addr_V_blk_n;
wire    ap_CS_fsm_state26;
reg    com_port_cmd_blk_n;
wire   [15:0] grp_fu_986_p4;
reg   [15:0] reg_1019;
reg    ap_sig_ioackin_alloc_addr_ap_ack;
reg    ap_predicate_op84_write_state3;
reg    ap_sig_ioackin_com_port_cmd_ap_ack;
reg    ap_predicate_op99_write_state3;
reg    ap_sig_ioackin_com_port_layer_V_ap_ack;
reg    ap_predicate_op108_write_state3;
reg    ap_block_state3_io;
reg   [4:0] reg_1024;
reg   [10:0] reg_1028;
reg   [32:0] reg_1032;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state30;
reg   [7:0] alloc_cmd_read_reg_1842;
reg    ap_block_state1;
wire   [15:0] size_V_fu_1036_p1;
reg   [15:0] size_V_reg_1848;
reg   [31:0] alloc_free_target_re_reg_1853;
reg   [15:0] p_Result_8_fu_1046_p4;
reg   [15:0] p_Result_8_reg_1861;
reg   [0:0] tmp_4_reg_1873;
reg   [63:0] p_Val2_5_reg_1877;
reg   [0:0] tmp_6_reg_1888;
reg   [0:0] tmp_s_reg_1892;
reg   [10:0] group_tree_V_addr_reg_1896;
reg   [0:0] tmp_5_reg_1906;
wire   [63:0] p_not_fu_1111_p2;
reg   [63:0] p_not_reg_1910;
wire  signed [63:0] tmp0_V_7_fu_1162_p1;
wire    ap_CS_fsm_state4;
reg   [63:0] p_Result_9_fu_1192_p4;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_31_fu_1182_p2;
wire   [63:0] r_V_11_fu_1216_p2;
wire   [3:0] now1_V_fu_1222_p2;
wire   [15:0] phitmp3_fu_1242_p2;
wire   [1:0] tmp_70_fu_1248_p1;
reg   [1:0] tmp_70_reg_1944;
wire    ap_CS_fsm_state6;
reg   [5:0] heap_tree_V_addr_2_reg_1950;
wire    ap_CS_fsm_state10;
wire   [0:0] grp_fu_1013_p2;
reg   [5:0] heap_tree_V_addr_1_reg_1966;
wire   [31:0] tmp_29_fu_1363_p2;
reg   [31:0] tmp_29_reg_1976;
wire    ap_CS_fsm_state11;
reg   [63:0] p_Result_1_fu_1378_p4;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_26_fu_1401_p2;
wire    ap_CS_fsm_state14;
wire   [63:0] tmp0_V_6_fu_1412_p2;
reg   [63:0] tmp0_V_6_reg_1992;
wire    ap_CS_fsm_state16;
wire   [5:0] p_0167_0_i1_cast_fu_1456_p1;
reg   [5:0] p_0167_0_i1_cast_reg_2012;
wire   [6:0] p_0252_0_i1_cast_fu_1466_p1;
reg   [6:0] p_0252_0_i1_cast_reg_2020;
wire   [7:0] tmp_42_fu_1508_p2;
reg   [7:0] tmp_42_reg_2031;
wire    ap_CS_fsm_state17;
reg   [5:0] heap_tree_V_addr_3_reg_2037;
reg   [31:0] p_Val2_11_reg_2042;
wire    ap_CS_fsm_state18;
wire   [31:0] tmp_44_fu_1519_p2;
reg   [31:0] tmp_44_reg_2050;
wire   [31:0] tmp_45_fu_1525_p2;
reg   [31:0] tmp_45_reg_2055;
wire    ap_CS_fsm_state19;
wire   [5:0] p_061_0_i_cast_fu_1554_p1;
reg   [5:0] p_061_0_i_cast_reg_2069;
wire   [5:0] tmp_48_fu_1568_p2;
reg   [5:0] tmp_48_reg_2077;
reg    ap_block_state20_io;
reg   [0:0] or_cond_reg_2082;
wire   [12:0] tree_offset_V_fu_1599_p2;
reg   [12:0] tree_offset_V_reg_2086;
reg   [10:0] group_tree_V_addr_1_reg_2092;
wire   [15:0] tree_offset_V_cast_fu_1610_p1;
reg   [15:0] tree_offset_V_cast_reg_2097;
reg    ap_block_state21_io;
reg   [3:0] lhs_V_1_reg_2102;
wire   [1:0] tmp_75_fu_1613_p1;
reg   [1:0] tmp_75_reg_2107;
wire   [0:0] cond_fu_1635_p2;
reg   [0:0] cond_reg_2112;
wire    ap_CS_fsm_state24;
reg   [63:0] p_Result_7_fu_1700_p4;
wire    ap_CS_fsm_state25;
reg   [15:0] addr_HTA_V_3_reg_2127;
wire   [4:0] loc2_V_fu_1709_p1;
reg   [4:0] loc2_V_reg_2134;
reg   [0:0] tmp_38_reg_2139;
reg    ap_block_state27_io;
wire   [10:0] r_V_s_fu_1730_p4;
reg   [10:0] r_V_s_reg_2143;
reg   [5:0] heap_tree_V_addr_reg_2157;
wire   [31:0] tmp_23_fu_1789_p2;
reg   [31:0] tmp_23_reg_2167;
wire    ap_CS_fsm_state28;
reg   [63:0] p_Result_s_fu_1803_p4;
wire    ap_CS_fsm_state29;
wire   [63:0] tmp_19_fu_1831_p2;
wire    ap_CS_fsm_state31;
reg   [4:0] layer0_V_reg_491;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_1056_p2;
wire   [15:0] TMP_1_V_fu_1066_p2;
reg   [3:0] p_3_reg_548;
reg   [63:0] p_01572_0_in_reg_559;
reg   [15:0] loc_in_group_tree_V_2_reg_568;
reg   [63:0] p_Val2_12_reg_579;
reg   [63:0] storemerge_reg_589;
reg   [3:0] ap_phi_mux_p_0167_0_i1_phi_fu_601_p34;
wire   [0:0] tmp_9_fu_1450_p2;
wire   [15:0] AA_V_fu_1416_p1;
reg   [4:0] ap_phi_mux_p_0252_0_i1_phi_fu_657_p34;
wire   [0:0] tmp_32_fu_1460_p2;
wire   [15:0] BB_V_fu_1420_p4;
reg   [5:0] p_0248_0_i1_reg_710;
wire   [0:0] tmp_40_fu_1470_p2;
wire   [15:0] CC_V_fu_1430_p4;
reg   [4:0] p_0244_0_i1_reg_767;
wire   [0:0] tmp_41_fu_1476_p2;
wire   [15:0] DD_V_fu_1440_p4;
reg   [3:0] ap_phi_mux_p_061_0_i_phi_fu_843_p34;
wire   [0:0] tmp_46_fu_1548_p2;
wire   [15:0] AA_V_1_fu_1534_p1;
reg   [4:0] p_0102_0_i_reg_896;
wire   [0:0] tmp_47_fu_1558_p2;
wire   [15:0] BB_V_1_fu_1538_p4;
reg   [63:0] storemerge1_reg_969;
wire   [63:0] tmp_11_fu_1088_p1;
wire   [63:0] tmp_13_fu_1101_p1;
wire   [63:0] tmp_37_fu_1263_p1;
wire   [63:0] tmp_27_fu_1328_p1;
wire   [63:0] tmp_28_fu_1333_p1;
wire   [63:0] tmp_24_fu_1344_p1;
wire   [63:0] tmp_43_fu_1514_p1;
wire   [63:0] tmp_51_fu_1605_p1;
wire   [63:0] tmp_55_fu_1653_p1;
wire   [63:0] tmp_20_fu_1749_p1;
wire   [63:0] tmp_21_fu_1754_p1;
wire   [63:0] tmp_17_fu_1765_p1;
reg   [63:0] p_Result_5_fu_1298_p4;
reg    ap_sig_ioackin_com_port_target_V_ap_ack;
reg    ap_block_state7_io;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state32;
wire   [31:0] tmp_53_fu_1648_p1;
wire   [31:0] tmp_8_cast_fu_1725_p1;
reg    ap_reg_ioackin_alloc_addr_ap_ack;
reg    ap_reg_ioackin_com_port_cmd_ap_ack;
wire   [7:0] p_2_fu_1106_p1;
wire   [7:0] p_1_fu_1117_p1;
reg    ap_reg_ioackin_com_port_layer_V_ap_ack;
reg    ap_reg_ioackin_com_port_target_V_ap_ack;
wire   [3:0] tmp_36_fu_1256_p2;
wire   [3:0] r_V_14_fu_1661_p2;
reg   [31:0] p_Result_4_fu_1277_p4;
reg   [31:0] p_Result_6_fu_1681_p4;
wire   [15:0] tmp_size_V_fu_1040_p2;
wire   [15:0] p_s_fu_1061_p2;
wire   [0:0] loc_in_group_tree_V_1_fu_1085_p1;
wire   [5:0] r_V_fu_1093_p3;
wire   [31:0] tmp_12_fu_1122_p1;
wire   [3:0] tmp_14_fu_1132_p2;
wire   [31:0] lhs_V_fu_1126_p2;
wire   [27:0] tmp_16_fu_1144_p4;
wire   [3:0] tmp_15_fu_1138_p2;
wire   [31:0] r_V_1_fu_1154_p3;
wire   [1:0] rec_bits_V_fu_1166_p1;
wire   [0:0] tmp_30_fu_1170_p2;
wire   [0:0] not_s_fu_1176_p2;
wire   [31:0] i_assign_2_fu_1188_p1;
reg   [15:0] p_Result_10_fu_1202_p4;
wire   [63:0] tmp_34_fu_1212_p1;
wire   [14:0] phitmp1_fu_1228_p4;
wire   [15:0] tmp_35_fu_1238_p1;
wire   [3:0] tmp_71_fu_1252_p1;
wire   [31:0] i_assign_3_fu_1268_p1;
wire   [0:0] p_Repl2_2_fu_1272_p2;
wire   [31:0] i_assign_4_fu_1288_p1;
wire   [0:0] p_Repl2_3_fu_1292_p2;
wire   [3:0] tmp_61_fu_1318_p1;
wire   [3:0] r_V_9_fu_1322_p2;
wire   [3:0] r_V_7_fu_1338_p2;
wire   [31:0] tmp_65_fu_1349_p1;
wire   [31:0] tmp_34_cast_fu_1353_p1;
wire   [31:0] r_V_16_fu_1357_p2;
wire   [31:0] i_assign_1_fu_1369_p1;
wire   [0:0] p_Repl2_1_fu_1373_p2;
wire  signed [63:0] maintain_mask_V_load_6_fu_1387_p1;
wire   [63:0] tmp_25_fu_1391_p1;
wire   [63:0] r_V_15_fu_1395_p2;
wire  signed [5:0] p_0244_0_i1_cast9_fu_1482_p1;
wire   [5:0] tmp2_fu_1490_p2;
wire   [6:0] p_0244_0_i1_cast_fu_1486_p1;
wire   [6:0] tmp3_fu_1499_p2;
wire   [7:0] tmp2_cast_fu_1495_p1;
wire   [7:0] tmp3_cast_fu_1504_p1;
wire   [31:0] tmp1_V_fu_1529_p2;
wire   [5:0] p_0102_0_i_cast_fu_1564_p1;
wire   [0:0] tmp_49_fu_1573_p2;
wire   [0:0] tmp_50_fu_1578_p2;
wire   [12:0] r_V_12_fu_1588_p3;
wire   [12:0] tmp_65_cast_fu_1595_p1;
wire   [1:0] tmp_52_fu_1623_p2;
wire   [1:0] group_tree_tmp_V_fu_1617_p2;
wire   [1:0] group_tree_tmp_maske_fu_1629_p2;
wire   [13:0] r_V_13_fu_1641_p3;
wire   [1:0] tmp_76_fu_1657_p1;
wire   [1:0] r_V_17_cast_fu_1667_p2;
wire   [31:0] i_assign_5_fu_1672_p1;
wire   [0:0] p_Repl2_4_fu_1675_p2;
wire   [31:0] i_assign_6_fu_1691_p1;
wire   [0:0] p_Repl2_5_fu_1694_p2;
wire   [15:0] tmp_59_fu_1720_p2;
wire   [3:0] tmp_60_fu_1739_p1;
wire   [3:0] r_V_5_fu_1743_p2;
wire   [3:0] r_V_3_fu_1759_p2;
wire   [31:0] tmp_63_fu_1770_p1;
wire   [31:0] tmp_25_cast_fu_1774_p1;
wire   [31:0] r_V_6_fu_1777_p2;
wire   [31:0] tmp_22_fu_1783_p2;
wire   [31:0] i_assign_fu_1795_p1;
wire   [0:0] p_Repl2_s_fu_1798_p2;
wire  signed [63:0] maintain_mask_V_load_4_fu_1812_p1;
wire   [63:0] tmp_18_fu_1816_p1;
wire   [63:0] r_V_4_fu_1819_p2;
wire   [63:0] tmp0_V_fu_1825_p2;
reg   [31:0] ap_NS_fsm;
reg    ap_condition_800;
reg    ap_condition_593;
reg    ap_condition_1150;
reg    ap_condition_983;
reg    ap_condition_899;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 top_heap_V_0 = 64'd18446744073709551615;
#0 ap_reg_ioackin_alloc_addr_ap_ack = 1'b0;
#0 ap_reg_ioackin_com_port_cmd_ap_ack = 1'b0;
#0 ap_reg_ioackin_com_port_layer_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_com_port_target_V_ap_ack = 1'b0;
end

Ext_KWTA4k_maintabkb #(
    .DataWidth( 33 ),
    .AddressRange( 7 ),
    .AddressWidth( 3 ))
maintain_mask_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(maintain_mask_V_address0),
    .ce0(maintain_mask_V_ce0),
    .q0(maintain_mask_V_q0)
);

Ext_KWTA4k_heap_tcud #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
heap_tree_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(heap_tree_V_address0),
    .ce0(heap_tree_V_ce0),
    .we0(heap_tree_V_we0),
    .d0(heap_tree_V_d0),
    .q0(heap_tree_V_q0)
);

Ext_KWTA4k_group_dEe #(
    .DataWidth( 4 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
group_tree_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(group_tree_V_address0),
    .ce0(group_tree_V_ce0),
    .we0(group_tree_V_we0),
    .d0(group_tree_V_d0),
    .q0(group_tree_V_q0)
);

Ext_KWTA4k_mark_meOg #(
    .DataWidth( 4 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
mark_mask_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mark_mask_V_address0),
    .ce0(mark_mask_V_ce0),
    .q0(mark_mask_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_alloc_addr_ap_ack <= 1'b0;
    end else begin
        if ((((ap_predicate_op84_write_state3 == 1'b1) & (1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21)) | ((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20) & (or_cond_fu_1582_p2 == 1'd1)) | ((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd0)) | ((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd1)))) begin
            ap_reg_ioackin_alloc_addr_ap_ack <= 1'b0;
        end else if ((((ap_predicate_op84_write_state3 == 1'b1) & (1'b1 == alloc_addr_ap_ack) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == alloc_addr_ap_ack) & (1'b1 == ap_CS_fsm_state21)) | ((1'b1 == alloc_addr_ap_ack) & (1'b1 == ap_CS_fsm_state20) & (or_cond_fu_1582_p2 == 1'd1)) | ((1'b1 == alloc_addr_ap_ack) & (1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd0)) | ((1'b1 == alloc_addr_ap_ack) & (1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd1)))) begin
            ap_reg_ioackin_alloc_addr_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_com_port_cmd_ap_ack <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1) & (1'b0 == ap_block_state7_io)) | ((ap_predicate_op108_write_state3 == 1'b1) & (1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3)) | ((ap_predicate_op99_write_state3 == 1'b1) & (1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21)))) begin
            ap_reg_ioackin_com_port_cmd_ap_ack <= 1'b0;
        end else if ((((com_port_cmd_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)) | ((ap_predicate_op108_write_state3 == 1'b1) & (com_port_cmd_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((ap_predicate_op99_write_state3 == 1'b1) & (com_port_cmd_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((com_port_cmd_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
            ap_reg_ioackin_com_port_cmd_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_com_port_layer_V_ap_ack <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1) & (1'b0 == ap_block_state7_io)) | ((ap_predicate_op108_write_state3 == 1'b1) & (1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3)) | ((ap_predicate_op99_write_state3 == 1'b1) & (1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21)))) begin
            ap_reg_ioackin_com_port_layer_V_ap_ack <= 1'b0;
        end else if ((((com_port_layer_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)) | ((ap_predicate_op108_write_state3 == 1'b1) & (com_port_layer_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((ap_predicate_op99_write_state3 == 1'b1) & (com_port_layer_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((com_port_layer_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
            ap_reg_ioackin_com_port_layer_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_com_port_target_V_ap_ack <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state8) & (ap_sig_ioackin_com_port_target_V_ap_ack == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (ap_sig_ioackin_com_port_target_V_ap_ack == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1) & (1'b0 == ap_block_state7_io)))) begin
            ap_reg_ioackin_com_port_target_V_ap_ack <= 1'b0;
        end else if ((((com_port_target_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((com_port_target_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((com_port_target_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)))) begin
            ap_reg_ioackin_com_port_target_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((tmp_fu_1056_p2 == 1'd1)) begin
            layer0_V_reg_491 <= 5'd12;
        end else if ((1'b1 == ap_condition_593)) begin
            layer0_V_reg_491 <= 5'd28;
        end else if (((16'd2 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd29;
        end else if (((16'd4 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd30;
        end else if (((16'd8 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd31;
        end else if (((16'd16 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd0;
        end else if (((16'd32 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd1;
        end else if (((16'd64 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd2;
        end else if (((16'd128 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd3;
        end else if (((16'd256 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd4;
        end else if (((16'd512 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd5;
        end else if (((16'd1024 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd6;
        end else if (((16'd2048 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd7;
        end else if (((16'd4096 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd8;
        end else if (((16'd8192 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd9;
        end else if (((16'd16384 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd10;
        end else if (((16'd32768 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0))) begin
            layer0_V_reg_491 <= 5'd11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_31_fu_1182_p2 == 1'd1))) begin
        loc_in_group_tree_V_2_reg_568 <= phitmp3_fu_1242_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        loc_in_group_tree_V_2_reg_568 <= 16'd65535;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        if ((tmp_47_fu_1558_p2 == 1'd1)) begin
            p_0102_0_i_reg_896 <= 5'd0;
        end else if ((1'b1 == ap_condition_1150)) begin
            p_0102_0_i_reg_896 <= 5'd16;
        end else if (((16'd2 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd17;
        end else if (((16'd4 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd18;
        end else if (((16'd8 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd19;
        end else if (((16'd16 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd20;
        end else if (((16'd32 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd21;
        end else if (((16'd64 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd22;
        end else if (((16'd128 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd23;
        end else if (((16'd256 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd24;
        end else if (((16'd512 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd25;
        end else if (((16'd1024 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd26;
        end else if (((16'd2048 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd27;
        end else if (((16'd4096 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd28;
        end else if (((16'd8192 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd29;
        end else if (((16'd16384 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd30;
        end else if (((16'd32768 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0))) begin
            p_0102_0_i_reg_896 <= 5'd31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_31_fu_1182_p2 == 1'd1))) begin
        p_01572_0_in_reg_559 <= r_V_11_fu_1216_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_01572_0_in_reg_559 <= tmp0_V_7_fu_1162_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        if ((tmp_41_fu_1476_p2 == 1'd1)) begin
            p_0244_0_i1_reg_767 <= 5'd0;
        end else if ((1'b1 == ap_condition_983)) begin
            p_0244_0_i1_reg_767 <= 5'd16;
        end else if (((16'd2 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd17;
        end else if (((16'd4 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd18;
        end else if (((16'd8 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd19;
        end else if (((16'd16 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd20;
        end else if (((16'd32 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd21;
        end else if (((16'd64 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd22;
        end else if (((16'd128 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd23;
        end else if (((16'd256 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd24;
        end else if (((16'd512 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd25;
        end else if (((16'd1024 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd26;
        end else if (((16'd2048 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd27;
        end else if (((16'd4096 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd28;
        end else if (((16'd8192 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd29;
        end else if (((16'd16384 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd30;
        end else if (((16'd32768 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0))) begin
            p_0244_0_i1_reg_767 <= 5'd31;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        if ((tmp_40_fu_1470_p2 == 1'd1)) begin
                        p_0248_0_i1_reg_710[0] <= 1'b0;
            p_0248_0_i1_reg_710[1] <= 1'b0;
            p_0248_0_i1_reg_710[2] <= 1'b0;
            p_0248_0_i1_reg_710[3] <= 1'b0;
            p_0248_0_i1_reg_710[5] <= 1'b0;
        end else if ((1'b1 == ap_condition_899)) begin
                        p_0248_0_i1_reg_710[0] <= 1'b0;
            p_0248_0_i1_reg_710[1] <= 1'b0;
            p_0248_0_i1_reg_710[2] <= 1'b0;
            p_0248_0_i1_reg_710[3] <= 1'b0;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd2 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b1;
            p_0248_0_i1_reg_710[1] <= 1'b0;
            p_0248_0_i1_reg_710[2] <= 1'b0;
            p_0248_0_i1_reg_710[3] <= 1'b0;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd4 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b0;
            p_0248_0_i1_reg_710[1] <= 1'b1;
            p_0248_0_i1_reg_710[2] <= 1'b0;
            p_0248_0_i1_reg_710[3] <= 1'b0;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd8 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b1;
            p_0248_0_i1_reg_710[1] <= 1'b1;
            p_0248_0_i1_reg_710[2] <= 1'b0;
            p_0248_0_i1_reg_710[3] <= 1'b0;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd16 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b0;
            p_0248_0_i1_reg_710[1] <= 1'b0;
            p_0248_0_i1_reg_710[2] <= 1'b1;
            p_0248_0_i1_reg_710[3] <= 1'b0;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd32 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b1;
            p_0248_0_i1_reg_710[1] <= 1'b0;
            p_0248_0_i1_reg_710[2] <= 1'b1;
            p_0248_0_i1_reg_710[3] <= 1'b0;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd64 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b0;
            p_0248_0_i1_reg_710[1] <= 1'b1;
            p_0248_0_i1_reg_710[2] <= 1'b1;
            p_0248_0_i1_reg_710[3] <= 1'b0;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd128 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b1;
            p_0248_0_i1_reg_710[1] <= 1'b1;
            p_0248_0_i1_reg_710[2] <= 1'b1;
            p_0248_0_i1_reg_710[3] <= 1'b0;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd256 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b0;
            p_0248_0_i1_reg_710[1] <= 1'b0;
            p_0248_0_i1_reg_710[2] <= 1'b0;
            p_0248_0_i1_reg_710[3] <= 1'b1;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd512 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b1;
            p_0248_0_i1_reg_710[1] <= 1'b0;
            p_0248_0_i1_reg_710[2] <= 1'b0;
            p_0248_0_i1_reg_710[3] <= 1'b1;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd1024 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b0;
            p_0248_0_i1_reg_710[1] <= 1'b1;
            p_0248_0_i1_reg_710[2] <= 1'b0;
            p_0248_0_i1_reg_710[3] <= 1'b1;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd2048 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b1;
            p_0248_0_i1_reg_710[1] <= 1'b1;
            p_0248_0_i1_reg_710[2] <= 1'b0;
            p_0248_0_i1_reg_710[3] <= 1'b1;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd4096 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b0;
            p_0248_0_i1_reg_710[1] <= 1'b0;
            p_0248_0_i1_reg_710[2] <= 1'b1;
            p_0248_0_i1_reg_710[3] <= 1'b1;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd8192 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b1;
            p_0248_0_i1_reg_710[1] <= 1'b0;
            p_0248_0_i1_reg_710[2] <= 1'b1;
            p_0248_0_i1_reg_710[3] <= 1'b1;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd16384 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b0;
            p_0248_0_i1_reg_710[1] <= 1'b1;
            p_0248_0_i1_reg_710[2] <= 1'b1;
            p_0248_0_i1_reg_710[3] <= 1'b1;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end else if (((16'd32768 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0))) begin
                        p_0248_0_i1_reg_710[0] <= 1'b1;
            p_0248_0_i1_reg_710[1] <= 1'b1;
            p_0248_0_i1_reg_710[2] <= 1'b1;
            p_0248_0_i1_reg_710[3] <= 1'b1;
            p_0248_0_i1_reg_710[5] <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_31_fu_1182_p2 == 1'd1))) begin
        p_3_reg_548 <= now1_V_fu_1222_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_3_reg_548 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_31_fu_1182_p2 == 1'd1))) begin
        p_Val2_12_reg_579 <= p_Result_9_fu_1192_p4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_Val2_12_reg_579 <= tmp0_V_7_fu_1162_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        storemerge1_reg_969 <= tmp_19_fu_1831_p2;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        storemerge1_reg_969 <= p_Result_s_fu_1803_p4;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        storemerge1_reg_969 <= p_Result_7_fu_1700_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        storemerge_reg_589 <= tmp_26_fu_1401_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        storemerge_reg_589 <= p_Result_1_fu_1378_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (((tmp_38_reg_2139 == 1'd0) & (tmp_5_reg_1906 == 1'd1) & (tmp_4_reg_1873 == 1'd1)) | ((or_cond_reg_2082 == 1'd0) & (tmp_5_reg_1906 == 1'd0) & (tmp_4_reg_1873 == 1'd1))))) begin
        top_heap_V_0 <= storemerge1_reg_969;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_s_reg_1892 == 1'd1) & (tmp_6_reg_1888 == 1'd1))) begin
        top_heap_V_0 <= storemerge_reg_589;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_io))) begin
        top_heap_V_0 <= p_Result_5_fu_1298_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((com_port_allocated_addr_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        addr_HTA_V_3_reg_2127 <= com_port_allocated_addr_V;
        loc2_V_reg_2134 <= loc2_V_fu_1709_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_cmd_read_reg_1842 <= alloc_cmd;
        alloc_free_target_re_reg_1853 <= alloc_free_target;
        p_Result_8_reg_1861 <= p_Result_8_fu_1046_p4;
        size_V_reg_1848 <= size_V_fu_1036_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21))) begin
        cond_reg_2112 <= cond_fu_1635_p2;
        lhs_V_1_reg_2102 <= group_tree_V_q0;
        tmp_75_reg_2107 <= tmp_75_fu_1613_p1;
        tree_offset_V_cast_reg_2097[12 : 0] <= tree_offset_V_cast_fu_1610_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20) & (or_cond_fu_1582_p2 == 1'd0))) begin
        group_tree_V_addr_1_reg_2092 <= tmp_51_fu_1605_p1;
        tree_offset_V_reg_2086 <= tree_offset_V_fu_1599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_980_p2 == 1'd0) & (tmp_4_fu_1071_p2 == 1'd0) & (tmp_6_fu_1080_p2 == 1'd1))) begin
        group_tree_V_addr_reg_1896 <= tmp_11_fu_1088_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (grp_fu_1013_p2 == 1'd0))) begin
        heap_tree_V_addr_1_reg_1966 <= tmp_28_fu_1333_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        heap_tree_V_addr_2_reg_1950 <= tmp_37_fu_1263_p1;
        tmp_70_reg_1944 <= tmp_70_fu_1248_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        heap_tree_V_addr_3_reg_2037 <= tmp_43_fu_1514_p1;
        tmp_42_reg_2031 <= tmp_42_fu_1508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27) & (grp_fu_1013_p2 == 1'd0) & (tmp_38_fu_1713_p3 == 1'd0))) begin
        heap_tree_V_addr_reg_2157 <= tmp_21_fu_1754_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20))) begin
        or_cond_reg_2082 <= or_cond_fu_1582_p2;
        tmp_48_reg_2077 <= tmp_48_fu_1568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_0167_0_i1_cast_reg_2012[3 : 0] <= p_0167_0_i1_cast_fu_1456_p1[3 : 0];
        p_0252_0_i1_cast_reg_2020[4 : 0] <= p_0252_0_i1_cast_fu_1466_p1[4 : 0];
        tmp0_V_6_reg_1992 <= tmp0_V_6_fu_1412_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_061_0_i_cast_reg_2069[3 : 0] <= p_061_0_i_cast_fu_1554_p1[3 : 0];
        tmp_45_reg_2055 <= tmp_45_fu_1525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        p_Val2_11_reg_2042 <= heap_tree_V_q0;
        tmp_44_reg_2050 <= tmp_44_fu_1519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3))) begin
        p_Val2_5_reg_1877 <= top_heap_V_0;
        tmp_4_reg_1873 <= tmp_4_fu_1071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_980_p2 == 1'd0) & (tmp_4_fu_1071_p2 == 1'd1))) begin
        p_not_reg_1910 <= p_not_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd0))) begin
        r_V_s_reg_2143 <= {{addr_HTA_V_3_reg_2127[15:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_predicate_op99_write_state3 == 1'b1) & (1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_980_p2 == 1'd0) & (tmp_4_fu_1071_p2 == 1'd0) & (tmp_6_fu_1080_p2 == 1'd1)))) begin
        reg_1019 <= {{alloc_free_target_re_reg_1853[16:1]}};
        reg_1024 <= {{alloc_free_target_re_reg_1853[5:1]}};
        reg_1028 <= {{alloc_free_target_re_reg_1853[16:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_1032 <= maintain_mask_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_23_reg_2167 <= tmp_23_fu_1789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_29_reg_1976 <= tmp_29_fu_1363_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27))) begin
        tmp_38_reg_2139 <= addr_HTA_V_3_reg_2127[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (tmp_4_fu_1071_p2 == 1'd1))) begin
        tmp_5_reg_1906 <= grp_fu_980_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (tmp_4_fu_1071_p2 == 1'd0))) begin
        tmp_6_reg_1888 <= tmp_6_fu_1080_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (tmp_4_fu_1071_p2 == 1'd0) & (tmp_6_fu_1080_p2 == 1'd1))) begin
        tmp_s_reg_1892 <= grp_fu_980_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd0))) begin
        alloc_addr = tmp_8_cast_fu_1725_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        alloc_addr = tmp_53_fu_1648_p1;
    end else if ((((ap_predicate_op84_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state20) & (or_cond_fu_1582_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd1)))) begin
        alloc_addr = 32'd4294967295;
    end else begin
        alloc_addr = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op84_write_state3 == 1'b1) & (ap_reg_ioackin_alloc_addr_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state3)) | ((ap_reg_ioackin_alloc_addr_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state21)) | ((ap_reg_ioackin_alloc_addr_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state20) & (or_cond_fu_1582_p2 == 1'd1)) | ((ap_reg_ioackin_alloc_addr_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd0)) | ((ap_reg_ioackin_alloc_addr_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd1)))) begin
        alloc_addr_ap_vld = 1'b1;
    end else begin
        alloc_addr_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state3) & (tmp_6_fu_1080_p2 == 1'd0) & (tmp_4_fu_1071_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state20) & (or_cond_fu_1582_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd1)))) begin
        alloc_addr_blk_n = alloc_addr_ap_ack;
    end else begin
        alloc_addr_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_cmd_ap_ack = 1'b1;
    end else begin
        alloc_cmd_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_cmd_blk_n = alloc_cmd_ap_vld;
    end else begin
        alloc_cmd_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_free_target_ap_ack = 1'b1;
    end else begin
        alloc_free_target_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_free_target_blk_n = alloc_free_target_ap_vld;
    end else begin
        alloc_free_target_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_size_ap_ack = 1'b1;
    end else begin
        alloc_size_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_size_blk_n = alloc_size_ap_vld;
    end else begin
        alloc_size_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd1)) | (~(16'd2 == AA_V_fu_1416_p1) & ~(16'd4 == AA_V_fu_1416_p1) & ~(16'd8 == AA_V_fu_1416_p1) & ~(16'd16 == AA_V_fu_1416_p1) & ~(16'd32 == AA_V_fu_1416_p1) & ~(16'd64 == AA_V_fu_1416_p1) & ~(16'd128 == AA_V_fu_1416_p1) & ~(16'd256 == AA_V_fu_1416_p1) & ~(16'd512 == AA_V_fu_1416_p1) & ~(16'd1024 == AA_V_fu_1416_p1) & ~(16'd2048 == AA_V_fu_1416_p1) & ~(16'd4096 == AA_V_fu_1416_p1) & ~(16'd8192 == AA_V_fu_1416_p1) & ~(16'd16384 == AA_V_fu_1416_p1) & ~(16'd32768 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0)))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd0;
    end else if (((16'd2 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd1;
    end else if (((16'd4 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd2;
    end else if (((16'd8 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd3;
    end else if (((16'd16 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd4;
    end else if (((16'd32 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd5;
    end else if (((16'd64 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd6;
    end else if (((16'd128 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd7;
    end else if (((16'd256 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd8;
    end else if (((16'd512 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd9;
    end else if (((16'd1024 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd10;
    end else if (((16'd2048 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd11;
    end else if (((16'd4096 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd12;
    end else if (((16'd8192 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd13;
    end else if (((16'd16384 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd14;
    end else if (((16'd32768 == AA_V_fu_1416_p1) & (1'b1 == ap_CS_fsm_state16) & (tmp_9_fu_1450_p2 == 1'd0))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 4'd15;
    end else begin
        ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        if ((tmp_32_fu_1460_p2 == 1'd1)) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd0;
        end else if ((1'b1 == ap_condition_800)) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd16;
        end else if (((16'd2 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd17;
        end else if (((16'd4 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd18;
        end else if (((16'd8 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd19;
        end else if (((16'd16 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd20;
        end else if (((16'd32 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd21;
        end else if (((16'd64 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd22;
        end else if (((16'd128 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd23;
        end else if (((16'd256 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd24;
        end else if (((16'd512 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd25;
        end else if (((16'd1024 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd26;
        end else if (((16'd2048 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd27;
        end else if (((16'd4096 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd28;
        end else if (((16'd8192 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd29;
        end else if (((16'd16384 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd30;
        end else if (((16'd32768 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 5'd31;
        end else begin
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 'bx;
        end
    end else begin
        ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 = 'bx;
    end
end

always @ (*) begin
    if (((~(16'd8192 == AA_V_1_fu_1534_p1) & ~(16'd16384 == AA_V_1_fu_1534_p1) & ~(16'd32768 == AA_V_1_fu_1534_p1) & ~(16'd2 == AA_V_1_fu_1534_p1) & ~(16'd4 == AA_V_1_fu_1534_p1) & ~(16'd8 == AA_V_1_fu_1534_p1) & ~(16'd16 == AA_V_1_fu_1534_p1) & ~(16'd32 == AA_V_1_fu_1534_p1) & ~(16'd64 == AA_V_1_fu_1534_p1) & ~(16'd128 == AA_V_1_fu_1534_p1) & ~(16'd256 == AA_V_1_fu_1534_p1) & ~(16'd512 == AA_V_1_fu_1534_p1) & ~(16'd1024 == AA_V_1_fu_1534_p1) & ~(16'd2048 == AA_V_1_fu_1534_p1) & ~(16'd4096 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd1)))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd0;
    end else if (((16'd2 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd1;
    end else if (((16'd4 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd2;
    end else if (((16'd8 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd3;
    end else if (((16'd16 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd4;
    end else if (((16'd32 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd5;
    end else if (((16'd64 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd6;
    end else if (((16'd128 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd7;
    end else if (((16'd256 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd8;
    end else if (((16'd512 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd9;
    end else if (((16'd1024 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd10;
    end else if (((16'd2048 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd11;
    end else if (((16'd4096 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd12;
    end else if (((16'd8192 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd13;
    end else if (((16'd16384 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd14;
    end else if (((16'd32768 == AA_V_1_fu_1534_p1) & (1'b1 == ap_CS_fsm_state19) & (tmp_46_fu_1548_p2 == 1'd0))) begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 4'd15;
    end else begin
        ap_phi_mux_p_061_0_i_phi_fu_843_p34 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_alloc_addr_ap_ack == 1'b0)) begin
        ap_sig_ioackin_alloc_addr_ap_ack = alloc_addr_ap_ack;
    end else begin
        ap_sig_ioackin_alloc_addr_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_com_port_cmd_ap_ack == 1'b0)) begin
        ap_sig_ioackin_com_port_cmd_ap_ack = com_port_cmd_ap_ack;
    end else begin
        ap_sig_ioackin_com_port_cmd_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_com_port_layer_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_com_port_layer_V_ap_ack = com_port_layer_V_ap_ack;
    end else begin
        ap_sig_ioackin_com_port_layer_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_com_port_target_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_com_port_target_V_ap_ack = com_port_target_V_ap_ack;
    end else begin
        ap_sig_ioackin_com_port_target_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if (((com_port_allocated_addr_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        com_port_allocated_addr_V_ap_ack = 1'b1;
    end else begin
        com_port_allocated_addr_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        com_port_allocated_addr_V_blk_n = com_port_allocated_addr_V_ap_vld;
    end else begin
        com_port_allocated_addr_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        com_port_cmd = 8'd4;
    end else if (((ap_predicate_op108_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        com_port_cmd = 8'd2;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)) | ((ap_predicate_op99_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        com_port_cmd = 8'd3;
    end else begin
        com_port_cmd = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_com_port_cmd_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)) | ((ap_predicate_op108_write_state3 == 1'b1) & (ap_reg_ioackin_com_port_cmd_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state3)) | ((ap_predicate_op99_write_state3 == 1'b1) & (ap_reg_ioackin_com_port_cmd_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state3)) | ((ap_reg_ioackin_com_port_cmd_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state21)))) begin
        com_port_cmd_ap_vld = 1'b1;
    end else begin
        com_port_cmd_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (grp_fu_980_p2 == 1'd1) & (tmp_4_fu_1071_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_4_fu_1071_p2 == 1'd0) & (grp_fu_980_p2 == 1'd1) & (tmp_6_fu_1080_p2 == 1'd1)))) begin
        com_port_cmd_blk_n = com_port_cmd_ap_ack;
    end else begin
        com_port_cmd_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)))) begin
        com_port_layer_V = 8'd11;
    end else if (((ap_predicate_op108_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        com_port_layer_V = p_1_fu_1117_p1;
    end else if (((ap_predicate_op99_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        com_port_layer_V = p_2_fu_1106_p1;
    end else begin
        com_port_layer_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_com_port_layer_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)) | ((ap_predicate_op108_write_state3 == 1'b1) & (ap_reg_ioackin_com_port_layer_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state3)) | ((ap_predicate_op99_write_state3 == 1'b1) & (ap_reg_ioackin_com_port_layer_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state3)) | ((ap_reg_ioackin_com_port_layer_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state21)))) begin
        com_port_layer_V_ap_vld = 1'b1;
    end else begin
        com_port_layer_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (grp_fu_980_p2 == 1'd1) & (tmp_4_fu_1071_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_4_fu_1071_p2 == 1'd0) & (grp_fu_980_p2 == 1'd1) & (tmp_6_fu_1080_p2 == 1'd1)))) begin
        com_port_layer_V_blk_n = com_port_layer_V_ap_ack;
    end else begin
        com_port_layer_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        com_port_target_V = tree_offset_V_cast_reg_2097;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)))) begin
        com_port_target_V = reg_1019;
    end else begin
        com_port_target_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_com_port_target_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | ((ap_reg_ioackin_com_port_target_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state22)) | ((ap_reg_ioackin_com_port_target_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)))) begin
        com_port_target_V_ap_vld = 1'b1;
    end else begin
        com_port_target_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state7) & (tmp_39_fu_1313_p2 == 1'd1)))) begin
        com_port_target_V_blk_n = com_port_target_V_ap_ack;
    end else begin
        com_port_target_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        group_tree_V_address0 = group_tree_V_addr_1_reg_2092;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        group_tree_V_address0 = tmp_51_fu_1605_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        group_tree_V_address0 = group_tree_V_addr_reg_1896;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        group_tree_V_address0 = tmp_11_fu_1088_p1;
    end else begin
        group_tree_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20)))) begin
        group_tree_V_ce0 = 1'b1;
    end else begin
        group_tree_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        group_tree_V_d0 = r_V_14_fu_1661_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        group_tree_V_d0 = tmp_36_fu_1256_p2;
    end else begin
        group_tree_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state6))) begin
        group_tree_V_we0 = 1'b1;
    end else begin
        group_tree_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        heap_tree_V_address0 = heap_tree_V_addr_reg_2157;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        heap_tree_V_address0 = tmp_21_fu_1754_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        heap_tree_V_address0 = heap_tree_V_addr_3_reg_2037;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        heap_tree_V_address0 = tmp_43_fu_1514_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        heap_tree_V_address0 = heap_tree_V_addr_1_reg_1966;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        heap_tree_V_address0 = tmp_28_fu_1333_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        heap_tree_V_address0 = heap_tree_V_addr_2_reg_1950;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        heap_tree_V_address0 = tmp_37_fu_1263_p1;
    end else begin
        heap_tree_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_io)) | ((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27)))) begin
        heap_tree_V_ce0 = 1'b1;
    end else begin
        heap_tree_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        heap_tree_V_d0 = tmp_23_reg_2167;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        heap_tree_V_d0 = p_Result_6_fu_1681_p4;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        heap_tree_V_d0 = tmp_29_reg_1976;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        heap_tree_V_d0 = p_Result_4_fu_1277_p4;
    end else begin
        heap_tree_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_io)))) begin
        heap_tree_V_we0 = 1'b1;
    end else begin
        heap_tree_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (grp_fu_1013_p2 == 1'd1) & (tmp_38_fu_1713_p3 == 1'd0))) begin
        maintain_mask_V_address0 = tmp_17_fu_1765_p1;
    end else if (((1'b1 == ap_CS_fsm_state27) & (grp_fu_1013_p2 == 1'd0) & (tmp_38_fu_1713_p3 == 1'd0))) begin
        maintain_mask_V_address0 = tmp_20_fu_1749_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) & (grp_fu_1013_p2 == 1'd1))) begin
        maintain_mask_V_address0 = tmp_24_fu_1344_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) & (grp_fu_1013_p2 == 1'd0))) begin
        maintain_mask_V_address0 = tmp_27_fu_1328_p1;
    end else begin
        maintain_mask_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state10) & (grp_fu_1013_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (grp_fu_1013_p2 == 1'd0)) | ((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27) & (grp_fu_1013_p2 == 1'd1) & (tmp_38_fu_1713_p3 == 1'd0)) | ((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27) & (grp_fu_1013_p2 == 1'd0) & (tmp_38_fu_1713_p3 == 1'd0)))) begin
        maintain_mask_V_ce0 = 1'b1;
    end else begin
        maintain_mask_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        mark_mask_V_address0 = tmp_55_fu_1653_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mark_mask_V_address0 = tmp_13_fu_1101_p1;
    end else begin
        mark_mask_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3)))) begin
        mark_mask_V_ce0 = 1'b1;
    end else begin
        mark_mask_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_980_p2 == 1'd1) & (tmp_4_fu_1071_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_980_p2 == 1'd0) & (tmp_4_fu_1071_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (tmp_4_fu_1071_p2 == 1'd0) & (grp_fu_980_p2 == 1'd1) & (tmp_6_fu_1080_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_980_p2 == 1'd0) & (tmp_4_fu_1071_p2 == 1'd0) & (tmp_6_fu_1080_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (tmp_6_fu_1080_p2 == 1'd0) & (tmp_4_fu_1071_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (tmp_31_fu_1182_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_io))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (ap_sig_ioackin_com_port_target_V_ap_ack == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_fu_1013_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20) & (or_cond_fu_1582_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if (((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20) & (or_cond_fu_1582_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (ap_sig_ioackin_com_port_target_V_ap_ack == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state26 : begin
            if (((com_port_allocated_addr_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27) & (tmp_38_fu_1713_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27) & (grp_fu_1013_p2 == 1'd1) & (tmp_38_fu_1713_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27) & (grp_fu_1013_p2 == 1'd0) & (tmp_38_fu_1713_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AA_V_1_fu_1534_p1 = tmp1_V_fu_1529_p2[15:0];

assign AA_V_fu_1416_p1 = tmp0_V_6_fu_1412_p2[15:0];

assign BB_V_1_fu_1538_p4 = {{tmp1_V_fu_1529_p2[31:16]}};

assign BB_V_fu_1420_p4 = {{tmp0_V_6_fu_1412_p2[31:16]}};

assign CC_V_fu_1430_p4 = {{tmp0_V_6_fu_1412_p2[47:32]}};

assign DD_V_fu_1440_p4 = {{tmp0_V_6_fu_1412_p2[63:48]}};

assign TMP_1_V_fu_1066_p2 = (p_s_fu_1061_p2 & p_Result_8_reg_1861);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state20_io = ((ap_sig_ioackin_alloc_addr_ap_ack == 1'b0) & (or_cond_fu_1582_p2 == 1'd1));
end

always @ (*) begin
    ap_block_state21_io = ((ap_sig_ioackin_com_port_layer_V_ap_ack == 1'b0) | (ap_sig_ioackin_com_port_cmd_ap_ack == 1'b0) | (ap_sig_ioackin_alloc_addr_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state27_io = (((ap_sig_ioackin_alloc_addr_ap_ack == 1'b0) & (tmp_38_fu_1713_p3 == 1'd0)) | ((ap_sig_ioackin_alloc_addr_ap_ack == 1'b0) & (tmp_38_fu_1713_p3 == 1'd1)));
end

always @ (*) begin
    ap_block_state3_io = (((ap_predicate_op108_write_state3 == 1'b1) & (ap_sig_ioackin_com_port_layer_V_ap_ack == 1'b0)) | ((ap_predicate_op99_write_state3 == 1'b1) & (ap_sig_ioackin_com_port_layer_V_ap_ack == 1'b0)) | ((ap_predicate_op108_write_state3 == 1'b1) & (ap_sig_ioackin_com_port_cmd_ap_ack == 1'b0)) | ((ap_predicate_op99_write_state3 == 1'b1) & (ap_sig_ioackin_com_port_cmd_ap_ack == 1'b0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (ap_sig_ioackin_alloc_addr_ap_ack == 1'b0)));
end

always @ (*) begin
    ap_block_state7_io = (((ap_sig_ioackin_com_port_layer_V_ap_ack == 1'b0) & (tmp_39_fu_1313_p2 == 1'd1)) | ((ap_sig_ioackin_com_port_cmd_ap_ack == 1'b0) & (tmp_39_fu_1313_p2 == 1'd1)) | ((ap_sig_ioackin_com_port_target_V_ap_ack == 1'b0) & (tmp_39_fu_1313_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_1150 = (~(16'd2 == BB_V_1_fu_1538_p4) & ~(16'd4 == BB_V_1_fu_1538_p4) & ~(16'd8 == BB_V_1_fu_1538_p4) & ~(16'd16 == BB_V_1_fu_1538_p4) & ~(16'd32 == BB_V_1_fu_1538_p4) & ~(16'd64 == BB_V_1_fu_1538_p4) & ~(16'd128 == BB_V_1_fu_1538_p4) & ~(16'd256 == BB_V_1_fu_1538_p4) & ~(16'd512 == BB_V_1_fu_1538_p4) & ~(16'd1024 == BB_V_1_fu_1538_p4) & ~(16'd2048 == BB_V_1_fu_1538_p4) & ~(16'd4096 == BB_V_1_fu_1538_p4) & ~(16'd8192 == BB_V_1_fu_1538_p4) & ~(16'd16384 == BB_V_1_fu_1538_p4) & ~(16'd32768 == BB_V_1_fu_1538_p4) & (tmp_47_fu_1558_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_593 = (~(16'd2 == TMP_1_V_fu_1066_p2) & ~(16'd4 == TMP_1_V_fu_1066_p2) & ~(16'd8 == TMP_1_V_fu_1066_p2) & ~(16'd16 == TMP_1_V_fu_1066_p2) & ~(16'd32 == TMP_1_V_fu_1066_p2) & ~(16'd64 == TMP_1_V_fu_1066_p2) & ~(16'd128 == TMP_1_V_fu_1066_p2) & ~(16'd256 == TMP_1_V_fu_1066_p2) & ~(16'd512 == TMP_1_V_fu_1066_p2) & ~(16'd1024 == TMP_1_V_fu_1066_p2) & ~(16'd2048 == TMP_1_V_fu_1066_p2) & ~(16'd4096 == TMP_1_V_fu_1066_p2) & ~(16'd8192 == TMP_1_V_fu_1066_p2) & ~(16'd16384 == TMP_1_V_fu_1066_p2) & ~(16'd32768 == TMP_1_V_fu_1066_p2) & (tmp_fu_1056_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_800 = (~(16'd2 == BB_V_fu_1420_p4) & ~(16'd4 == BB_V_fu_1420_p4) & ~(16'd8 == BB_V_fu_1420_p4) & ~(16'd16 == BB_V_fu_1420_p4) & ~(16'd32 == BB_V_fu_1420_p4) & ~(16'd64 == BB_V_fu_1420_p4) & ~(16'd128 == BB_V_fu_1420_p4) & ~(16'd256 == BB_V_fu_1420_p4) & ~(16'd512 == BB_V_fu_1420_p4) & ~(16'd1024 == BB_V_fu_1420_p4) & ~(16'd2048 == BB_V_fu_1420_p4) & ~(16'd4096 == BB_V_fu_1420_p4) & ~(16'd8192 == BB_V_fu_1420_p4) & ~(16'd16384 == BB_V_fu_1420_p4) & ~(16'd32768 == BB_V_fu_1420_p4) & (tmp_32_fu_1460_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_899 = (~(16'd2 == CC_V_fu_1430_p4) & ~(16'd4 == CC_V_fu_1430_p4) & ~(16'd8 == CC_V_fu_1430_p4) & ~(16'd16 == CC_V_fu_1430_p4) & ~(16'd32 == CC_V_fu_1430_p4) & ~(16'd64 == CC_V_fu_1430_p4) & ~(16'd128 == CC_V_fu_1430_p4) & ~(16'd256 == CC_V_fu_1430_p4) & ~(16'd512 == CC_V_fu_1430_p4) & ~(16'd1024 == CC_V_fu_1430_p4) & ~(16'd2048 == CC_V_fu_1430_p4) & ~(16'd4096 == CC_V_fu_1430_p4) & ~(16'd8192 == CC_V_fu_1430_p4) & ~(16'd16384 == CC_V_fu_1430_p4) & ~(16'd32768 == CC_V_fu_1430_p4) & (tmp_40_fu_1470_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_983 = (~(16'd2 == DD_V_fu_1440_p4) & ~(16'd4 == DD_V_fu_1440_p4) & ~(16'd8 == DD_V_fu_1440_p4) & ~(16'd16 == DD_V_fu_1440_p4) & ~(16'd32 == DD_V_fu_1440_p4) & ~(16'd64 == DD_V_fu_1440_p4) & ~(16'd128 == DD_V_fu_1440_p4) & ~(16'd256 == DD_V_fu_1440_p4) & ~(16'd512 == DD_V_fu_1440_p4) & ~(16'd1024 == DD_V_fu_1440_p4) & ~(16'd2048 == DD_V_fu_1440_p4) & ~(16'd4096 == DD_V_fu_1440_p4) & ~(16'd8192 == DD_V_fu_1440_p4) & ~(16'd16384 == DD_V_fu_1440_p4) & ~(16'd32768 == DD_V_fu_1440_p4) & (tmp_41_fu_1476_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op108_write_state3 = ((grp_fu_980_p2 == 1'd1) & (tmp_4_fu_1071_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op84_write_state3 = ((tmp_6_fu_1080_p2 == 1'd0) & (tmp_4_fu_1071_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op99_write_state3 = ((tmp_4_fu_1071_p2 == 1'd0) & (grp_fu_980_p2 == 1'd1) & (tmp_6_fu_1080_p2 == 1'd1));
end

assign cond_fu_1635_p2 = ((group_tree_tmp_maske_fu_1629_p2 == 2'd2) ? 1'b1 : 1'b0);

assign group_tree_tmp_V_fu_1617_p2 = (tmp_75_fu_1613_p1 ^ 2'd3);

assign group_tree_tmp_maske_fu_1629_p2 = (tmp_52_fu_1623_p2 & group_tree_tmp_V_fu_1617_p2);

assign grp_fu_1013_p2 = ((layer0_V_reg_491 < 5'd7) ? 1'b1 : 1'b0);

assign grp_fu_980_p2 = ((layer0_V_reg_491 < 5'd12) ? 1'b1 : 1'b0);

assign grp_fu_986_p4 = {{alloc_free_target_re_reg_1853[16:1]}};

assign i_assign_1_fu_1369_p1 = reg_1028;

assign i_assign_2_fu_1188_p1 = loc_in_group_tree_V_2_reg_568;

assign i_assign_3_fu_1268_p1 = reg_1024;

assign i_assign_4_fu_1288_p1 = reg_1028;

assign i_assign_5_fu_1672_p1 = tmp_48_reg_2077;

assign i_assign_6_fu_1691_p1 = tmp_42_reg_2031;

assign i_assign_fu_1795_p1 = r_V_s_reg_2143;

assign lhs_V_fu_1126_p2 = (tmp_12_fu_1122_p1 ^ 32'd4294967295);

assign loc2_V_fu_1709_p1 = com_port_allocated_addr_V[4:0];

assign loc_in_group_tree_V_1_fu_1085_p1 = alloc_free_target_re_reg_1853[0:0];

assign maintain_mask_V_load_4_fu_1812_p1 = $signed(reg_1032);

assign maintain_mask_V_load_6_fu_1387_p1 = $signed(reg_1032);

assign not_s_fu_1176_p2 = ((p_3_reg_548 != 4'd0) ? 1'b1 : 1'b0);

assign now1_V_fu_1222_p2 = ($signed(p_3_reg_548) + $signed(4'd15));

assign or_cond_fu_1582_p2 = (tmp_50_fu_1578_p2 | tmp_49_fu_1573_p2);

assign p_0102_0_i_cast_fu_1564_p1 = p_0102_0_i_reg_896;

assign p_0167_0_i1_cast_fu_1456_p1 = ap_phi_mux_p_0167_0_i1_phi_fu_601_p34;

assign p_0244_0_i1_cast9_fu_1482_p1 = $signed(p_0244_0_i1_reg_767);

assign p_0244_0_i1_cast_fu_1486_p1 = $unsigned(p_0244_0_i1_cast9_fu_1482_p1);

assign p_0252_0_i1_cast_fu_1466_p1 = ap_phi_mux_p_0252_0_i1_phi_fu_657_p34;

assign p_061_0_i_cast_fu_1554_p1 = ap_phi_mux_p_061_0_i_phi_fu_843_p34;

assign p_1_fu_1117_p1 = layer0_V_reg_491;

assign p_2_fu_1106_p1 = layer0_V_reg_491;

assign p_Repl2_1_fu_1373_p2 = ((tmp_29_reg_1976 != 32'd0) ? 1'b1 : 1'b0);

assign p_Repl2_2_fu_1272_p2 = ((tmp_70_reg_1944 != 2'd0) ? 1'b1 : 1'b0);

assign p_Repl2_3_fu_1292_p2 = ((p_Result_4_fu_1277_p4 != 32'd0) ? 1'b1 : 1'b0);

assign p_Repl2_4_fu_1675_p2 = ((r_V_17_cast_fu_1667_p2 != 2'd3) ? 1'b1 : 1'b0);

assign p_Repl2_5_fu_1694_p2 = ((p_Result_6_fu_1681_p4 != 32'd0) ? 1'b1 : 1'b0);

assign p_Repl2_s_fu_1798_p2 = ((tmp_23_reg_2167 != 32'd0) ? 1'b1 : 1'b0);

always @ (*) begin
    p_Result_10_fu_1202_p4 = loc_in_group_tree_V_2_reg_568;
    p_Result_10_fu_1202_p4[32'd0] = |(1'd0);
end

always @ (*) begin
    p_Result_1_fu_1378_p4 = p_Val2_5_reg_1877;
    p_Result_1_fu_1378_p4[i_assign_1_fu_1369_p1] = |(p_Repl2_1_fu_1373_p2);
end

always @ (*) begin
    p_Result_4_fu_1277_p4 = heap_tree_V_q0;
    p_Result_4_fu_1277_p4[i_assign_3_fu_1268_p1] = |(p_Repl2_2_fu_1272_p2);
end

always @ (*) begin
    p_Result_5_fu_1298_p4 = p_Val2_5_reg_1877;
    p_Result_5_fu_1298_p4[i_assign_4_fu_1288_p1] = |(p_Repl2_3_fu_1292_p2);
end

always @ (*) begin
    p_Result_6_fu_1681_p4 = p_Val2_11_reg_2042;
    p_Result_6_fu_1681_p4[i_assign_5_fu_1672_p1] = |(p_Repl2_4_fu_1675_p2);
end

always @ (*) begin
    p_Result_7_fu_1700_p4 = p_Val2_5_reg_1877;
    p_Result_7_fu_1700_p4[i_assign_6_fu_1691_p1] = |(p_Repl2_5_fu_1694_p2);
end

integer ap_tvar_int_0;

always @ (tmp_size_V_fu_1040_p2) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_8_fu_1046_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_8_fu_1046_p4[ap_tvar_int_0] = tmp_size_V_fu_1040_p2[15 - ap_tvar_int_0];
        end
    end
end

always @ (*) begin
    p_Result_9_fu_1192_p4 = p_Val2_12_reg_579;
    p_Result_9_fu_1192_p4[i_assign_2_fu_1188_p1] = |(1'd1);
end

always @ (*) begin
    p_Result_s_fu_1803_p4 = p_Val2_5_reg_1877;
    p_Result_s_fu_1803_p4[i_assign_fu_1795_p1] = |(p_Repl2_s_fu_1798_p2);
end

assign p_not_fu_1111_p2 = (64'd0 - top_heap_V_0);

assign p_s_fu_1061_p2 = (16'd0 - p_Result_8_reg_1861);

assign phitmp1_fu_1228_p4 = {{loc_in_group_tree_V_2_reg_568[15:1]}};

assign phitmp3_fu_1242_p2 = ($signed(tmp_35_fu_1238_p1) + $signed(16'd65535));

assign r_V_11_fu_1216_p2 = p_Result_9_fu_1192_p4 >> tmp_34_fu_1212_p1;

assign r_V_12_fu_1588_p3 = {{tmp_42_reg_2031}, {5'd0}};

assign r_V_13_fu_1641_p3 = {{tree_offset_V_reg_2086}, {cond_fu_1635_p2}};

assign r_V_14_fu_1661_p2 = (mark_mask_V_q0 | lhs_V_1_reg_2102);

assign r_V_15_fu_1395_p2 = maintain_mask_V_load_6_fu_1387_p1 << tmp_25_fu_1391_p1;

assign r_V_16_fu_1357_p2 = tmp_65_fu_1349_p1 << tmp_34_cast_fu_1353_p1;

assign r_V_17_cast_fu_1667_p2 = (tmp_76_fu_1657_p1 | tmp_75_reg_2107);

assign r_V_1_fu_1154_p3 = {{tmp_16_fu_1144_p4}, {tmp_15_fu_1138_p2}};

assign r_V_3_fu_1759_p2 = (4'd6 - tmp_60_fu_1739_p1);

assign r_V_4_fu_1819_p2 = maintain_mask_V_load_4_fu_1812_p1 << tmp_18_fu_1816_p1;

assign r_V_5_fu_1743_p2 = ($signed(4'd11) - $signed(tmp_60_fu_1739_p1));

assign r_V_6_fu_1777_p2 = tmp_63_fu_1770_p1 << tmp_25_cast_fu_1774_p1;

assign r_V_7_fu_1338_p2 = (4'd6 - tmp_61_fu_1318_p1);

assign r_V_9_fu_1322_p2 = ($signed(4'd11) - $signed(tmp_61_fu_1318_p1));

assign r_V_fu_1093_p3 = {{5'd31}, {loc_in_group_tree_V_1_fu_1085_p1}};

assign r_V_s_fu_1730_p4 = {{addr_HTA_V_3_reg_2127[15:5]}};

assign rec_bits_V_fu_1166_p1 = p_01572_0_in_reg_559[1:0];

assign size_V_fu_1036_p1 = alloc_size[15:0];

assign tmp0_V_6_fu_1412_p2 = (p_not_reg_1910 & p_Val2_5_reg_1877);

assign tmp0_V_7_fu_1162_p1 = $signed(r_V_1_fu_1154_p3);

assign tmp0_V_fu_1825_p2 = (r_V_4_fu_1819_p2 ^ 64'd18446744073709551615);

assign tmp1_V_fu_1529_p2 = (p_Val2_11_reg_2042 - tmp_45_fu_1525_p2);

assign tmp2_cast_fu_1495_p1 = tmp2_fu_1490_p2;

assign tmp2_fu_1490_p2 = (p_0248_0_i1_reg_710 + p_0167_0_i1_cast_reg_2012);

assign tmp3_cast_fu_1504_p1 = tmp3_fu_1499_p2;

assign tmp3_fu_1499_p2 = (p_0244_0_i1_cast_fu_1486_p1 + p_0252_0_i1_cast_reg_2020);

assign tmp_11_fu_1088_p1 = grp_fu_986_p4;

assign tmp_12_fu_1122_p1 = group_tree_V_q0;

assign tmp_13_fu_1101_p1 = r_V_fu_1093_p3;

assign tmp_14_fu_1132_p2 = (group_tree_V_q0 ^ 4'd15);

assign tmp_15_fu_1138_p2 = (tmp_14_fu_1132_p2 | mark_mask_V_q0);

assign tmp_16_fu_1144_p4 = {{lhs_V_fu_1126_p2[31:4]}};

assign tmp_17_fu_1765_p1 = r_V_3_fu_1759_p2;

assign tmp_18_fu_1816_p1 = r_V_s_reg_2143;

assign tmp_19_fu_1831_p2 = (tmp0_V_fu_1825_p2 & p_Val2_5_reg_1877);

assign tmp_20_fu_1749_p1 = r_V_5_fu_1743_p2;

assign tmp_21_fu_1754_p1 = r_V_s_fu_1730_p4;

assign tmp_22_fu_1783_p2 = (r_V_6_fu_1777_p2 ^ 32'd4294967295);

assign tmp_23_fu_1789_p2 = (tmp_22_fu_1783_p2 & heap_tree_V_q0);

assign tmp_24_fu_1344_p1 = r_V_7_fu_1338_p2;

assign tmp_25_cast_fu_1774_p1 = loc2_V_reg_2134;

assign tmp_25_fu_1391_p1 = reg_1028;

assign tmp_26_fu_1401_p2 = (r_V_15_fu_1395_p2 | p_Val2_5_reg_1877);

assign tmp_27_fu_1328_p1 = r_V_9_fu_1322_p2;

assign tmp_28_fu_1333_p1 = reg_1028;

assign tmp_29_fu_1363_p2 = (r_V_16_fu_1357_p2 | heap_tree_V_q0);

assign tmp_30_fu_1170_p2 = ((rec_bits_V_fu_1166_p1 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_31_fu_1182_p2 = (tmp_30_fu_1170_p2 & not_s_fu_1176_p2);

assign tmp_32_fu_1460_p2 = ((BB_V_fu_1420_p4 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_34_cast_fu_1353_p1 = reg_1024;

assign tmp_34_fu_1212_p1 = p_Result_10_fu_1202_p4;

assign tmp_35_fu_1238_p1 = phitmp1_fu_1228_p4;

assign tmp_36_fu_1256_p2 = (tmp_71_fu_1252_p1 ^ 4'd15);

assign tmp_37_fu_1263_p1 = reg_1028;

assign tmp_38_fu_1713_p3 = addr_HTA_V_3_reg_2127[32'd15];

assign tmp_39_fu_1313_p2 = ((tmp_70_reg_1944 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_40_fu_1470_p2 = ((CC_V_fu_1430_p4 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_41_fu_1476_p2 = ((DD_V_fu_1440_p4 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_42_fu_1508_p2 = (tmp2_cast_fu_1495_p1 + tmp3_cast_fu_1504_p1);

assign tmp_43_fu_1514_p1 = tmp_42_fu_1508_p2;

assign tmp_44_fu_1519_p2 = ($signed(32'd4294967295) + $signed(heap_tree_V_q0));

assign tmp_45_fu_1525_p2 = (tmp_44_reg_2050 & p_Val2_11_reg_2042);

assign tmp_46_fu_1548_p2 = ((AA_V_1_fu_1534_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_47_fu_1558_p2 = ((BB_V_1_fu_1538_p4 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_48_fu_1568_p2 = (p_0102_0_i_cast_fu_1564_p1 + p_061_0_i_cast_reg_2069);

assign tmp_49_fu_1573_p2 = ((tmp0_V_6_reg_1992 == 64'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_1071_p2 = ((alloc_cmd_read_reg_1842 == 8'd2) ? 1'b1 : 1'b0);

assign tmp_50_fu_1578_p2 = ((p_Val2_11_reg_2042 == tmp_45_reg_2055) ? 1'b1 : 1'b0);

assign tmp_51_fu_1605_p1 = tree_offset_V_fu_1599_p2;

assign tmp_52_fu_1623_p2 = (2'd1 + tmp_75_fu_1613_p1);

assign tmp_53_fu_1648_p1 = r_V_13_fu_1641_p3;

assign tmp_55_fu_1653_p1 = cond_reg_2112;

assign tmp_59_fu_1720_p2 = addr_HTA_V_3_reg_2127 << 16'd1;

assign tmp_60_fu_1739_p1 = layer0_V_reg_491[3:0];

assign tmp_61_fu_1318_p1 = layer0_V_reg_491[3:0];

assign tmp_63_fu_1770_p1 = maintain_mask_V_q0[31:0];

assign tmp_65_cast_fu_1595_p1 = tmp_48_fu_1568_p2;

assign tmp_65_fu_1349_p1 = maintain_mask_V_q0[31:0];

assign tmp_6_fu_1080_p2 = ((alloc_cmd_read_reg_1842 == 8'd3) ? 1'b1 : 1'b0);

assign tmp_70_fu_1248_p1 = p_Val2_12_reg_579[1:0];

assign tmp_71_fu_1252_p1 = p_Val2_12_reg_579[3:0];

assign tmp_75_fu_1613_p1 = group_tree_V_q0[1:0];

assign tmp_76_fu_1657_p1 = mark_mask_V_q0[1:0];

assign tmp_8_cast_fu_1725_p1 = tmp_59_fu_1720_p2;

assign tmp_9_fu_1450_p2 = ((AA_V_fu_1416_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_fu_1056_p2 = ((size_V_reg_1848 == 16'd1) ? 1'b1 : 1'b0);

assign tmp_size_V_fu_1040_p2 = ($signed(16'd65535) + $signed(size_V_fu_1036_p1));

assign tree_offset_V_cast_fu_1610_p1 = tree_offset_V_reg_2086;

assign tree_offset_V_fu_1599_p2 = (r_V_12_fu_1588_p3 + tmp_65_cast_fu_1595_p1);

always @ (posedge ap_clk) begin
    p_0167_0_i1_cast_reg_2012[5:4] <= 2'b00;
    p_0252_0_i1_cast_reg_2020[6:5] <= 2'b00;
    p_061_0_i_cast_reg_2069[5:4] <= 2'b00;
    tree_offset_V_cast_reg_2097[15:13] <= 3'b000;
    p_0248_0_i1_reg_710[4] <= 1'b0;
end

endmodule //Ext_KWTA4k
