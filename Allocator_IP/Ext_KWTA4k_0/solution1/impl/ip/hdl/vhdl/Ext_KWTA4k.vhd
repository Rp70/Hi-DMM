-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Ext_KWTA4k is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    alloc_size : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_size_ap_vld : IN STD_LOGIC;
    alloc_size_ap_ack : OUT STD_LOGIC;
    alloc_free_target : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_free_target_ap_vld : IN STD_LOGIC;
    alloc_free_target_ap_ack : OUT STD_LOGIC;
    alloc_addr : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_addr_ap_vld : OUT STD_LOGIC;
    alloc_addr_ap_ack : IN STD_LOGIC;
    alloc_cmd : IN STD_LOGIC_VECTOR (7 downto 0);
    alloc_cmd_ap_vld : IN STD_LOGIC;
    alloc_cmd_ap_ack : OUT STD_LOGIC;
    com_port_layer_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    com_port_layer_V_ap_vld : OUT STD_LOGIC;
    com_port_layer_V_ap_ack : IN STD_LOGIC;
    com_port_target_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    com_port_target_V_ap_vld : OUT STD_LOGIC;
    com_port_target_V_ap_ack : IN STD_LOGIC;
    com_port_allocated_addr_V : IN STD_LOGIC_VECTOR (15 downto 0);
    com_port_allocated_addr_V_ap_vld : IN STD_LOGIC;
    com_port_allocated_addr_V_ap_ack : OUT STD_LOGIC;
    com_port_cmd : OUT STD_LOGIC_VECTOR (7 downto 0);
    com_port_cmd_ap_vld : OUT STD_LOGIC;
    com_port_cmd_ap_ack : IN STD_LOGIC );
end;


architecture behav of Ext_KWTA4k is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Ext_KWTA4k,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.206500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1068,HLS_SYN_LUT=3084,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (31 downto 0) := "00000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (31 downto 0) := "00000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (31 downto 0) := "00000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (31 downto 0) := "00001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (31 downto 0) := "00010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv16_4000 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv16_2000 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv16_1000 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv16_800 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv16_400 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv16_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv16_40 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv16_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv16_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal top_heap_V_0 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    signal maintain_mask_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal maintain_mask_V_ce0 : STD_LOGIC;
    signal maintain_mask_V_q0 : STD_LOGIC_VECTOR (32 downto 0);
    signal heap_tree_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal heap_tree_V_ce0 : STD_LOGIC;
    signal heap_tree_V_we0 : STD_LOGIC;
    signal heap_tree_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal heap_tree_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal group_tree_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal group_tree_V_ce0 : STD_LOGIC;
    signal group_tree_V_we0 : STD_LOGIC;
    signal group_tree_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal group_tree_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mark_mask_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mark_mask_V_ce0 : STD_LOGIC;
    signal mark_mask_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal alloc_size_blk_n : STD_LOGIC;
    signal alloc_free_target_blk_n : STD_LOGIC;
    signal alloc_addr_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal tmp_38_fu_1713_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal or_cond_fu_1582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_4_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal alloc_cmd_blk_n : STD_LOGIC;
    signal com_port_layer_V_blk_n : STD_LOGIC;
    signal grp_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_39_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal com_port_target_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal com_port_allocated_addr_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal com_port_cmd_blk_n : STD_LOGIC;
    signal grp_fu_986_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_1019 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_ioackin_alloc_addr_ap_ack : STD_LOGIC;
    signal ap_predicate_op84_write_state3 : BOOLEAN;
    signal ap_sig_ioackin_com_port_cmd_ap_ack : STD_LOGIC;
    signal ap_predicate_op99_write_state3 : BOOLEAN;
    signal ap_sig_ioackin_com_port_layer_V_ap_ack : STD_LOGIC;
    signal ap_predicate_op108_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal reg_1024 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_1028 : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_1032 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal alloc_cmd_read_reg_1842 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal size_V_fu_1036_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal size_V_reg_1848 : STD_LOGIC_VECTOR (15 downto 0);
    signal alloc_free_target_re_reg_1853 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_8_fu_1046_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_reg_1861 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_1873 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_reg_1877 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_1888 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1892 : STD_LOGIC_VECTOR (0 downto 0);
    signal group_tree_V_addr_reg_1896 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_reg_1906 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_fu_1111_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_not_reg_1910 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp0_V_7_fu_1162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_Result_9_fu_1192_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_31_fu_1182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_11_fu_1216_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal now1_V_fu_1222_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal phitmp3_fu_1242_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_70_fu_1248_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_70_reg_1944 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal heap_tree_V_addr_2_reg_1950 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal heap_tree_V_addr_1_reg_1966 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_fu_1363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_1976 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal p_Result_1_fu_1378_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_26_fu_1401_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp0_V_6_fu_1412_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp0_V_6_reg_1992 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal p_0167_0_i1_cast_fu_1456_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0167_0_i1_cast_reg_2012 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0252_0_i1_cast_fu_1466_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0252_0_i1_cast_reg_2020 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_42_fu_1508_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_42_reg_2031 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal heap_tree_V_addr_3_reg_2037 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_11_reg_2042 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_44_fu_1519_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_reg_2050 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_reg_2055 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_061_0_i_cast_fu_1554_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_061_0_i_cast_reg_2069 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_48_fu_1568_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_48_reg_2077 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state20_io : BOOLEAN;
    signal or_cond_reg_2082 : STD_LOGIC_VECTOR (0 downto 0);
    signal tree_offset_V_fu_1599_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tree_offset_V_reg_2086 : STD_LOGIC_VECTOR (12 downto 0);
    signal group_tree_V_addr_1_reg_2092 : STD_LOGIC_VECTOR (10 downto 0);
    signal tree_offset_V_cast_fu_1610_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tree_offset_V_cast_reg_2097 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state21_io : BOOLEAN;
    signal lhs_V_1_reg_2102 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_75_fu_1613_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_75_reg_2107 : STD_LOGIC_VECTOR (1 downto 0);
    signal cond_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_reg_2112 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p_Result_7_fu_1700_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal addr_HTA_V_3_reg_2127 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc2_V_fu_1709_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal loc2_V_reg_2134 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_38_reg_2139 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state27_io : BOOLEAN;
    signal r_V_s_fu_1730_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_s_reg_2143 : STD_LOGIC_VECTOR (10 downto 0);
    signal heap_tree_V_addr_reg_2157 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_23_fu_1789_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_2167 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal p_Result_s_fu_1803_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_19_fu_1831_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal layer0_V_reg_491 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal TMP_1_V_fu_1066_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_3_reg_548 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_01572_0_in_reg_559 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc_in_group_tree_V_2_reg_568 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_12_reg_579 : STD_LOGIC_VECTOR (63 downto 0);
    signal storemerge_reg_589 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_1450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal AA_V_fu_1416_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_32_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal BB_V_fu_1420_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0248_0_i1_reg_710 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_40_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal CC_V_fu_1430_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0244_0_i1_reg_767 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_41_fu_1476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal DD_V_fu_1440_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_061_0_i_phi_fu_843_p34 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_46_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal AA_V_1_fu_1534_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0102_0_i_reg_896 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_47_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal BB_V_1_fu_1538_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge1_reg_969 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_1101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_1333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_1514_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_fu_1605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_fu_1653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_1749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_1765_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_fu_1298_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_ioackin_com_port_target_V_ap_ack : STD_LOGIC;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal tmp_53_fu_1648_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_cast_fu_1725_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_alloc_addr_ap_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_com_port_cmd_ap_ack : STD_LOGIC := '0';
    signal p_2_fu_1106_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_1_fu_1117_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ioackin_com_port_layer_V_ap_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_com_port_target_V_ap_ack : STD_LOGIC := '0';
    signal tmp_36_fu_1256_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_14_fu_1661_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_4_fu_1277_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_6_fu_1681_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_size_V_fu_1040_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_s_fu_1061_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_in_group_tree_V_1_fu_1085_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_1093_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_fu_1122_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1132_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs_V_fu_1126_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1144_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_15_fu_1138_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_1_fu_1154_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rec_bits_V_fu_1166_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_1170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_s_fu_1176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_assign_2_fu_1188_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_10_fu_1202_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_1212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phitmp1_fu_1228_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_35_fu_1238_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_71_fu_1252_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_assign_3_fu_1268_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_2_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_assign_4_fu_1288_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_3_fu_1292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1318_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_9_fu_1322_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_7_fu_1338_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_65_fu_1349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_cast_fu_1353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_16_fu_1357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_assign_1_fu_1369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_1_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maintain_mask_V_load_6_fu_1387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_1391_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_15_fu_1395_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0244_0_i1_cast9_fu_1482_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_fu_1490_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0244_0_i1_cast_fu_1486_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp3_fu_1499_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_cast_fu_1495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_cast_fu_1504_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_V_fu_1529_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0102_0_i_cast_fu_1564_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_49_fu_1573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_12_fu_1588_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_65_cast_fu_1595_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_52_fu_1623_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal group_tree_tmp_V_fu_1617_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal group_tree_tmp_maske_fu_1629_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_13_fu_1641_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_76_fu_1657_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_17_cast_fu_1667_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_assign_5_fu_1672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_4_fu_1675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_assign_6_fu_1691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_5_fu_1694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1720_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_fu_1739_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_5_fu_1743_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_3_fu_1759_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_63_fu_1770_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_cast_fu_1774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_6_fu_1777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1783_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_assign_fu_1795_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_s_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maintain_mask_V_load_4_fu_1812_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1816_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_4_fu_1819_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp0_V_fu_1825_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_800 : BOOLEAN;
    signal ap_condition_593 : BOOLEAN;
    signal ap_condition_1150 : BOOLEAN;
    signal ap_condition_983 : BOOLEAN;
    signal ap_condition_899 : BOOLEAN;

    component Ext_KWTA4k_maintabkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;


    component Ext_KWTA4k_heap_tcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Ext_KWTA4k_group_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component Ext_KWTA4k_mark_meOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    maintain_mask_V_U : component Ext_KWTA4k_maintabkb
    generic map (
        DataWidth => 33,
        AddressRange => 7,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => maintain_mask_V_address0,
        ce0 => maintain_mask_V_ce0,
        q0 => maintain_mask_V_q0);

    heap_tree_V_U : component Ext_KWTA4k_heap_tcud
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => heap_tree_V_address0,
        ce0 => heap_tree_V_ce0,
        we0 => heap_tree_V_we0,
        d0 => heap_tree_V_d0,
        q0 => heap_tree_V_q0);

    group_tree_V_U : component Ext_KWTA4k_group_dEe
    generic map (
        DataWidth => 4,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => group_tree_V_address0,
        ce0 => group_tree_V_ce0,
        we0 => group_tree_V_we0,
        d0 => group_tree_V_d0,
        q0 => group_tree_V_q0);

    mark_mask_V_U : component Ext_KWTA4k_mark_meOg
    generic map (
        DataWidth => 4,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mark_mask_V_address0,
        ce0 => mark_mask_V_ce0,
        q0 => mark_mask_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_alloc_addr_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
            else
                if ((((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state21_io) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_boolean_0 = ap_block_state20_io) and (ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond_fu_1582_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_1)))) then 
                    ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
                elsif ((((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = alloc_addr_ap_ack) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_logic_1 = alloc_addr_ap_ack) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_logic_1 = alloc_addr_ap_ack) and (ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond_fu_1582_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = alloc_addr_ap_ack) and (ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = alloc_addr_ap_ack) and (ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_1)))) then 
                    ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_com_port_cmd_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_com_port_cmd_ap_ack <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state7_io)) or ((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state21_io) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
                    ap_reg_ioackin_com_port_cmd_ap_ack <= ap_const_logic_0;
                elsif ((((com_port_cmd_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)) or ((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (com_port_cmd_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (com_port_cmd_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((com_port_cmd_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
                    ap_reg_ioackin_com_port_cmd_ap_ack <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_com_port_layer_V_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_com_port_layer_V_ap_ack <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state7_io)) or ((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state21_io) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
                    ap_reg_ioackin_com_port_layer_V_ap_ack <= ap_const_logic_0;
                elsif ((((com_port_layer_V_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)) or ((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (com_port_layer_V_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (com_port_layer_V_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((com_port_layer_V_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
                    ap_reg_ioackin_com_port_layer_V_ap_ack <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_com_port_target_V_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_com_port_target_V_ap_ack <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_sig_ioackin_com_port_target_V_ap_ack = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (ap_sig_ioackin_com_port_target_V_ap_ack = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state7_io)))) then 
                    ap_reg_ioackin_com_port_target_V_ap_ack <= ap_const_logic_0;
                elsif ((((com_port_target_V_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((com_port_target_V_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((com_port_target_V_ap_ack = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)))) then 
                    ap_reg_ioackin_com_port_target_V_ap_ack <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    layer0_V_reg_491_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if ((tmp_fu_1056_p2 = ap_const_lv1_1)) then 
                    layer0_V_reg_491 <= ap_const_lv5_C;
                elsif ((ap_const_boolean_1 = ap_condition_593)) then 
                    layer0_V_reg_491 <= ap_const_lv5_1C;
                elsif (((ap_const_lv16_2 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_1D;
                elsif (((ap_const_lv16_4 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_1E;
                elsif (((ap_const_lv16_8 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_1F;
                elsif (((ap_const_lv16_10 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_0;
                elsif (((ap_const_lv16_20 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_1;
                elsif (((ap_const_lv16_40 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_2;
                elsif (((ap_const_lv16_80 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_3;
                elsif (((ap_const_lv16_100 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_4;
                elsif (((ap_const_lv16_200 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_5;
                elsif (((ap_const_lv16_400 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_6;
                elsif (((ap_const_lv16_800 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_7;
                elsif (((ap_const_lv16_1000 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_8;
                elsif (((ap_const_lv16_2000 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_9;
                elsif (((ap_const_lv16_4000 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_A;
                elsif (((ap_const_lv16_8000 = TMP_1_V_fu_1066_p2) and (tmp_fu_1056_p2 = ap_const_lv1_0))) then 
                    layer0_V_reg_491 <= ap_const_lv5_B;
                end if;
            end if; 
        end if;
    end process;

    loc_in_group_tree_V_2_reg_568_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_31_fu_1182_p2 = ap_const_lv1_1))) then 
                loc_in_group_tree_V_2_reg_568 <= phitmp3_fu_1242_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                loc_in_group_tree_V_2_reg_568 <= ap_const_lv16_FFFF;
            end if; 
        end if;
    end process;

    p_0102_0_i_reg_896_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                if ((tmp_47_fu_1558_p2 = ap_const_lv1_1)) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_0;
                elsif ((ap_const_boolean_1 = ap_condition_1150)) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_10;
                elsif (((ap_const_lv16_2 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_11;
                elsif (((ap_const_lv16_4 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_12;
                elsif (((ap_const_lv16_8 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_13;
                elsif (((ap_const_lv16_10 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_14;
                elsif (((ap_const_lv16_20 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_15;
                elsif (((ap_const_lv16_40 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_16;
                elsif (((ap_const_lv16_80 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_17;
                elsif (((ap_const_lv16_100 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_18;
                elsif (((ap_const_lv16_200 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_19;
                elsif (((ap_const_lv16_400 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_1A;
                elsif (((ap_const_lv16_800 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_1B;
                elsif (((ap_const_lv16_1000 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_1C;
                elsif (((ap_const_lv16_2000 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_1D;
                elsif (((ap_const_lv16_4000 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_1E;
                elsif (((ap_const_lv16_8000 = BB_V_1_fu_1538_p4) and (tmp_47_fu_1558_p2 = ap_const_lv1_0))) then 
                    p_0102_0_i_reg_896 <= ap_const_lv5_1F;
                end if;
            end if; 
        end if;
    end process;

    p_01572_0_in_reg_559_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_31_fu_1182_p2 = ap_const_lv1_1))) then 
                p_01572_0_in_reg_559 <= r_V_11_fu_1216_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_01572_0_in_reg_559 <= tmp0_V_7_fu_1162_p1;
            end if; 
        end if;
    end process;

    p_0244_0_i1_reg_767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                if ((tmp_41_fu_1476_p2 = ap_const_lv1_1)) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_0;
                elsif ((ap_const_boolean_1 = ap_condition_983)) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_10;
                elsif (((ap_const_lv16_2 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_11;
                elsif (((ap_const_lv16_4 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_12;
                elsif (((ap_const_lv16_8 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_13;
                elsif (((ap_const_lv16_10 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_14;
                elsif (((ap_const_lv16_20 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_15;
                elsif (((ap_const_lv16_40 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_16;
                elsif (((ap_const_lv16_80 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_17;
                elsif (((ap_const_lv16_100 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_18;
                elsif (((ap_const_lv16_200 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_19;
                elsif (((ap_const_lv16_400 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_1A;
                elsif (((ap_const_lv16_800 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_1B;
                elsif (((ap_const_lv16_1000 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_1C;
                elsif (((ap_const_lv16_2000 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_1D;
                elsif (((ap_const_lv16_4000 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_1E;
                elsif (((ap_const_lv16_8000 = DD_V_fu_1440_p4) and (tmp_41_fu_1476_p2 = ap_const_lv1_0))) then 
                    p_0244_0_i1_reg_767 <= ap_const_lv5_1F;
                end if;
            end if; 
        end if;
    end process;

    p_0248_0_i1_reg_710_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                if ((tmp_40_fu_1470_p2 = ap_const_lv1_1)) then 
                    p_0248_0_i1_reg_710(0) <= '0';
                    p_0248_0_i1_reg_710(1) <= '0';
                    p_0248_0_i1_reg_710(2) <= '0';
                    p_0248_0_i1_reg_710(3) <= '0';
                    p_0248_0_i1_reg_710(5) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_899)) then 
                    p_0248_0_i1_reg_710(0) <= '0';
                    p_0248_0_i1_reg_710(1) <= '0';
                    p_0248_0_i1_reg_710(2) <= '0';
                    p_0248_0_i1_reg_710(3) <= '0';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_2 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '1';
                    p_0248_0_i1_reg_710(1) <= '0';
                    p_0248_0_i1_reg_710(2) <= '0';
                    p_0248_0_i1_reg_710(3) <= '0';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_4 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '0';
                    p_0248_0_i1_reg_710(1) <= '1';
                    p_0248_0_i1_reg_710(2) <= '0';
                    p_0248_0_i1_reg_710(3) <= '0';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_8 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '1';
                    p_0248_0_i1_reg_710(1) <= '1';
                    p_0248_0_i1_reg_710(2) <= '0';
                    p_0248_0_i1_reg_710(3) <= '0';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_10 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '0';
                    p_0248_0_i1_reg_710(1) <= '0';
                    p_0248_0_i1_reg_710(2) <= '1';
                    p_0248_0_i1_reg_710(3) <= '0';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_20 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '1';
                    p_0248_0_i1_reg_710(1) <= '0';
                    p_0248_0_i1_reg_710(2) <= '1';
                    p_0248_0_i1_reg_710(3) <= '0';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_40 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '0';
                    p_0248_0_i1_reg_710(1) <= '1';
                    p_0248_0_i1_reg_710(2) <= '1';
                    p_0248_0_i1_reg_710(3) <= '0';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_80 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '1';
                    p_0248_0_i1_reg_710(1) <= '1';
                    p_0248_0_i1_reg_710(2) <= '1';
                    p_0248_0_i1_reg_710(3) <= '0';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_100 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '0';
                    p_0248_0_i1_reg_710(1) <= '0';
                    p_0248_0_i1_reg_710(2) <= '0';
                    p_0248_0_i1_reg_710(3) <= '1';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_200 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '1';
                    p_0248_0_i1_reg_710(1) <= '0';
                    p_0248_0_i1_reg_710(2) <= '0';
                    p_0248_0_i1_reg_710(3) <= '1';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_400 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '0';
                    p_0248_0_i1_reg_710(1) <= '1';
                    p_0248_0_i1_reg_710(2) <= '0';
                    p_0248_0_i1_reg_710(3) <= '1';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_800 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '1';
                    p_0248_0_i1_reg_710(1) <= '1';
                    p_0248_0_i1_reg_710(2) <= '0';
                    p_0248_0_i1_reg_710(3) <= '1';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_1000 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '0';
                    p_0248_0_i1_reg_710(1) <= '0';
                    p_0248_0_i1_reg_710(2) <= '1';
                    p_0248_0_i1_reg_710(3) <= '1';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_2000 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '1';
                    p_0248_0_i1_reg_710(1) <= '0';
                    p_0248_0_i1_reg_710(2) <= '1';
                    p_0248_0_i1_reg_710(3) <= '1';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_4000 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '0';
                    p_0248_0_i1_reg_710(1) <= '1';
                    p_0248_0_i1_reg_710(2) <= '1';
                    p_0248_0_i1_reg_710(3) <= '1';
                    p_0248_0_i1_reg_710(5) <= '1';
                elsif (((ap_const_lv16_8000 = CC_V_fu_1430_p4) and (tmp_40_fu_1470_p2 = ap_const_lv1_0))) then 
                    p_0248_0_i1_reg_710(0) <= '1';
                    p_0248_0_i1_reg_710(1) <= '1';
                    p_0248_0_i1_reg_710(2) <= '1';
                    p_0248_0_i1_reg_710(3) <= '1';
                    p_0248_0_i1_reg_710(5) <= '1';
                end if;
            end if; 
        end if;
    end process;

    p_3_reg_548_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_31_fu_1182_p2 = ap_const_lv1_1))) then 
                p_3_reg_548 <= now1_V_fu_1222_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_3_reg_548 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_Val2_12_reg_579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_31_fu_1182_p2 = ap_const_lv1_1))) then 
                p_Val2_12_reg_579 <= p_Result_9_fu_1192_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_Val2_12_reg_579 <= tmp0_V_7_fu_1162_p1;
            end if; 
        end if;
    end process;

    storemerge1_reg_969_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                storemerge1_reg_969 <= tmp_19_fu_1831_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                storemerge1_reg_969 <= p_Result_s_fu_1803_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                storemerge1_reg_969 <= p_Result_7_fu_1700_p4;
            end if; 
        end if;
    end process;

    storemerge_reg_589_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                storemerge_reg_589 <= tmp_26_fu_1401_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                storemerge_reg_589 <= p_Result_1_fu_1378_p4;
            end if; 
        end if;
    end process;

    top_heap_V_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state32) and (((tmp_38_reg_2139 = ap_const_lv1_0) and (tmp_5_reg_1906 = ap_const_lv1_1) and (tmp_4_reg_1873 = ap_const_lv1_1)) or ((or_cond_reg_2082 = ap_const_lv1_0) and (tmp_5_reg_1906 = ap_const_lv1_0) and (tmp_4_reg_1873 = ap_const_lv1_1))))) then 
                top_heap_V_0 <= storemerge1_reg_969;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_s_reg_1892 = ap_const_lv1_1) and (tmp_6_reg_1888 = ap_const_lv1_1))) then 
                top_heap_V_0 <= storemerge_reg_589;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_io))) then 
                top_heap_V_0 <= p_Result_5_fu_1298_p4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((com_port_allocated_addr_V_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                addr_HTA_V_3_reg_2127 <= com_port_allocated_addr_V;
                loc2_V_reg_2134 <= loc2_V_fu_1709_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                alloc_cmd_read_reg_1842 <= alloc_cmd;
                alloc_free_target_re_reg_1853 <= alloc_free_target;
                p_Result_8_reg_1861 <= p_Result_8_fu_1046_p4;
                size_V_reg_1848 <= size_V_fu_1036_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state21_io) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                cond_reg_2112 <= cond_fu_1635_p2;
                lhs_V_1_reg_2102 <= group_tree_V_q0;
                tmp_75_reg_2107 <= tmp_75_fu_1613_p1;
                    tree_offset_V_cast_reg_2097(12 downto 0) <= tree_offset_V_cast_fu_1610_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state20_io) and (ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond_fu_1582_p2 = ap_const_lv1_0))) then
                group_tree_V_addr_1_reg_2092 <= tmp_51_fu_1605_p1(11 - 1 downto 0);
                tree_offset_V_reg_2086 <= tree_offset_V_fu_1599_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_980_p2 = ap_const_lv1_0) and (tmp_4_fu_1071_p2 = ap_const_lv1_0) and (tmp_6_fu_1080_p2 = ap_const_lv1_1))) then
                group_tree_V_addr_reg_1896 <= tmp_11_fu_1088_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_1013_p2 = ap_const_lv1_0))) then
                heap_tree_V_addr_1_reg_1966 <= tmp_28_fu_1333_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                heap_tree_V_addr_2_reg_1950 <= tmp_37_fu_1263_p1(6 - 1 downto 0);
                tmp_70_reg_1944 <= tmp_70_fu_1248_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                heap_tree_V_addr_3_reg_2037 <= tmp_43_fu_1514_p1(6 - 1 downto 0);
                tmp_42_reg_2031 <= tmp_42_fu_1508_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27) and (grp_fu_1013_p2 = ap_const_lv1_0) and (tmp_38_fu_1713_p3 = ap_const_lv1_0))) then
                heap_tree_V_addr_reg_2157 <= tmp_21_fu_1754_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state20_io) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                or_cond_reg_2082 <= or_cond_fu_1582_p2;
                tmp_48_reg_2077 <= tmp_48_fu_1568_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                    p_0167_0_i1_cast_reg_2012(3 downto 0) <= p_0167_0_i1_cast_fu_1456_p1(3 downto 0);
                    p_0252_0_i1_cast_reg_2020(4 downto 0) <= p_0252_0_i1_cast_fu_1466_p1(4 downto 0);
                tmp0_V_6_reg_1992 <= tmp0_V_6_fu_1412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                    p_061_0_i_cast_reg_2069(3 downto 0) <= p_061_0_i_cast_fu_1554_p1(3 downto 0);
                tmp_45_reg_2055 <= tmp_45_fu_1525_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                p_Val2_11_reg_2042 <= heap_tree_V_q0;
                tmp_44_reg_2050 <= tmp_44_fu_1519_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                p_Val2_5_reg_1877 <= top_heap_V_0;
                tmp_4_reg_1873 <= tmp_4_fu_1071_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_980_p2 = ap_const_lv1_0) and (tmp_4_fu_1071_p2 = ap_const_lv1_1))) then
                p_not_reg_1910 <= p_not_fu_1111_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_0))) then
                r_V_s_reg_2143 <= addr_HTA_V_3_reg_2127(15 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_980_p2 = ap_const_lv1_0) and (tmp_4_fu_1071_p2 = ap_const_lv1_0) and (tmp_6_fu_1080_p2 = ap_const_lv1_1)))) then
                reg_1019 <= alloc_free_target_re_reg_1853(16 downto 1);
                reg_1024 <= alloc_free_target_re_reg_1853(5 downto 1);
                reg_1028 <= alloc_free_target_re_reg_1853(16 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state13))) then
                reg_1032 <= maintain_mask_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                tmp_23_reg_2167 <= tmp_23_fu_1789_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                tmp_29_reg_1976 <= tmp_29_fu_1363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                tmp_38_reg_2139 <= addr_HTA_V_3_reg_2127(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_4_fu_1071_p2 = ap_const_lv1_1))) then
                tmp_5_reg_1906 <= grp_fu_980_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_4_fu_1071_p2 = ap_const_lv1_0))) then
                tmp_6_reg_1888 <= tmp_6_fu_1080_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_4_fu_1071_p2 = ap_const_lv1_0) and (tmp_6_fu_1080_p2 = ap_const_lv1_1))) then
                tmp_s_reg_1892 <= grp_fu_980_p2;
            end if;
        end if;
    end process;
    p_0167_0_i1_cast_reg_2012(5 downto 4) <= "00";
    p_0252_0_i1_cast_reg_2020(6 downto 5) <= "00";
    p_061_0_i_cast_reg_2069(5 downto 4) <= "00";
    tree_offset_V_cast_reg_2097(15 downto 13) <= "000";
    p_0248_0_i1_reg_710(4) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, com_port_allocated_addr_V_ap_vld, ap_CS_fsm_state27, tmp_38_fu_1713_p3, ap_CS_fsm_state20, or_cond_fu_1582_p2, ap_CS_fsm_state21, ap_CS_fsm_state3, tmp_4_fu_1071_p2, tmp_6_fu_1080_p2, grp_fu_980_p2, ap_CS_fsm_state7, ap_CS_fsm_state22, ap_CS_fsm_state8, ap_CS_fsm_state26, ap_block_state3_io, ap_CS_fsm_state5, tmp_31_fu_1182_p2, ap_CS_fsm_state10, grp_fu_1013_p2, ap_block_state20_io, ap_block_state21_io, ap_block_state27_io, ap_sig_ioackin_com_port_target_V_ap_ack, ap_block_state7_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_980_p2 = ap_const_lv1_1) and (tmp_4_fu_1071_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                elsif (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_980_p2 = ap_const_lv1_0) and (tmp_4_fu_1071_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_4_fu_1071_p2 = ap_const_lv1_0) and (grp_fu_980_p2 = ap_const_lv1_1) and (tmp_6_fu_1080_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_980_p2 = ap_const_lv1_0) and (tmp_4_fu_1071_p2 = ap_const_lv1_0) and (tmp_6_fu_1080_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_fu_1080_p2 = ap_const_lv1_0) and (tmp_4_fu_1071_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_31_fu_1182_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_sig_ioackin_com_port_target_V_ap_ack = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_1013_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_boolean_0 = ap_block_state20_io) and (ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond_fu_1582_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                elsif (((ap_const_boolean_0 = ap_block_state20_io) and (ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond_fu_1582_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_boolean_0 = ap_block_state21_io) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (ap_sig_ioackin_com_port_target_V_ap_ack = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state26 => 
                if (((com_port_allocated_addr_V_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                elsif (((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27) and (grp_fu_1013_p2 = ap_const_lv1_1) and (tmp_38_fu_1713_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                elsif (((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27) and (grp_fu_1013_p2 = ap_const_lv1_0) and (tmp_38_fu_1713_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    AA_V_1_fu_1534_p1 <= tmp1_V_fu_1529_p2(16 - 1 downto 0);
    AA_V_fu_1416_p1 <= tmp0_V_6_fu_1412_p2(16 - 1 downto 0);
    BB_V_1_fu_1538_p4 <= tmp1_V_fu_1529_p2(31 downto 16);
    BB_V_fu_1420_p4 <= tmp0_V_6_fu_1412_p2(31 downto 16);
    CC_V_fu_1430_p4 <= tmp0_V_6_fu_1412_p2(47 downto 32);
    DD_V_fu_1440_p4 <= tmp0_V_6_fu_1412_p2(63 downto 48);
    TMP_1_V_fu_1066_p2 <= (p_s_fu_1061_p2 and p_Result_8_reg_1861);

    alloc_addr_assign_proc : process(ap_CS_fsm_state27, tmp_38_fu_1713_p3, ap_CS_fsm_state20, or_cond_fu_1582_p2, ap_CS_fsm_state21, ap_CS_fsm_state3, ap_predicate_op84_write_state3, tmp_53_fu_1648_p1, tmp_8_cast_fu_1725_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_0))) then 
            alloc_addr <= tmp_8_cast_fu_1725_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            alloc_addr <= tmp_53_fu_1648_p1;
        elsif ((((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond_fu_1582_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_1)))) then 
            alloc_addr <= ap_const_lv32_FFFFFFFF;
        else 
            alloc_addr <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    alloc_addr_ap_vld_assign_proc : process(ap_CS_fsm_state27, tmp_38_fu_1713_p3, ap_CS_fsm_state20, or_cond_fu_1582_p2, ap_CS_fsm_state21, ap_CS_fsm_state3, ap_predicate_op84_write_state3, ap_reg_ioackin_alloc_addr_ap_ack)
    begin
        if ((((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond_fu_1582_p2 = ap_const_lv1_1)) or ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_0)) or ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_1)))) then 
            alloc_addr_ap_vld <= ap_const_logic_1;
        else 
            alloc_addr_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    alloc_addr_blk_n_assign_proc : process(alloc_addr_ap_ack, ap_CS_fsm_state27, tmp_38_fu_1713_p3, ap_CS_fsm_state20, or_cond_fu_1582_p2, ap_CS_fsm_state21, ap_CS_fsm_state3, tmp_4_fu_1071_p2, tmp_6_fu_1080_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_fu_1080_p2 = ap_const_lv1_0) and (tmp_4_fu_1071_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond_fu_1582_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_38_fu_1713_p3 = ap_const_lv1_1)))) then 
            alloc_addr_blk_n <= alloc_addr_ap_ack;
        else 
            alloc_addr_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_cmd_ap_ack_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_cmd_ap_ack <= ap_const_logic_1;
        else 
            alloc_cmd_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_cmd_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_cmd_ap_vld)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_cmd_blk_n <= alloc_cmd_ap_vld;
        else 
            alloc_cmd_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_free_target_ap_ack_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_free_target_ap_ack <= ap_const_logic_1;
        else 
            alloc_free_target_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_free_target_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_free_target_ap_vld)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_free_target_blk_n <= alloc_free_target_ap_vld;
        else 
            alloc_free_target_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_size_ap_ack_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_size_ap_ack <= ap_const_logic_1;
        else 
            alloc_size_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_size_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_size_blk_n <= alloc_size_ap_vld;
        else 
            alloc_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state1_assign_proc : process(ap_start, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state20_io_assign_proc : process(or_cond_fu_1582_p2, ap_sig_ioackin_alloc_addr_ap_ack)
    begin
                ap_block_state20_io <= ((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (or_cond_fu_1582_p2 = ap_const_lv1_1));
    end process;


    ap_block_state21_io_assign_proc : process(ap_sig_ioackin_alloc_addr_ap_ack, ap_sig_ioackin_com_port_cmd_ap_ack, ap_sig_ioackin_com_port_layer_V_ap_ack)
    begin
                ap_block_state21_io <= ((ap_sig_ioackin_com_port_layer_V_ap_ack = ap_const_logic_0) or (ap_sig_ioackin_com_port_cmd_ap_ack = ap_const_logic_0) or (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0));
    end process;


    ap_block_state27_io_assign_proc : process(tmp_38_fu_1713_p3, ap_sig_ioackin_alloc_addr_ap_ack)
    begin
                ap_block_state27_io <= (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (tmp_38_fu_1713_p3 = ap_const_lv1_0)) or ((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (tmp_38_fu_1713_p3 = ap_const_lv1_1)));
    end process;


    ap_block_state3_io_assign_proc : process(ap_sig_ioackin_alloc_addr_ap_ack, ap_predicate_op84_write_state3, ap_sig_ioackin_com_port_cmd_ap_ack, ap_predicate_op99_write_state3, ap_sig_ioackin_com_port_layer_V_ap_ack, ap_predicate_op108_write_state3)
    begin
                ap_block_state3_io <= (((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (ap_sig_ioackin_com_port_layer_V_ap_ack = ap_const_logic_0)) or ((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (ap_sig_ioackin_com_port_layer_V_ap_ack = ap_const_logic_0)) or ((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (ap_sig_ioackin_com_port_cmd_ap_ack = ap_const_logic_0)) or ((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (ap_sig_ioackin_com_port_cmd_ap_ack = ap_const_logic_0)) or ((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0)));
    end process;


    ap_block_state7_io_assign_proc : process(tmp_39_fu_1313_p2, ap_sig_ioackin_com_port_cmd_ap_ack, ap_sig_ioackin_com_port_layer_V_ap_ack, ap_sig_ioackin_com_port_target_V_ap_ack)
    begin
                ap_block_state7_io <= (((ap_sig_ioackin_com_port_layer_V_ap_ack = ap_const_logic_0) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)) or ((ap_sig_ioackin_com_port_cmd_ap_ack = ap_const_logic_0) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)) or ((ap_sig_ioackin_com_port_target_V_ap_ack = ap_const_logic_0) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)));
    end process;


    ap_condition_1150_assign_proc : process(tmp_47_fu_1558_p2, BB_V_1_fu_1538_p4)
    begin
                ap_condition_1150 <= (not((ap_const_lv16_2 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_4 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_8 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_10 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_20 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_40 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_80 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_100 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_200 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_400 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_800 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_1000 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_2000 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_4000 = BB_V_1_fu_1538_p4)) and not((ap_const_lv16_8000 = BB_V_1_fu_1538_p4)) and (tmp_47_fu_1558_p2 = ap_const_lv1_0));
    end process;


    ap_condition_593_assign_proc : process(tmp_fu_1056_p2, TMP_1_V_fu_1066_p2)
    begin
                ap_condition_593 <= (not((ap_const_lv16_2 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_4 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_8 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_10 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_20 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_40 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_80 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_100 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_200 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_400 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_800 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_1000 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_2000 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_4000 = TMP_1_V_fu_1066_p2)) and not((ap_const_lv16_8000 = TMP_1_V_fu_1066_p2)) and (tmp_fu_1056_p2 = ap_const_lv1_0));
    end process;


    ap_condition_800_assign_proc : process(tmp_32_fu_1460_p2, BB_V_fu_1420_p4)
    begin
                ap_condition_800 <= (not((ap_const_lv16_2 = BB_V_fu_1420_p4)) and not((ap_const_lv16_4 = BB_V_fu_1420_p4)) and not((ap_const_lv16_8 = BB_V_fu_1420_p4)) and not((ap_const_lv16_10 = BB_V_fu_1420_p4)) and not((ap_const_lv16_20 = BB_V_fu_1420_p4)) and not((ap_const_lv16_40 = BB_V_fu_1420_p4)) and not((ap_const_lv16_80 = BB_V_fu_1420_p4)) and not((ap_const_lv16_100 = BB_V_fu_1420_p4)) and not((ap_const_lv16_200 = BB_V_fu_1420_p4)) and not((ap_const_lv16_400 = BB_V_fu_1420_p4)) and not((ap_const_lv16_800 = BB_V_fu_1420_p4)) and not((ap_const_lv16_1000 = BB_V_fu_1420_p4)) and not((ap_const_lv16_2000 = BB_V_fu_1420_p4)) and not((ap_const_lv16_4000 = BB_V_fu_1420_p4)) and not((ap_const_lv16_8000 = BB_V_fu_1420_p4)) and (tmp_32_fu_1460_p2 = ap_const_lv1_0));
    end process;


    ap_condition_899_assign_proc : process(tmp_40_fu_1470_p2, CC_V_fu_1430_p4)
    begin
                ap_condition_899 <= (not((ap_const_lv16_2 = CC_V_fu_1430_p4)) and not((ap_const_lv16_4 = CC_V_fu_1430_p4)) and not((ap_const_lv16_8 = CC_V_fu_1430_p4)) and not((ap_const_lv16_10 = CC_V_fu_1430_p4)) and not((ap_const_lv16_20 = CC_V_fu_1430_p4)) and not((ap_const_lv16_40 = CC_V_fu_1430_p4)) and not((ap_const_lv16_80 = CC_V_fu_1430_p4)) and not((ap_const_lv16_100 = CC_V_fu_1430_p4)) and not((ap_const_lv16_200 = CC_V_fu_1430_p4)) and not((ap_const_lv16_400 = CC_V_fu_1430_p4)) and not((ap_const_lv16_800 = CC_V_fu_1430_p4)) and not((ap_const_lv16_1000 = CC_V_fu_1430_p4)) and not((ap_const_lv16_2000 = CC_V_fu_1430_p4)) and not((ap_const_lv16_4000 = CC_V_fu_1430_p4)) and not((ap_const_lv16_8000 = CC_V_fu_1430_p4)) and (tmp_40_fu_1470_p2 = ap_const_lv1_0));
    end process;


    ap_condition_983_assign_proc : process(tmp_41_fu_1476_p2, DD_V_fu_1440_p4)
    begin
                ap_condition_983 <= (not((ap_const_lv16_2 = DD_V_fu_1440_p4)) and not((ap_const_lv16_4 = DD_V_fu_1440_p4)) and not((ap_const_lv16_8 = DD_V_fu_1440_p4)) and not((ap_const_lv16_10 = DD_V_fu_1440_p4)) and not((ap_const_lv16_20 = DD_V_fu_1440_p4)) and not((ap_const_lv16_40 = DD_V_fu_1440_p4)) and not((ap_const_lv16_80 = DD_V_fu_1440_p4)) and not((ap_const_lv16_100 = DD_V_fu_1440_p4)) and not((ap_const_lv16_200 = DD_V_fu_1440_p4)) and not((ap_const_lv16_400 = DD_V_fu_1440_p4)) and not((ap_const_lv16_800 = DD_V_fu_1440_p4)) and not((ap_const_lv16_1000 = DD_V_fu_1440_p4)) and not((ap_const_lv16_2000 = DD_V_fu_1440_p4)) and not((ap_const_lv16_4000 = DD_V_fu_1440_p4)) and not((ap_const_lv16_8000 = DD_V_fu_1440_p4)) and (tmp_41_fu_1476_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0167_0_i1_phi_fu_601_p34_assign_proc : process(ap_CS_fsm_state16, tmp_9_fu_1450_p2, AA_V_fu_1416_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_1)) or (not((ap_const_lv16_2 = AA_V_fu_1416_p1)) and not((ap_const_lv16_4 = AA_V_fu_1416_p1)) and not((ap_const_lv16_8 = AA_V_fu_1416_p1)) and not((ap_const_lv16_10 = AA_V_fu_1416_p1)) and not((ap_const_lv16_20 = AA_V_fu_1416_p1)) and not((ap_const_lv16_40 = AA_V_fu_1416_p1)) and not((ap_const_lv16_80 = AA_V_fu_1416_p1)) and not((ap_const_lv16_100 = AA_V_fu_1416_p1)) and not((ap_const_lv16_200 = AA_V_fu_1416_p1)) and not((ap_const_lv16_400 = AA_V_fu_1416_p1)) and not((ap_const_lv16_800 = AA_V_fu_1416_p1)) and not((ap_const_lv16_1000 = AA_V_fu_1416_p1)) and not((ap_const_lv16_2000 = AA_V_fu_1416_p1)) and not((ap_const_lv16_4000 = AA_V_fu_1416_p1)) and not((ap_const_lv16_8000 = AA_V_fu_1416_p1)) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_0;
        elsif (((ap_const_lv16_2 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_1;
        elsif (((ap_const_lv16_4 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_2;
        elsif (((ap_const_lv16_8 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_3;
        elsif (((ap_const_lv16_10 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_4;
        elsif (((ap_const_lv16_20 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_5;
        elsif (((ap_const_lv16_40 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_6;
        elsif (((ap_const_lv16_80 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_7;
        elsif (((ap_const_lv16_100 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_8;
        elsif (((ap_const_lv16_200 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_9;
        elsif (((ap_const_lv16_400 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_A;
        elsif (((ap_const_lv16_800 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_B;
        elsif (((ap_const_lv16_1000 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_C;
        elsif (((ap_const_lv16_2000 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_D;
        elsif (((ap_const_lv16_4000 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_E;
        elsif (((ap_const_lv16_8000 = AA_V_fu_1416_p1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_9_fu_1450_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= ap_const_lv4_F;
        else 
            ap_phi_mux_p_0167_0_i1_phi_fu_601_p34 <= "XXXX";
        end if; 
    end process;


    ap_phi_mux_p_0252_0_i1_phi_fu_657_p34_assign_proc : process(ap_CS_fsm_state16, tmp_32_fu_1460_p2, BB_V_fu_1420_p4, ap_condition_800)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
            if ((tmp_32_fu_1460_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_0;
            elsif ((ap_const_boolean_1 = ap_condition_800)) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_10;
            elsif (((ap_const_lv16_2 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_11;
            elsif (((ap_const_lv16_4 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_12;
            elsif (((ap_const_lv16_8 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_13;
            elsif (((ap_const_lv16_10 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_14;
            elsif (((ap_const_lv16_20 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_15;
            elsif (((ap_const_lv16_40 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_16;
            elsif (((ap_const_lv16_80 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_17;
            elsif (((ap_const_lv16_100 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_18;
            elsif (((ap_const_lv16_200 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_19;
            elsif (((ap_const_lv16_400 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_1A;
            elsif (((ap_const_lv16_800 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_1B;
            elsif (((ap_const_lv16_1000 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_1C;
            elsif (((ap_const_lv16_2000 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_1D;
            elsif (((ap_const_lv16_4000 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_1E;
            elsif (((ap_const_lv16_8000 = BB_V_fu_1420_p4) and (tmp_32_fu_1460_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= ap_const_lv5_1F;
            else 
                ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= "XXXXX";
            end if;
        else 
            ap_phi_mux_p_0252_0_i1_phi_fu_657_p34 <= "XXXXX";
        end if; 
    end process;


    ap_phi_mux_p_061_0_i_phi_fu_843_p34_assign_proc : process(ap_CS_fsm_state19, tmp_46_fu_1548_p2, AA_V_1_fu_1534_p1)
    begin
        if (((not((ap_const_lv16_2000 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_4000 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_8000 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_2 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_4 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_8 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_10 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_20 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_40 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_80 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_100 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_200 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_400 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_800 = AA_V_1_fu_1534_p1)) and not((ap_const_lv16_1000 = AA_V_1_fu_1534_p1)) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_1)))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_0;
        elsif (((ap_const_lv16_2 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_1;
        elsif (((ap_const_lv16_4 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_2;
        elsif (((ap_const_lv16_8 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_3;
        elsif (((ap_const_lv16_10 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_4;
        elsif (((ap_const_lv16_20 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_5;
        elsif (((ap_const_lv16_40 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_6;
        elsif (((ap_const_lv16_80 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_7;
        elsif (((ap_const_lv16_100 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_8;
        elsif (((ap_const_lv16_200 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_9;
        elsif (((ap_const_lv16_400 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_A;
        elsif (((ap_const_lv16_800 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_B;
        elsif (((ap_const_lv16_1000 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_C;
        elsif (((ap_const_lv16_2000 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_D;
        elsif (((ap_const_lv16_4000 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_E;
        elsif (((ap_const_lv16_8000 = AA_V_1_fu_1534_p1) and (ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_46_fu_1548_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= ap_const_lv4_F;
        else 
            ap_phi_mux_p_061_0_i_phi_fu_843_p34 <= "XXXX";
        end if; 
    end process;


    ap_predicate_op108_write_state3_assign_proc : process(tmp_4_fu_1071_p2, grp_fu_980_p2)
    begin
                ap_predicate_op108_write_state3 <= ((grp_fu_980_p2 = ap_const_lv1_1) and (tmp_4_fu_1071_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op84_write_state3_assign_proc : process(tmp_4_fu_1071_p2, tmp_6_fu_1080_p2)
    begin
                ap_predicate_op84_write_state3 <= ((tmp_6_fu_1080_p2 = ap_const_lv1_0) and (tmp_4_fu_1071_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op99_write_state3_assign_proc : process(tmp_4_fu_1071_p2, tmp_6_fu_1080_p2, grp_fu_980_p2)
    begin
                ap_predicate_op99_write_state3 <= ((tmp_4_fu_1071_p2 = ap_const_lv1_0) and (grp_fu_980_p2 = ap_const_lv1_1) and (tmp_6_fu_1080_p2 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_alloc_addr_ap_ack_assign_proc : process(alloc_addr_ap_ack, ap_reg_ioackin_alloc_addr_ap_ack)
    begin
        if ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0)) then 
            ap_sig_ioackin_alloc_addr_ap_ack <= alloc_addr_ap_ack;
        else 
            ap_sig_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_com_port_cmd_ap_ack_assign_proc : process(com_port_cmd_ap_ack, ap_reg_ioackin_com_port_cmd_ap_ack)
    begin
        if ((ap_reg_ioackin_com_port_cmd_ap_ack = ap_const_logic_0)) then 
            ap_sig_ioackin_com_port_cmd_ap_ack <= com_port_cmd_ap_ack;
        else 
            ap_sig_ioackin_com_port_cmd_ap_ack <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_com_port_layer_V_ap_ack_assign_proc : process(com_port_layer_V_ap_ack, ap_reg_ioackin_com_port_layer_V_ap_ack)
    begin
        if ((ap_reg_ioackin_com_port_layer_V_ap_ack = ap_const_logic_0)) then 
            ap_sig_ioackin_com_port_layer_V_ap_ack <= com_port_layer_V_ap_ack;
        else 
            ap_sig_ioackin_com_port_layer_V_ap_ack <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_com_port_target_V_ap_ack_assign_proc : process(com_port_target_V_ap_ack, ap_reg_ioackin_com_port_target_V_ap_ack)
    begin
        if ((ap_reg_ioackin_com_port_target_V_ap_ack = ap_const_logic_0)) then 
            ap_sig_ioackin_com_port_target_V_ap_ack <= com_port_target_V_ap_ack;
        else 
            ap_sig_ioackin_com_port_target_V_ap_ack <= ap_const_logic_1;
        end if; 
    end process;


    com_port_allocated_addr_V_ap_ack_assign_proc : process(com_port_allocated_addr_V_ap_vld, ap_CS_fsm_state26)
    begin
        if (((com_port_allocated_addr_V_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            com_port_allocated_addr_V_ap_ack <= ap_const_logic_1;
        else 
            com_port_allocated_addr_V_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    com_port_allocated_addr_V_blk_n_assign_proc : process(com_port_allocated_addr_V_ap_vld, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            com_port_allocated_addr_V_blk_n <= com_port_allocated_addr_V_ap_vld;
        else 
            com_port_allocated_addr_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    com_port_cmd_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state3, ap_CS_fsm_state7, tmp_39_fu_1313_p2, ap_predicate_op99_write_state3, ap_predicate_op108_write_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            com_port_cmd <= ap_const_lv8_4;
        elsif (((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            com_port_cmd <= ap_const_lv8_2;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)) or ((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            com_port_cmd <= ap_const_lv8_3;
        else 
            com_port_cmd <= "XXXXXXXX";
        end if; 
    end process;


    com_port_cmd_ap_vld_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state3, ap_CS_fsm_state7, tmp_39_fu_1313_p2, ap_predicate_op99_write_state3, ap_predicate_op108_write_state3, ap_reg_ioackin_com_port_cmd_ap_ack)
    begin
        if ((((ap_reg_ioackin_com_port_cmd_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)) or ((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (ap_reg_ioackin_com_port_cmd_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (ap_reg_ioackin_com_port_cmd_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_reg_ioackin_com_port_cmd_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            com_port_cmd_ap_vld <= ap_const_logic_1;
        else 
            com_port_cmd_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    com_port_cmd_blk_n_assign_proc : process(com_port_cmd_ap_ack, ap_CS_fsm_state21, ap_CS_fsm_state3, tmp_4_fu_1071_p2, tmp_6_fu_1080_p2, grp_fu_980_p2, ap_CS_fsm_state7, tmp_39_fu_1313_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_980_p2 = ap_const_lv1_1) and (tmp_4_fu_1071_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_4_fu_1071_p2 = ap_const_lv1_0) and (grp_fu_980_p2 = ap_const_lv1_1) and (tmp_6_fu_1080_p2 = ap_const_lv1_1)))) then 
            com_port_cmd_blk_n <= com_port_cmd_ap_ack;
        else 
            com_port_cmd_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    com_port_layer_V_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state3, ap_CS_fsm_state7, tmp_39_fu_1313_p2, ap_predicate_op99_write_state3, ap_predicate_op108_write_state3, p_2_fu_1106_p1, p_1_fu_1117_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)))) then 
            com_port_layer_V <= ap_const_lv8_B;
        elsif (((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            com_port_layer_V <= p_1_fu_1117_p1;
        elsif (((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            com_port_layer_V <= p_2_fu_1106_p1;
        else 
            com_port_layer_V <= "XXXXXXXX";
        end if; 
    end process;


    com_port_layer_V_ap_vld_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state3, ap_CS_fsm_state7, tmp_39_fu_1313_p2, ap_predicate_op99_write_state3, ap_predicate_op108_write_state3, ap_reg_ioackin_com_port_layer_V_ap_ack)
    begin
        if ((((ap_reg_ioackin_com_port_layer_V_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)) or ((ap_predicate_op108_write_state3 = ap_const_boolean_1) and (ap_reg_ioackin_com_port_layer_V_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_predicate_op99_write_state3 = ap_const_boolean_1) and (ap_reg_ioackin_com_port_layer_V_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_reg_ioackin_com_port_layer_V_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            com_port_layer_V_ap_vld <= ap_const_logic_1;
        else 
            com_port_layer_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    com_port_layer_V_blk_n_assign_proc : process(com_port_layer_V_ap_ack, ap_CS_fsm_state21, ap_CS_fsm_state3, tmp_4_fu_1071_p2, tmp_6_fu_1080_p2, grp_fu_980_p2, ap_CS_fsm_state7, tmp_39_fu_1313_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fu_980_p2 = ap_const_lv1_1) and (tmp_4_fu_1071_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_4_fu_1071_p2 = ap_const_lv1_0) and (grp_fu_980_p2 = ap_const_lv1_1) and (tmp_6_fu_1080_p2 = ap_const_lv1_1)))) then 
            com_port_layer_V_blk_n <= com_port_layer_V_ap_ack;
        else 
            com_port_layer_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    com_port_target_V_assign_proc : process(ap_CS_fsm_state7, tmp_39_fu_1313_p2, ap_CS_fsm_state22, ap_CS_fsm_state8, reg_1019, tree_offset_V_cast_reg_2097)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            com_port_target_V <= tree_offset_V_cast_reg_2097;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)))) then 
            com_port_target_V <= reg_1019;
        else 
            com_port_target_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    com_port_target_V_ap_vld_assign_proc : process(ap_CS_fsm_state7, tmp_39_fu_1313_p2, ap_CS_fsm_state22, ap_CS_fsm_state8, ap_reg_ioackin_com_port_target_V_ap_ack)
    begin
        if ((((ap_reg_ioackin_com_port_target_V_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_reg_ioackin_com_port_target_V_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((ap_reg_ioackin_com_port_target_V_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)))) then 
            com_port_target_V_ap_vld <= ap_const_logic_1;
        else 
            com_port_target_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    com_port_target_V_blk_n_assign_proc : process(com_port_target_V_ap_ack, ap_CS_fsm_state7, tmp_39_fu_1313_p2, ap_CS_fsm_state22, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_39_fu_1313_p2 = ap_const_lv1_1)))) then 
            com_port_target_V_blk_n <= com_port_target_V_ap_ack;
        else 
            com_port_target_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cond_fu_1635_p2 <= "1" when (group_tree_tmp_maske_fu_1629_p2 = ap_const_lv2_2) else "0";

    group_tree_V_address0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state3, group_tree_V_addr_reg_1896, ap_CS_fsm_state6, group_tree_V_addr_1_reg_2092, ap_CS_fsm_state25, tmp_11_fu_1088_p1, tmp_51_fu_1605_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            group_tree_V_address0 <= group_tree_V_addr_1_reg_2092;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            group_tree_V_address0 <= tmp_51_fu_1605_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            group_tree_V_address0 <= group_tree_V_addr_reg_1896;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            group_tree_V_address0 <= tmp_11_fu_1088_p1(11 - 1 downto 0);
        else 
            group_tree_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    group_tree_V_ce0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state3, ap_block_state3_io, ap_CS_fsm_state6, ap_block_state20_io, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state20_io) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            group_tree_V_ce0 <= ap_const_logic_1;
        else 
            group_tree_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    group_tree_V_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state25, tmp_36_fu_1256_p2, r_V_14_fu_1661_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            group_tree_V_d0 <= r_V_14_fu_1661_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            group_tree_V_d0 <= tmp_36_fu_1256_p2;
        else 
            group_tree_V_d0 <= "XXXX";
        end if; 
    end process;


    group_tree_V_we0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            group_tree_V_we0 <= ap_const_logic_1;
        else 
            group_tree_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    group_tree_tmp_V_fu_1617_p2 <= (tmp_75_fu_1613_p1 xor ap_const_lv2_3);
    group_tree_tmp_maske_fu_1629_p2 <= (tmp_52_fu_1623_p2 and group_tree_tmp_V_fu_1617_p2);
    grp_fu_1013_p2 <= "1" when (unsigned(layer0_V_reg_491) < unsigned(ap_const_lv5_7)) else "0";
    grp_fu_980_p2 <= "1" when (unsigned(layer0_V_reg_491) < unsigned(ap_const_lv5_C)) else "0";
    grp_fu_986_p4 <= alloc_free_target_re_reg_1853(16 downto 1);

    heap_tree_V_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state7, ap_CS_fsm_state6, heap_tree_V_addr_2_reg_1950, ap_CS_fsm_state10, heap_tree_V_addr_1_reg_1966, ap_CS_fsm_state12, ap_CS_fsm_state17, heap_tree_V_addr_3_reg_2037, ap_CS_fsm_state25, heap_tree_V_addr_reg_2157, ap_CS_fsm_state29, tmp_37_fu_1263_p1, tmp_28_fu_1333_p1, tmp_43_fu_1514_p1, tmp_21_fu_1754_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            heap_tree_V_address0 <= heap_tree_V_addr_reg_2157;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            heap_tree_V_address0 <= tmp_21_fu_1754_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            heap_tree_V_address0 <= heap_tree_V_addr_3_reg_2037;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            heap_tree_V_address0 <= tmp_43_fu_1514_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            heap_tree_V_address0 <= heap_tree_V_addr_1_reg_1966;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            heap_tree_V_address0 <= tmp_28_fu_1333_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            heap_tree_V_address0 <= heap_tree_V_addr_2_reg_1950;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            heap_tree_V_address0 <= tmp_37_fu_1263_p1(6 - 1 downto 0);
        else 
            heap_tree_V_address0 <= "XXXXXX";
        end if; 
    end process;


    heap_tree_V_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state7, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_block_state27_io, ap_CS_fsm_state29, ap_block_state7_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_io)) or ((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            heap_tree_V_ce0 <= ap_const_logic_1;
        else 
            heap_tree_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    heap_tree_V_d0_assign_proc : process(ap_CS_fsm_state7, tmp_29_reg_1976, ap_CS_fsm_state12, ap_CS_fsm_state25, tmp_23_reg_2167, ap_CS_fsm_state29, p_Result_4_fu_1277_p4, p_Result_6_fu_1681_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            heap_tree_V_d0 <= tmp_23_reg_2167;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            heap_tree_V_d0 <= p_Result_6_fu_1681_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            heap_tree_V_d0 <= tmp_29_reg_1976;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            heap_tree_V_d0 <= p_Result_4_fu_1277_p4;
        else 
            heap_tree_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    heap_tree_V_we0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_block_state7_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_io)))) then 
            heap_tree_V_we0 <= ap_const_logic_1;
        else 
            heap_tree_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_assign_1_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1028),32));
    i_assign_2_fu_1188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_in_group_tree_V_2_reg_568),32));
    i_assign_3_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1024),32));
    i_assign_4_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1028),32));
    i_assign_5_fu_1672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_reg_2077),32));
    i_assign_6_fu_1691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_reg_2031),32));
    i_assign_fu_1795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_s_reg_2143),32));
    lhs_V_fu_1126_p2 <= (tmp_12_fu_1122_p1 xor ap_const_lv32_FFFFFFFF);
    loc2_V_fu_1709_p1 <= com_port_allocated_addr_V(5 - 1 downto 0);
    loc_in_group_tree_V_1_fu_1085_p1 <= alloc_free_target_re_reg_1853(1 - 1 downto 0);

    maintain_mask_V_address0_assign_proc : process(ap_CS_fsm_state27, tmp_38_fu_1713_p3, ap_CS_fsm_state10, grp_fu_1013_p2, tmp_27_fu_1328_p1, tmp_24_fu_1344_p1, tmp_20_fu_1749_p1, tmp_17_fu_1765_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) and (grp_fu_1013_p2 = ap_const_lv1_1) and (tmp_38_fu_1713_p3 = ap_const_lv1_0))) then 
            maintain_mask_V_address0 <= tmp_17_fu_1765_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (grp_fu_1013_p2 = ap_const_lv1_0) and (tmp_38_fu_1713_p3 = ap_const_lv1_0))) then 
            maintain_mask_V_address0 <= tmp_20_fu_1749_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_1013_p2 = ap_const_lv1_1))) then 
            maintain_mask_V_address0 <= tmp_24_fu_1344_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_1013_p2 = ap_const_lv1_0))) then 
            maintain_mask_V_address0 <= tmp_27_fu_1328_p1(3 - 1 downto 0);
        else 
            maintain_mask_V_address0 <= "XXX";
        end if; 
    end process;


    maintain_mask_V_ce0_assign_proc : process(ap_CS_fsm_state27, tmp_38_fu_1713_p3, ap_CS_fsm_state10, grp_fu_1013_p2, ap_block_state27_io)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_1013_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_fu_1013_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27) and (grp_fu_1013_p2 = ap_const_lv1_1) and (tmp_38_fu_1713_p3 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27) and (grp_fu_1013_p2 = ap_const_lv1_0) and (tmp_38_fu_1713_p3 = ap_const_lv1_0)))) then 
            maintain_mask_V_ce0 <= ap_const_logic_1;
        else 
            maintain_mask_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        maintain_mask_V_load_4_fu_1812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_1032),64));

        maintain_mask_V_load_6_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_1032),64));


    mark_mask_V_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state24, tmp_13_fu_1101_p1, tmp_55_fu_1653_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            mark_mask_V_address0 <= tmp_55_fu_1653_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mark_mask_V_address0 <= tmp_13_fu_1101_p1(7 - 1 downto 0);
        else 
            mark_mask_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    mark_mask_V_ce0_assign_proc : process(ap_CS_fsm_state3, ap_block_state3_io, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            mark_mask_V_ce0 <= ap_const_logic_1;
        else 
            mark_mask_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    not_s_fu_1176_p2 <= "0" when (p_3_reg_548 = ap_const_lv4_0) else "1";
    now1_V_fu_1222_p2 <= std_logic_vector(unsigned(p_3_reg_548) + unsigned(ap_const_lv4_F));
    or_cond_fu_1582_p2 <= (tmp_50_fu_1578_p2 or tmp_49_fu_1573_p2);
    p_0102_0_i_cast_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0102_0_i_reg_896),6));
    p_0167_0_i1_cast_fu_1456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0167_0_i1_phi_fu_601_p34),6));
        p_0244_0_i1_cast9_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0244_0_i1_reg_767),6));

    p_0244_0_i1_cast_fu_1486_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0244_0_i1_cast9_fu_1482_p1),7));
    p_0252_0_i1_cast_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0252_0_i1_phi_fu_657_p34),7));
    p_061_0_i_cast_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_061_0_i_phi_fu_843_p34),6));
    p_1_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(layer0_V_reg_491),8));
    p_2_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(layer0_V_reg_491),8));
    p_Repl2_1_fu_1373_p2 <= "0" when (tmp_29_reg_1976 = ap_const_lv32_0) else "1";
    p_Repl2_2_fu_1272_p2 <= "0" when (tmp_70_reg_1944 = ap_const_lv2_0) else "1";
    p_Repl2_3_fu_1292_p2 <= "0" when (p_Result_4_fu_1277_p4 = ap_const_lv32_0) else "1";
    p_Repl2_4_fu_1675_p2 <= "0" when (r_V_17_cast_fu_1667_p2 = ap_const_lv2_3) else "1";
    p_Repl2_5_fu_1694_p2 <= "0" when (p_Result_6_fu_1681_p4 = ap_const_lv32_0) else "1";
    p_Repl2_s_fu_1798_p2 <= "0" when (tmp_23_reg_2167 = ap_const_lv32_0) else "1";
    
    p_Result_10_fu_1202_p4_proc : process(loc_in_group_tree_V_2_reg_568)
    begin
        p_Result_10_fu_1202_p4 <= loc_in_group_tree_V_2_reg_568;
        p_Result_10_fu_1202_p4(0) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_1_fu_1378_p4_proc : process(p_Val2_5_reg_1877, i_assign_1_fu_1369_p1, p_Repl2_1_fu_1373_p2)
    begin
        p_Result_1_fu_1378_p4 <= p_Val2_5_reg_1877;
        if to_integer(unsigned(i_assign_1_fu_1369_p1)) >= p_Val2_5_reg_1877'low and to_integer(unsigned(i_assign_1_fu_1369_p1)) <= p_Val2_5_reg_1877'high then
            p_Result_1_fu_1378_p4(to_integer(unsigned(i_assign_1_fu_1369_p1))) <= p_Repl2_1_fu_1373_p2(0);
        end if;
    end process;

    
    p_Result_4_fu_1277_p4_proc : process(heap_tree_V_q0, i_assign_3_fu_1268_p1, p_Repl2_2_fu_1272_p2)
    begin
        p_Result_4_fu_1277_p4 <= heap_tree_V_q0;
        if to_integer(unsigned(i_assign_3_fu_1268_p1)) >= heap_tree_V_q0'low and to_integer(unsigned(i_assign_3_fu_1268_p1)) <= heap_tree_V_q0'high then
            p_Result_4_fu_1277_p4(to_integer(unsigned(i_assign_3_fu_1268_p1))) <= p_Repl2_2_fu_1272_p2(0);
        end if;
    end process;

    
    p_Result_5_fu_1298_p4_proc : process(p_Val2_5_reg_1877, i_assign_4_fu_1288_p1, p_Repl2_3_fu_1292_p2)
    begin
        p_Result_5_fu_1298_p4 <= p_Val2_5_reg_1877;
        if to_integer(unsigned(i_assign_4_fu_1288_p1)) >= p_Val2_5_reg_1877'low and to_integer(unsigned(i_assign_4_fu_1288_p1)) <= p_Val2_5_reg_1877'high then
            p_Result_5_fu_1298_p4(to_integer(unsigned(i_assign_4_fu_1288_p1))) <= p_Repl2_3_fu_1292_p2(0);
        end if;
    end process;

    
    p_Result_6_fu_1681_p4_proc : process(p_Val2_11_reg_2042, i_assign_5_fu_1672_p1, p_Repl2_4_fu_1675_p2)
    begin
        p_Result_6_fu_1681_p4 <= p_Val2_11_reg_2042;
        if to_integer(unsigned(i_assign_5_fu_1672_p1)) >= p_Val2_11_reg_2042'low and to_integer(unsigned(i_assign_5_fu_1672_p1)) <= p_Val2_11_reg_2042'high then
            p_Result_6_fu_1681_p4(to_integer(unsigned(i_assign_5_fu_1672_p1))) <= p_Repl2_4_fu_1675_p2(0);
        end if;
    end process;

    
    p_Result_7_fu_1700_p4_proc : process(p_Val2_5_reg_1877, i_assign_6_fu_1691_p1, p_Repl2_5_fu_1694_p2)
    begin
        p_Result_7_fu_1700_p4 <= p_Val2_5_reg_1877;
        if to_integer(unsigned(i_assign_6_fu_1691_p1)) >= p_Val2_5_reg_1877'low and to_integer(unsigned(i_assign_6_fu_1691_p1)) <= p_Val2_5_reg_1877'high then
            p_Result_7_fu_1700_p4(to_integer(unsigned(i_assign_6_fu_1691_p1))) <= p_Repl2_5_fu_1694_p2(0);
        end if;
    end process;

    
    p_Result_8_fu_1046_p4_proc : process(tmp_size_V_fu_1040_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_8_fu_1046_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_size_V_fu_1040_p2;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_8_fu_1046_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_8_fu_1046_p4_i) := tmp_size_V_fu_1040_p2(16-1-p_Result_8_fu_1046_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_8_fu_1046_p4 <= resvalue(16-1 downto 0);
    end process;

    
    p_Result_9_fu_1192_p4_proc : process(p_Val2_12_reg_579, i_assign_2_fu_1188_p1)
    begin
        p_Result_9_fu_1192_p4 <= p_Val2_12_reg_579;
        if to_integer(unsigned(i_assign_2_fu_1188_p1)) >= p_Val2_12_reg_579'low and to_integer(unsigned(i_assign_2_fu_1188_p1)) <= p_Val2_12_reg_579'high then
            p_Result_9_fu_1192_p4(to_integer(unsigned(i_assign_2_fu_1188_p1))) <= ap_const_lv1_1(0);
        end if;
    end process;

    
    p_Result_s_fu_1803_p4_proc : process(p_Val2_5_reg_1877, i_assign_fu_1795_p1, p_Repl2_s_fu_1798_p2)
    begin
        p_Result_s_fu_1803_p4 <= p_Val2_5_reg_1877;
        if to_integer(unsigned(i_assign_fu_1795_p1)) >= p_Val2_5_reg_1877'low and to_integer(unsigned(i_assign_fu_1795_p1)) <= p_Val2_5_reg_1877'high then
            p_Result_s_fu_1803_p4(to_integer(unsigned(i_assign_fu_1795_p1))) <= p_Repl2_s_fu_1798_p2(0);
        end if;
    end process;

    p_not_fu_1111_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(top_heap_V_0));
    p_s_fu_1061_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_8_reg_1861));
    phitmp1_fu_1228_p4 <= loc_in_group_tree_V_2_reg_568(15 downto 1);
    phitmp3_fu_1242_p2 <= std_logic_vector(unsigned(tmp_35_fu_1238_p1) + unsigned(ap_const_lv16_FFFF));
    r_V_11_fu_1216_p2 <= std_logic_vector(shift_right(unsigned(p_Result_9_fu_1192_p4),to_integer(unsigned('0' & tmp_34_fu_1212_p1(31-1 downto 0)))));
    r_V_12_fu_1588_p3 <= (tmp_42_reg_2031 & ap_const_lv5_0);
    r_V_13_fu_1641_p3 <= (tree_offset_V_reg_2086 & cond_fu_1635_p2);
    r_V_14_fu_1661_p2 <= (mark_mask_V_q0 or lhs_V_1_reg_2102);
    r_V_15_fu_1395_p2 <= std_logic_vector(shift_left(unsigned(maintain_mask_V_load_6_fu_1387_p1),to_integer(unsigned('0' & tmp_25_fu_1391_p1(31-1 downto 0)))));
    r_V_16_fu_1357_p2 <= std_logic_vector(shift_left(unsigned(tmp_65_fu_1349_p1),to_integer(unsigned('0' & tmp_34_cast_fu_1353_p1(31-1 downto 0)))));
    r_V_17_cast_fu_1667_p2 <= (tmp_76_fu_1657_p1 or tmp_75_reg_2107);
    r_V_1_fu_1154_p3 <= (tmp_16_fu_1144_p4 & tmp_15_fu_1138_p2);
    r_V_3_fu_1759_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) - unsigned(tmp_60_fu_1739_p1));
    r_V_4_fu_1819_p2 <= std_logic_vector(shift_left(unsigned(maintain_mask_V_load_4_fu_1812_p1),to_integer(unsigned('0' & tmp_18_fu_1816_p1(31-1 downto 0)))));
    r_V_5_fu_1743_p2 <= std_logic_vector(signed(ap_const_lv4_B) - signed(tmp_60_fu_1739_p1));
    r_V_6_fu_1777_p2 <= std_logic_vector(shift_left(unsigned(tmp_63_fu_1770_p1),to_integer(unsigned('0' & tmp_25_cast_fu_1774_p1(31-1 downto 0)))));
    r_V_7_fu_1338_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) - unsigned(tmp_61_fu_1318_p1));
    r_V_9_fu_1322_p2 <= std_logic_vector(signed(ap_const_lv4_B) - signed(tmp_61_fu_1318_p1));
    r_V_fu_1093_p3 <= (ap_const_lv5_1F & loc_in_group_tree_V_1_fu_1085_p1);
    r_V_s_fu_1730_p4 <= addr_HTA_V_3_reg_2127(15 downto 5);
    rec_bits_V_fu_1166_p1 <= p_01572_0_in_reg_559(2 - 1 downto 0);
    size_V_fu_1036_p1 <= alloc_size(16 - 1 downto 0);
    tmp0_V_6_fu_1412_p2 <= (p_not_reg_1910 and p_Val2_5_reg_1877);
        tmp0_V_7_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_1_fu_1154_p3),64));

    tmp0_V_fu_1825_p2 <= (r_V_4_fu_1819_p2 xor ap_const_lv64_FFFFFFFFFFFFFFFF);
    tmp1_V_fu_1529_p2 <= std_logic_vector(unsigned(p_Val2_11_reg_2042) - unsigned(tmp_45_fu_1525_p2));
    tmp2_cast_fu_1495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_1490_p2),8));
    tmp2_fu_1490_p2 <= std_logic_vector(unsigned(p_0248_0_i1_reg_710) + unsigned(p_0167_0_i1_cast_reg_2012));
    tmp3_cast_fu_1504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_1499_p2),8));
    tmp3_fu_1499_p2 <= std_logic_vector(unsigned(p_0244_0_i1_cast_fu_1486_p1) + unsigned(p_0252_0_i1_cast_reg_2020));
    tmp_11_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_986_p4),64));
    tmp_12_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(group_tree_V_q0),32));
    tmp_13_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1093_p3),64));
    tmp_14_fu_1132_p2 <= (group_tree_V_q0 xor ap_const_lv4_F);
    tmp_15_fu_1138_p2 <= (tmp_14_fu_1132_p2 or mark_mask_V_q0);
    tmp_16_fu_1144_p4 <= lhs_V_fu_1126_p2(31 downto 4);
    tmp_17_fu_1765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_fu_1759_p2),64));
    tmp_18_fu_1816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_s_reg_2143),64));
    tmp_19_fu_1831_p2 <= (tmp0_V_fu_1825_p2 and p_Val2_5_reg_1877);
    tmp_20_fu_1749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_fu_1743_p2),64));
    tmp_21_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_s_fu_1730_p4),64));
    tmp_22_fu_1783_p2 <= (r_V_6_fu_1777_p2 xor ap_const_lv32_FFFFFFFF);
    tmp_23_fu_1789_p2 <= (tmp_22_fu_1783_p2 and heap_tree_V_q0);
    tmp_24_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_7_fu_1338_p2),64));
    tmp_25_cast_fu_1774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc2_V_reg_2134),32));
    tmp_25_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1028),64));
    tmp_26_fu_1401_p2 <= (r_V_15_fu_1395_p2 or p_Val2_5_reg_1877);
    tmp_27_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_9_fu_1322_p2),64));
    tmp_28_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1028),64));
    tmp_29_fu_1363_p2 <= (r_V_16_fu_1357_p2 or heap_tree_V_q0);
    tmp_30_fu_1170_p2 <= "1" when (rec_bits_V_fu_1166_p1 = ap_const_lv2_3) else "0";
    tmp_31_fu_1182_p2 <= (tmp_30_fu_1170_p2 and not_s_fu_1176_p2);
    tmp_32_fu_1460_p2 <= "1" when (BB_V_fu_1420_p4 = ap_const_lv16_0) else "0";
    tmp_34_cast_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1024),32));
    tmp_34_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_fu_1202_p4),64));
    tmp_35_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phitmp1_fu_1228_p4),16));
    tmp_36_fu_1256_p2 <= (tmp_71_fu_1252_p1 xor ap_const_lv4_F);
    tmp_37_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1028),64));
    tmp_38_fu_1713_p3 <= addr_HTA_V_3_reg_2127(15 downto 15);
    tmp_39_fu_1313_p2 <= "1" when (tmp_70_reg_1944 = ap_const_lv2_3) else "0";
    tmp_40_fu_1470_p2 <= "1" when (CC_V_fu_1430_p4 = ap_const_lv16_0) else "0";
    tmp_41_fu_1476_p2 <= "1" when (DD_V_fu_1440_p4 = ap_const_lv16_0) else "0";
    tmp_42_fu_1508_p2 <= std_logic_vector(unsigned(tmp2_cast_fu_1495_p1) + unsigned(tmp3_cast_fu_1504_p1));
    tmp_43_fu_1514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_1508_p2),64));
    tmp_44_fu_1519_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(heap_tree_V_q0));
    tmp_45_fu_1525_p2 <= (tmp_44_reg_2050 and p_Val2_11_reg_2042);
    tmp_46_fu_1548_p2 <= "1" when (AA_V_1_fu_1534_p1 = ap_const_lv16_0) else "0";
    tmp_47_fu_1558_p2 <= "1" when (BB_V_1_fu_1538_p4 = ap_const_lv16_0) else "0";
    tmp_48_fu_1568_p2 <= std_logic_vector(unsigned(p_0102_0_i_cast_fu_1564_p1) + unsigned(p_061_0_i_cast_reg_2069));
    tmp_49_fu_1573_p2 <= "1" when (tmp0_V_6_reg_1992 = ap_const_lv64_0) else "0";
    tmp_4_fu_1071_p2 <= "1" when (alloc_cmd_read_reg_1842 = ap_const_lv8_2) else "0";
    tmp_50_fu_1578_p2 <= "1" when (p_Val2_11_reg_2042 = tmp_45_reg_2055) else "0";
    tmp_51_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tree_offset_V_fu_1599_p2),64));
    tmp_52_fu_1623_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_75_fu_1613_p1));
    tmp_53_fu_1648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_13_fu_1641_p3),32));
    tmp_55_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cond_reg_2112),64));
    tmp_59_fu_1720_p2 <= std_logic_vector(shift_left(unsigned(addr_HTA_V_3_reg_2127),to_integer(unsigned('0' & ap_const_lv16_1(16-1 downto 0)))));
    tmp_60_fu_1739_p1 <= layer0_V_reg_491(4 - 1 downto 0);
    tmp_61_fu_1318_p1 <= layer0_V_reg_491(4 - 1 downto 0);
    tmp_63_fu_1770_p1 <= maintain_mask_V_q0(32 - 1 downto 0);
    tmp_65_cast_fu_1595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_1568_p2),13));
    tmp_65_fu_1349_p1 <= maintain_mask_V_q0(32 - 1 downto 0);
    tmp_6_fu_1080_p2 <= "1" when (alloc_cmd_read_reg_1842 = ap_const_lv8_3) else "0";
    tmp_70_fu_1248_p1 <= p_Val2_12_reg_579(2 - 1 downto 0);
    tmp_71_fu_1252_p1 <= p_Val2_12_reg_579(4 - 1 downto 0);
    tmp_75_fu_1613_p1 <= group_tree_V_q0(2 - 1 downto 0);
    tmp_76_fu_1657_p1 <= mark_mask_V_q0(2 - 1 downto 0);
    tmp_8_cast_fu_1725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_1720_p2),32));
    tmp_9_fu_1450_p2 <= "1" when (AA_V_fu_1416_p1 = ap_const_lv16_0) else "0";
    tmp_fu_1056_p2 <= "1" when (size_V_reg_1848 = ap_const_lv16_1) else "0";
    tmp_size_V_fu_1040_p2 <= std_logic_vector(signed(ap_const_lv16_FFFF) + signed(size_V_fu_1036_p1));
    tree_offset_V_cast_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tree_offset_V_reg_2086),16));
    tree_offset_V_fu_1599_p2 <= std_logic_vector(unsigned(r_V_12_fu_1588_p3) + unsigned(tmp_65_cast_fu_1595_p1));
end behav;
