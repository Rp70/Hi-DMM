-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Ext_KWTA16k_mark_ibs_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Ext_KWTA16k_mark_ibs_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1100001111001101", 1 => "0011110000110010", 2 => "1100000011000101", 
    3 => "0000001100001001", 4 => "0000110000010010", 5 => "0011000000100010", 
    6 => "1100000001000101", 7 => "0000000010000101", 8 => "0000000100001001", 
    9 => "0000001000001001", 10 => "0000010000010010", 11 => "0000100000010010", 
    12 => "0001000000100010", 13 => "0010000000100010", 14 => "0100000001000101", 
    15 => "1000000001000101", 16 to 17=> "0000000010000101", 18 to 19=> "0000000100001001", 
    20 to 21=> "0000001000001001", 22 to 23=> "0000010000010010", 24 to 25=> "0000100000010010", 
    26 to 27=> "0001000000100010", 28 to 29=> "0010000000100010", 30 to 31=> "0100000001000101", 
    32 to 33=> "1000000001000101", 34 to 37=> "0000000010000101", 38 to 41=> "0000000100001001", 
    42 to 45=> "0000001000001001", 46 to 49=> "0000010000010010", 50 to 53=> "0000100000010010", 
    54 to 57=> "0001000000100010", 58 to 61=> "0010000000100010", 62 => "1100001111001101", 
    63 => "0011110000110010", 64 => "1100000011000100", 65 => "0000001100001000", 
    66 => "0000110000010000", 67 => "0011000000100000", 68 => "1100000001000000", 
    69 => "0000000010000000", 70 => "0000000100000000", 71 => "0000001000000000", 
    72 => "0000010000000000", 73 => "0000100000000000", 74 => "0001000000000000", 
    75 => "0010000000000000", 76 => "0100000000000000", 77 => "1000000000000000", 
    78 to 127=> "0000000000000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Ext_KWTA16k_mark_ibs is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Ext_KWTA16k_mark_ibs is
    component Ext_KWTA16k_mark_ibs_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Ext_KWTA16k_mark_ibs_rom_U :  component Ext_KWTA16k_mark_ibs_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


