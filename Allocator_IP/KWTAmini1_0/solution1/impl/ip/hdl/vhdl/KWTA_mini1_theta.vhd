-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity KWTA_mini1_theta is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    alloc_size : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_size_ap_vld : IN STD_LOGIC;
    alloc_size_ap_ack : OUT STD_LOGIC;
    alloc_free_target : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_free_target_ap_vld : IN STD_LOGIC;
    alloc_free_target_ap_ack : OUT STD_LOGIC;
    alloc_addr : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_addr_ap_vld : OUT STD_LOGIC;
    alloc_addr_ap_ack : IN STD_LOGIC;
    alloc_cmd : IN STD_LOGIC_VECTOR (7 downto 0);
    alloc_cmd_ap_vld : IN STD_LOGIC;
    alloc_cmd_ap_ack : OUT STD_LOGIC );
end;


architecture behav of KWTA_mini1_theta is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "KWTA_mini1_theta,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.739500,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=510,HLS_SYN_LUT=1438,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv16_4000 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv16_2000 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv16_1000 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv16_800 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv16_400 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv16_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv16_40 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv16_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv16_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal top_heap_V : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    signal heap_tree_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal heap_tree_V_ce0 : STD_LOGIC;
    signal heap_tree_V_we0 : STD_LOGIC;
    signal heap_tree_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal heap_tree_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal alloc_size_blk_n : STD_LOGIC;
    signal alloc_free_target_blk_n : STD_LOGIC;
    signal alloc_addr_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_3_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal alloc_cmd_blk_n : STD_LOGIC;
    signal alloc_cmd_read_reg_1135 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal alloc_size_read_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal alloc_free_target_re_reg_1146 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_alloc_addr_ap_ack : STD_LOGIC;
    signal ap_predicate_op33_write_state2 : BOOLEAN;
    signal ap_predicate_op53_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal p_Val2_2_reg_1156 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_1162 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_786_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_25_reg_1166 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_1171 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_cond_reg_1181 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_fu_842_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_not_reg_1185 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0167_0_i1_cast_fu_906_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0167_0_i1_cast_reg_1205 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_0252_0_i1_cast_fu_916_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0252_0_i1_cast_reg_1213 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_13_fu_958_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_reg_1224 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_14_fu_964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_reg_1230 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_4_reg_1240 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal p_not1_fu_969_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_not1_reg_1246 : STD_LOGIC_VECTOR (63 downto 0);
    signal DD_V_1_fu_1003_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal DD_V_1_reg_1260 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_0167_0_i_cast_fu_1019_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0167_0_i_cast_reg_1267 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0252_0_i_cast_fu_1029_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0252_0_i_cast_reg_1275 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_1283 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1071_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_reg_1287 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_20_fu_1088_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_20_reg_1292 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal AA_V_fu_866_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal BB_V_fu_870_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0248_0_i1_reg_401 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal CC_V_fu_880_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0244_0_i1_reg_458 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal DD_V_fu_890_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0167_0_i_phi_fu_534_p34 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_15_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal AA_V_1_fu_979_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0252_0_i_phi_fu_590_p34 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal BB_V_1_fu_983_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0248_0_i_reg_643 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal CC_V_1_fu_993_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_p_0244_0_i_phi_fu_719_p34 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal p_Result_1_fu_807_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_4_fu_1120_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1094_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_alloc_addr_ap_ack : STD_LOGIC := '0';
    signal p_Result_s_fu_851_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_3_fu_1101_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_2_fu_789_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_assign_1_fu_803_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_829_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_assign_fu_848_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_862_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0244_0_i1_cast8_fu_932_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_fu_940_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0244_0_i1_cast_fu_936_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp3_fu_949_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_cast_fu_945_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_cast_fu_954_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_fu_975_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0244_0_i_cast7_fu_1045_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp5_fu_1053_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0244_0_i_cast_fu_1049_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp6_fu_1062_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp5_cast_fu_1058_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_cast_fu_1067_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_cast_fu_1084_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_fu_1077_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_assign_2_fu_1098_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_assign_3_fu_1117_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_condition_910 : BOOLEAN;
    signal ap_condition_395 : BOOLEAN;
    signal ap_condition_746 : BOOLEAN;
    signal ap_condition_579 : BOOLEAN;
    signal ap_condition_495 : BOOLEAN;
    signal ap_condition_829 : BOOLEAN;

    component KWTA_mini1_theta_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    heap_tree_V_U : component KWTA_mini1_theta_bkb
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => heap_tree_V_address0,
        ce0 => heap_tree_V_ce0,
        we0 => heap_tree_V_we0,
        d0 => heap_tree_V_d0,
        q0 => heap_tree_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_alloc_addr_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)) or ((ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io)) or ((ap_predicate_op33_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io)))) then 
                    ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = alloc_addr_ap_ack)) or ((ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = alloc_addr_ap_ack)) or ((ap_predicate_op33_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = alloc_addr_ap_ack)))) then 
                    ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    p_0244_0_i1_reg_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((tmp_10_fu_926_p2 = ap_const_lv1_1)) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_0;
                elsif ((ap_const_boolean_1 = ap_condition_579)) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_10;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_11;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_12;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_13;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_14;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_15;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_16;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_17;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_18;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_19;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_1A;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_1B;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_1C;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_1D;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_1E;
                elsif (((tmp_10_fu_926_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = DD_V_fu_890_p4))) then 
                    p_0244_0_i1_reg_458 <= ap_const_lv5_1F;
                end if;
            end if; 
        end if;
    end process;

    p_0248_0_i1_reg_401_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((tmp_s_fu_920_p2 = ap_const_lv1_1)) then 
                    p_0248_0_i1_reg_401(0) <= '0';
                    p_0248_0_i1_reg_401(1) <= '0';
                    p_0248_0_i1_reg_401(2) <= '0';
                    p_0248_0_i1_reg_401(3) <= '0';
                    p_0248_0_i1_reg_401(5) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_495)) then 
                    p_0248_0_i1_reg_401(0) <= '0';
                    p_0248_0_i1_reg_401(1) <= '0';
                    p_0248_0_i1_reg_401(2) <= '0';
                    p_0248_0_i1_reg_401(3) <= '0';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '1';
                    p_0248_0_i1_reg_401(1) <= '0';
                    p_0248_0_i1_reg_401(2) <= '0';
                    p_0248_0_i1_reg_401(3) <= '0';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '0';
                    p_0248_0_i1_reg_401(1) <= '1';
                    p_0248_0_i1_reg_401(2) <= '0';
                    p_0248_0_i1_reg_401(3) <= '0';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '1';
                    p_0248_0_i1_reg_401(1) <= '1';
                    p_0248_0_i1_reg_401(2) <= '0';
                    p_0248_0_i1_reg_401(3) <= '0';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '0';
                    p_0248_0_i1_reg_401(1) <= '0';
                    p_0248_0_i1_reg_401(2) <= '1';
                    p_0248_0_i1_reg_401(3) <= '0';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '1';
                    p_0248_0_i1_reg_401(1) <= '0';
                    p_0248_0_i1_reg_401(2) <= '1';
                    p_0248_0_i1_reg_401(3) <= '0';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '0';
                    p_0248_0_i1_reg_401(1) <= '1';
                    p_0248_0_i1_reg_401(2) <= '1';
                    p_0248_0_i1_reg_401(3) <= '0';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '1';
                    p_0248_0_i1_reg_401(1) <= '1';
                    p_0248_0_i1_reg_401(2) <= '1';
                    p_0248_0_i1_reg_401(3) <= '0';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '0';
                    p_0248_0_i1_reg_401(1) <= '0';
                    p_0248_0_i1_reg_401(2) <= '0';
                    p_0248_0_i1_reg_401(3) <= '1';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '1';
                    p_0248_0_i1_reg_401(1) <= '0';
                    p_0248_0_i1_reg_401(2) <= '0';
                    p_0248_0_i1_reg_401(3) <= '1';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '0';
                    p_0248_0_i1_reg_401(1) <= '1';
                    p_0248_0_i1_reg_401(2) <= '0';
                    p_0248_0_i1_reg_401(3) <= '1';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '1';
                    p_0248_0_i1_reg_401(1) <= '1';
                    p_0248_0_i1_reg_401(2) <= '0';
                    p_0248_0_i1_reg_401(3) <= '1';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '0';
                    p_0248_0_i1_reg_401(1) <= '0';
                    p_0248_0_i1_reg_401(2) <= '1';
                    p_0248_0_i1_reg_401(3) <= '1';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '1';
                    p_0248_0_i1_reg_401(1) <= '0';
                    p_0248_0_i1_reg_401(2) <= '1';
                    p_0248_0_i1_reg_401(3) <= '1';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '0';
                    p_0248_0_i1_reg_401(1) <= '1';
                    p_0248_0_i1_reg_401(2) <= '1';
                    p_0248_0_i1_reg_401(3) <= '1';
                    p_0248_0_i1_reg_401(5) <= '1';
                elsif (((tmp_s_fu_920_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = CC_V_fu_880_p4))) then 
                    p_0248_0_i1_reg_401(0) <= '1';
                    p_0248_0_i1_reg_401(1) <= '1';
                    p_0248_0_i1_reg_401(2) <= '1';
                    p_0248_0_i1_reg_401(3) <= '1';
                    p_0248_0_i1_reg_401(5) <= '1';
                end if;
            end if; 
        end if;
    end process;

    p_0248_0_i_reg_643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                if ((tmp_17_fu_1033_p2 = ap_const_lv1_1)) then 
                    p_0248_0_i_reg_643(0) <= '0';
                    p_0248_0_i_reg_643(1) <= '0';
                    p_0248_0_i_reg_643(2) <= '0';
                    p_0248_0_i_reg_643(3) <= '0';
                    p_0248_0_i_reg_643(5) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_829)) then 
                    p_0248_0_i_reg_643(0) <= '0';
                    p_0248_0_i_reg_643(1) <= '0';
                    p_0248_0_i_reg_643(2) <= '0';
                    p_0248_0_i_reg_643(3) <= '0';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '1';
                    p_0248_0_i_reg_643(1) <= '0';
                    p_0248_0_i_reg_643(2) <= '0';
                    p_0248_0_i_reg_643(3) <= '0';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '0';
                    p_0248_0_i_reg_643(1) <= '1';
                    p_0248_0_i_reg_643(2) <= '0';
                    p_0248_0_i_reg_643(3) <= '0';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '1';
                    p_0248_0_i_reg_643(1) <= '1';
                    p_0248_0_i_reg_643(2) <= '0';
                    p_0248_0_i_reg_643(3) <= '0';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '0';
                    p_0248_0_i_reg_643(1) <= '0';
                    p_0248_0_i_reg_643(2) <= '1';
                    p_0248_0_i_reg_643(3) <= '0';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '1';
                    p_0248_0_i_reg_643(1) <= '0';
                    p_0248_0_i_reg_643(2) <= '1';
                    p_0248_0_i_reg_643(3) <= '0';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '0';
                    p_0248_0_i_reg_643(1) <= '1';
                    p_0248_0_i_reg_643(2) <= '1';
                    p_0248_0_i_reg_643(3) <= '0';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '1';
                    p_0248_0_i_reg_643(1) <= '1';
                    p_0248_0_i_reg_643(2) <= '1';
                    p_0248_0_i_reg_643(3) <= '0';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '0';
                    p_0248_0_i_reg_643(1) <= '0';
                    p_0248_0_i_reg_643(2) <= '0';
                    p_0248_0_i_reg_643(3) <= '1';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '1';
                    p_0248_0_i_reg_643(1) <= '0';
                    p_0248_0_i_reg_643(2) <= '0';
                    p_0248_0_i_reg_643(3) <= '1';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '0';
                    p_0248_0_i_reg_643(1) <= '1';
                    p_0248_0_i_reg_643(2) <= '0';
                    p_0248_0_i_reg_643(3) <= '1';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '1';
                    p_0248_0_i_reg_643(1) <= '1';
                    p_0248_0_i_reg_643(2) <= '0';
                    p_0248_0_i_reg_643(3) <= '1';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '0';
                    p_0248_0_i_reg_643(1) <= '0';
                    p_0248_0_i_reg_643(2) <= '1';
                    p_0248_0_i_reg_643(3) <= '1';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '1';
                    p_0248_0_i_reg_643(1) <= '0';
                    p_0248_0_i_reg_643(2) <= '1';
                    p_0248_0_i_reg_643(3) <= '1';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '0';
                    p_0248_0_i_reg_643(1) <= '1';
                    p_0248_0_i_reg_643(2) <= '1';
                    p_0248_0_i_reg_643(3) <= '1';
                    p_0248_0_i_reg_643(5) <= '1';
                elsif (((tmp_17_fu_1033_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = CC_V_1_fu_993_p4))) then 
                    p_0248_0_i_reg_643(0) <= '1';
                    p_0248_0_i_reg_643(1) <= '1';
                    p_0248_0_i_reg_643(2) <= '1';
                    p_0248_0_i_reg_643(3) <= '1';
                    p_0248_0_i_reg_643(5) <= '1';
                end if;
            end if; 
        end if;
    end process;

    top_heap_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_1181 = ap_const_lv1_0) and (tmp_23_fu_1111_p2 = ap_const_lv1_1) and (tmp_reg_1152 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                top_heap_V <= p_Result_4_fu_1120_p4;
            elsif (((tmp_3_fu_781_p2 = ap_const_lv1_1) and (tmp_fu_772_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then 
                top_heap_V <= p_Result_1_fu_807_p4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                DD_V_1_reg_1260 <= p_Val2_3_fu_975_p2(63 downto 48);
                    p_0167_0_i_cast_reg_1267(3 downto 0) <= p_0167_0_i_cast_fu_1019_p1(3 downto 0);
                    p_0252_0_i_cast_reg_1275(4 downto 0) <= p_0252_0_i_cast_fu_1029_p1(4 downto 0);
                tmp_18_reg_1283 <= tmp_18_fu_1039_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                alloc_cmd_read_reg_1135 <= alloc_cmd;
                alloc_free_target_re_reg_1146 <= alloc_free_target;
                alloc_size_read_reg_1141 <= alloc_size;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_772_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                or_cond_reg_1181 <= or_cond_fu_836_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    p_0167_0_i1_cast_reg_1205(3 downto 0) <= p_0167_0_i1_cast_fu_906_p1(3 downto 0);
                    p_0252_0_i1_cast_reg_1213(4 downto 0) <= p_0252_0_i1_cast_fu_916_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                p_Val2_2_reg_1156 <= top_heap_V;
                tmp_reg_1152 <= tmp_fu_772_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                p_Val2_4_reg_1240 <= heap_tree_V_q0;
                p_not1_reg_1246 <= p_not1_fu_969_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_fu_836_p2 = ap_const_lv1_0) and (tmp_fu_772_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                p_not_reg_1185 <= p_not_fu_842_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tmp_13_reg_1224 <= tmp_13_fu_958_p2;
                    tmp_14_reg_1230(7 downto 0) <= tmp_14_fu_964_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                tmp_19_reg_1287 <= tmp_19_fu_1071_p2;
                tmp_20_reg_1292 <= tmp_20_fu_1088_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_fu_781_p2 = ap_const_lv1_1) and (tmp_fu_772_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                tmp_25_reg_1166 <= tmp_25_fu_786_p1;
                    tmp_6_reg_1171(9 downto 0) <= tmp_6_fu_798_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_772_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                tmp_3_reg_1162 <= tmp_3_fu_781_p2;
            end if;
        end if;
    end process;
    tmp_6_reg_1171(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    p_0167_0_i1_cast_reg_1205(5 downto 4) <= "00";
    p_0252_0_i1_cast_reg_1213(6 downto 5) <= "00";
    tmp_14_reg_1230(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    p_0167_0_i_cast_reg_1267(5 downto 4) <= "00";
    p_0252_0_i_cast_reg_1275(6 downto 5) <= "00";
    p_0248_0_i1_reg_401(4) <= '0';
    p_0248_0_i_reg_643(4) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2, tmp_fu_772_p2, or_cond_fu_836_p2, ap_CS_fsm_state9, ap_sig_ioackin_alloc_addr_ap_ack, ap_block_state2_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((or_cond_fu_836_p2 = ap_const_lv1_1) and (tmp_fu_772_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((or_cond_fu_836_p2 = ap_const_lv1_0) and (tmp_fu_772_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((tmp_fu_772_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    AA_V_1_fu_979_p1 <= p_Val2_3_fu_975_p2(16 - 1 downto 0);
    AA_V_fu_866_p1 <= p_Val2_s_fu_862_p2(16 - 1 downto 0);
    BB_V_1_fu_983_p4 <= p_Val2_3_fu_975_p2(31 downto 16);
    BB_V_fu_870_p4 <= p_Val2_s_fu_862_p2(31 downto 16);
    CC_V_1_fu_993_p4 <= p_Val2_3_fu_975_p2(47 downto 32);
    CC_V_fu_880_p4 <= p_Val2_s_fu_862_p2(47 downto 32);
    DD_V_1_fu_1003_p4 <= p_Val2_3_fu_975_p2(63 downto 48);
    DD_V_fu_890_p4 <= p_Val2_s_fu_862_p2(63 downto 48);

    alloc_addr_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, ap_predicate_op33_write_state2, ap_predicate_op53_write_state2, tmp_22_fu_1094_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            alloc_addr <= tmp_22_fu_1094_p1;
        elsif ((((ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_predicate_op33_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            alloc_addr <= ap_const_lv32_FFFFFFFF;
        else 
            alloc_addr <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    alloc_addr_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, ap_predicate_op33_write_state2, ap_predicate_op53_write_state2, ap_reg_ioackin_alloc_addr_ap_ack)
    begin
        if ((((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_predicate_op33_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            alloc_addr_ap_vld <= ap_const_logic_1;
        else 
            alloc_addr_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    alloc_addr_blk_n_assign_proc : process(alloc_addr_ap_ack, ap_CS_fsm_state2, tmp_fu_772_p2, or_cond_fu_836_p2, ap_CS_fsm_state9, tmp_3_fu_781_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((tmp_3_fu_781_p2 = ap_const_lv1_0) and (tmp_fu_772_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_cond_fu_836_p2 = ap_const_lv1_1) and (tmp_fu_772_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            alloc_addr_blk_n <= alloc_addr_ap_ack;
        else 
            alloc_addr_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_cmd_ap_ack_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_cmd_ap_ack <= ap_const_logic_1;
        else 
            alloc_cmd_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_cmd_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_cmd_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            alloc_cmd_blk_n <= alloc_cmd_ap_vld;
        else 
            alloc_cmd_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_free_target_ap_ack_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_free_target_ap_ack <= ap_const_logic_1;
        else 
            alloc_free_target_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_free_target_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_free_target_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            alloc_free_target_blk_n <= alloc_free_target_ap_vld;
        else 
            alloc_free_target_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_size_ap_ack_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            alloc_size_ap_ack <= ap_const_logic_1;
        else 
            alloc_size_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_size_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, alloc_size_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            alloc_size_blk_n <= alloc_size_ap_vld;
        else 
            alloc_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(ap_sig_ioackin_alloc_addr_ap_ack, ap_predicate_op33_write_state2, ap_predicate_op53_write_state2)
    begin
                ap_block_state2_io <= (((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1)) or ((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_predicate_op33_write_state2 = ap_const_boolean_1)));
    end process;


    ap_condition_395_assign_proc : process(tmp_8_fu_910_p2, BB_V_fu_870_p4)
    begin
                ap_condition_395 <= (not((ap_const_lv16_2 = BB_V_fu_870_p4)) and not((ap_const_lv16_4 = BB_V_fu_870_p4)) and not((ap_const_lv16_8 = BB_V_fu_870_p4)) and not((ap_const_lv16_10 = BB_V_fu_870_p4)) and not((ap_const_lv16_20 = BB_V_fu_870_p4)) and not((ap_const_lv16_40 = BB_V_fu_870_p4)) and not((ap_const_lv16_80 = BB_V_fu_870_p4)) and not((ap_const_lv16_100 = BB_V_fu_870_p4)) and not((ap_const_lv16_200 = BB_V_fu_870_p4)) and not((ap_const_lv16_400 = BB_V_fu_870_p4)) and not((ap_const_lv16_800 = BB_V_fu_870_p4)) and not((ap_const_lv16_1000 = BB_V_fu_870_p4)) and not((ap_const_lv16_2000 = BB_V_fu_870_p4)) and not((ap_const_lv16_4000 = BB_V_fu_870_p4)) and not((ap_const_lv16_8000 = BB_V_fu_870_p4)) and (tmp_8_fu_910_p2 = ap_const_lv1_0));
    end process;


    ap_condition_495_assign_proc : process(tmp_s_fu_920_p2, CC_V_fu_880_p4)
    begin
                ap_condition_495 <= (not((ap_const_lv16_2 = CC_V_fu_880_p4)) and not((ap_const_lv16_4 = CC_V_fu_880_p4)) and not((ap_const_lv16_8 = CC_V_fu_880_p4)) and not((ap_const_lv16_10 = CC_V_fu_880_p4)) and not((ap_const_lv16_20 = CC_V_fu_880_p4)) and not((ap_const_lv16_40 = CC_V_fu_880_p4)) and not((ap_const_lv16_80 = CC_V_fu_880_p4)) and not((ap_const_lv16_100 = CC_V_fu_880_p4)) and not((ap_const_lv16_200 = CC_V_fu_880_p4)) and not((ap_const_lv16_400 = CC_V_fu_880_p4)) and not((ap_const_lv16_800 = CC_V_fu_880_p4)) and not((ap_const_lv16_1000 = CC_V_fu_880_p4)) and not((ap_const_lv16_2000 = CC_V_fu_880_p4)) and not((ap_const_lv16_4000 = CC_V_fu_880_p4)) and not((ap_const_lv16_8000 = CC_V_fu_880_p4)) and (tmp_s_fu_920_p2 = ap_const_lv1_0));
    end process;


    ap_condition_579_assign_proc : process(tmp_10_fu_926_p2, DD_V_fu_890_p4)
    begin
                ap_condition_579 <= (not((ap_const_lv16_2 = DD_V_fu_890_p4)) and not((ap_const_lv16_4 = DD_V_fu_890_p4)) and not((ap_const_lv16_8 = DD_V_fu_890_p4)) and not((ap_const_lv16_10 = DD_V_fu_890_p4)) and not((ap_const_lv16_20 = DD_V_fu_890_p4)) and not((ap_const_lv16_40 = DD_V_fu_890_p4)) and not((ap_const_lv16_80 = DD_V_fu_890_p4)) and not((ap_const_lv16_100 = DD_V_fu_890_p4)) and not((ap_const_lv16_200 = DD_V_fu_890_p4)) and not((ap_const_lv16_400 = DD_V_fu_890_p4)) and not((ap_const_lv16_800 = DD_V_fu_890_p4)) and not((ap_const_lv16_1000 = DD_V_fu_890_p4)) and not((ap_const_lv16_2000 = DD_V_fu_890_p4)) and not((ap_const_lv16_4000 = DD_V_fu_890_p4)) and not((ap_const_lv16_8000 = DD_V_fu_890_p4)) and (tmp_10_fu_926_p2 = ap_const_lv1_0));
    end process;


    ap_condition_746_assign_proc : process(tmp_16_fu_1023_p2, BB_V_1_fu_983_p4)
    begin
                ap_condition_746 <= (not((ap_const_lv16_2 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_4 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_8 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_10 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_20 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_40 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_80 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_100 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_200 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_400 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_800 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_1000 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_2000 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_4000 = BB_V_1_fu_983_p4)) and not((ap_const_lv16_8000 = BB_V_1_fu_983_p4)) and (tmp_16_fu_1023_p2 = ap_const_lv1_0));
    end process;


    ap_condition_829_assign_proc : process(tmp_17_fu_1033_p2, CC_V_1_fu_993_p4)
    begin
                ap_condition_829 <= (not((ap_const_lv16_2 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_4 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_8 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_10 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_20 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_40 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_80 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_100 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_200 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_400 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_800 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_1000 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_2000 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_4000 = CC_V_1_fu_993_p4)) and not((ap_const_lv16_8000 = CC_V_1_fu_993_p4)) and (tmp_17_fu_1033_p2 = ap_const_lv1_0));
    end process;


    ap_condition_910_assign_proc : process(DD_V_1_reg_1260, tmp_18_reg_1283)
    begin
                ap_condition_910 <= (not((ap_const_lv16_2 = DD_V_1_reg_1260)) and not((ap_const_lv16_4 = DD_V_1_reg_1260)) and not((ap_const_lv16_8 = DD_V_1_reg_1260)) and not((ap_const_lv16_10 = DD_V_1_reg_1260)) and not((ap_const_lv16_20 = DD_V_1_reg_1260)) and not((ap_const_lv16_40 = DD_V_1_reg_1260)) and not((ap_const_lv16_80 = DD_V_1_reg_1260)) and not((ap_const_lv16_100 = DD_V_1_reg_1260)) and not((ap_const_lv16_200 = DD_V_1_reg_1260)) and not((ap_const_lv16_400 = DD_V_1_reg_1260)) and not((ap_const_lv16_800 = DD_V_1_reg_1260)) and not((ap_const_lv16_1000 = DD_V_1_reg_1260)) and not((ap_const_lv16_2000 = DD_V_1_reg_1260)) and not((ap_const_lv16_4000 = DD_V_1_reg_1260)) and not((ap_const_lv16_8000 = DD_V_1_reg_1260)) and (tmp_18_reg_1283 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0167_0_i1_phi_fu_292_p34_assign_proc : process(ap_CS_fsm_state4, tmp_5_fu_900_p2, AA_V_fu_866_p1)
    begin
        if ((((tmp_5_fu_900_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((ap_const_lv16_2 = AA_V_fu_866_p1)) and not((ap_const_lv16_4 = AA_V_fu_866_p1)) and not((ap_const_lv16_8 = AA_V_fu_866_p1)) and not((ap_const_lv16_10 = AA_V_fu_866_p1)) and not((ap_const_lv16_20 = AA_V_fu_866_p1)) and not((ap_const_lv16_40 = AA_V_fu_866_p1)) and not((ap_const_lv16_80 = AA_V_fu_866_p1)) and not((ap_const_lv16_100 = AA_V_fu_866_p1)) and not((ap_const_lv16_200 = AA_V_fu_866_p1)) and not((ap_const_lv16_400 = AA_V_fu_866_p1)) and not((ap_const_lv16_800 = AA_V_fu_866_p1)) and not((ap_const_lv16_1000 = AA_V_fu_866_p1)) and not((ap_const_lv16_2000 = AA_V_fu_866_p1)) and not((ap_const_lv16_4000 = AA_V_fu_866_p1)) and not((ap_const_lv16_8000 = AA_V_fu_866_p1)) and (tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_0;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_2 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_1;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_4 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_2;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_8 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_3;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_10 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_4;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_20 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_5;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_40 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_6;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_80 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_7;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_100 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_8;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_200 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_9;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_400 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_A;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_800 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_B;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_1000 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_C;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_2000 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_D;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_4000 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_E;
        elsif (((tmp_5_fu_900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv16_8000 = AA_V_fu_866_p1))) then 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= ap_const_lv4_F;
        else 
            ap_phi_mux_p_0167_0_i1_phi_fu_292_p34 <= "XXXX";
        end if; 
    end process;


    ap_phi_mux_p_0167_0_i_phi_fu_534_p34_assign_proc : process(ap_CS_fsm_state7, tmp_15_fu_1013_p2, AA_V_1_fu_979_p1)
    begin
        if ((((tmp_15_fu_1013_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((ap_const_lv16_2 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_4 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_8 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_10 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_20 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_40 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_80 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_100 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_200 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_400 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_800 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_1000 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_2000 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_4000 = AA_V_1_fu_979_p1)) and not((ap_const_lv16_8000 = AA_V_1_fu_979_p1)) and (tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_0;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_1;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_2;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_3;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_4;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_5;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_6;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_7;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_8;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_9;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_A;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_B;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_C;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = AA_V_1_fu_979_p1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_D;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv16_4000 = AA_V_1_fu_979_p1))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_E;
        elsif (((tmp_15_fu_1013_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv16_8000 = AA_V_1_fu_979_p1))) then 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= ap_const_lv4_F;
        else 
            ap_phi_mux_p_0167_0_i_phi_fu_534_p34 <= "XXXX";
        end if; 
    end process;


    ap_phi_mux_p_0244_0_i_phi_fu_719_p34_assign_proc : process(DD_V_1_reg_1260, tmp_18_reg_1283, ap_CS_fsm_state8, ap_condition_910)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
            if ((tmp_18_reg_1283 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_0;
            elsif ((ap_const_boolean_1 = ap_condition_910)) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_10;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_2 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_11;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_4 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_12;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_8 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_13;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_10 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_14;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_20 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_15;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_40 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_16;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_80 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_17;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_100 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_18;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_200 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_19;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_400 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_1A;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_800 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_1B;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_1000 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_1C;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_2000 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_1D;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_4000 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_1E;
            elsif (((tmp_18_reg_1283 = ap_const_lv1_0) and (ap_const_lv16_8000 = DD_V_1_reg_1260))) then 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= ap_const_lv5_1F;
            else 
                ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= "XXXXX";
            end if;
        else 
            ap_phi_mux_p_0244_0_i_phi_fu_719_p34 <= "XXXXX";
        end if; 
    end process;


    ap_phi_mux_p_0252_0_i1_phi_fu_348_p34_assign_proc : process(ap_CS_fsm_state4, tmp_8_fu_910_p2, BB_V_fu_870_p4, ap_condition_395)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
            if ((tmp_8_fu_910_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_0;
            elsif ((ap_const_boolean_1 = ap_condition_395)) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_10;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_11;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_12;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_13;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_14;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_15;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_16;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_17;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_18;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_19;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_1A;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_1B;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_1C;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_1D;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_1E;
            elsif (((tmp_8_fu_910_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = BB_V_fu_870_p4))) then 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= ap_const_lv5_1F;
            else 
                ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= "XXXXX";
            end if;
        else 
            ap_phi_mux_p_0252_0_i1_phi_fu_348_p34 <= "XXXXX";
        end if; 
    end process;


    ap_phi_mux_p_0252_0_i_phi_fu_590_p34_assign_proc : process(ap_CS_fsm_state7, tmp_16_fu_1023_p2, BB_V_1_fu_983_p4, ap_condition_746)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
            if ((tmp_16_fu_1023_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_0;
            elsif ((ap_const_boolean_1 = ap_condition_746)) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_10;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_2 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_11;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_4 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_12;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_8 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_13;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_10 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_14;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_20 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_15;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_40 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_16;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_80 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_17;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_100 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_18;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_200 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_19;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_400 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_1A;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_800 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_1B;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_1000 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_1C;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_2000 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_1D;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_4000 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_1E;
            elsif (((tmp_16_fu_1023_p2 = ap_const_lv1_0) and (ap_const_lv16_8000 = BB_V_1_fu_983_p4))) then 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= ap_const_lv5_1F;
            else 
                ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= "XXXXX";
            end if;
        else 
            ap_phi_mux_p_0252_0_i_phi_fu_590_p34 <= "XXXXX";
        end if; 
    end process;


    ap_predicate_op33_write_state2_assign_proc : process(tmp_fu_772_p2, tmp_3_fu_781_p2)
    begin
                ap_predicate_op33_write_state2 <= ((tmp_3_fu_781_p2 = ap_const_lv1_0) and (tmp_fu_772_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op53_write_state2_assign_proc : process(tmp_fu_772_p2, or_cond_fu_836_p2)
    begin
                ap_predicate_op53_write_state2 <= ((or_cond_fu_836_p2 = ap_const_lv1_1) and (tmp_fu_772_p2 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_alloc_addr_ap_ack_assign_proc : process(alloc_addr_ap_ack, ap_reg_ioackin_alloc_addr_ap_ack)
    begin
        if ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0)) then 
            ap_sig_ioackin_alloc_addr_ap_ack <= alloc_addr_ap_ack;
        else 
            ap_sig_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
        end if; 
    end process;


    heap_tree_V_address0_assign_proc : process(ap_CS_fsm_state2, tmp_6_fu_798_p1, tmp_6_reg_1171, ap_CS_fsm_state5, tmp_14_fu_964_p1, tmp_14_reg_1230, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            heap_tree_V_address0 <= tmp_14_reg_1230(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            heap_tree_V_address0 <= tmp_14_fu_964_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            heap_tree_V_address0 <= tmp_6_reg_1171(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            heap_tree_V_address0 <= tmp_6_fu_798_p1(6 - 1 downto 0);
        else 
            heap_tree_V_address0 <= "XXXXXX";
        end if; 
    end process;


    heap_tree_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_io, ap_CS_fsm_state5, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io)))) then 
            heap_tree_V_ce0 <= ap_const_logic_1;
        else 
            heap_tree_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    heap_tree_V_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10, p_Result_s_fu_851_p4, p_Result_3_fu_1101_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            heap_tree_V_d0 <= p_Result_3_fu_1101_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            heap_tree_V_d0 <= p_Result_s_fu_851_p4;
        else 
            heap_tree_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    heap_tree_V_we0_assign_proc : process(tmp_reg_1152, tmp_3_reg_1162, or_cond_reg_1181, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if ((((or_cond_reg_1181 = ap_const_lv1_0) and (tmp_reg_1152 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((tmp_3_reg_1162 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            heap_tree_V_we0 <= ap_const_logic_1;
        else 
            heap_tree_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_assign_1_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_fu_789_p4),32));
    i_assign_2_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_reg_1287),32));
    i_assign_3_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_1224),32));
    i_assign_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_reg_1166),32));
    or_cond_fu_836_p2 <= (tmp_2_fu_829_p3 or tmp_1_fu_823_p2);
    p_0167_0_i1_cast_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0167_0_i1_phi_fu_292_p34),6));
    p_0167_0_i_cast_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0167_0_i_phi_fu_534_p34),6));
        p_0244_0_i1_cast8_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0244_0_i1_reg_458),6));

    p_0244_0_i1_cast_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0244_0_i1_cast8_fu_932_p1),7));
        p_0244_0_i_cast7_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_p_0244_0_i_phi_fu_719_p34),6));

    p_0244_0_i_cast_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0244_0_i_cast7_fu_1045_p1),7));
    p_0252_0_i1_cast_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0252_0_i1_phi_fu_348_p34),7));
    p_0252_0_i_cast_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0252_0_i_phi_fu_590_p34),7));
    
    p_Result_1_fu_807_p4_proc : process(top_heap_V, i_assign_1_fu_803_p1)
    begin
        p_Result_1_fu_807_p4 <= top_heap_V;
        if to_integer(unsigned(i_assign_1_fu_803_p1)) >= top_heap_V'low and to_integer(unsigned(i_assign_1_fu_803_p1)) <= top_heap_V'high then
            p_Result_1_fu_807_p4(to_integer(unsigned(i_assign_1_fu_803_p1))) <= ap_const_lv1_1(0);
        end if;
    end process;

    p_Result_2_fu_789_p4 <= alloc_free_target_re_reg_1146(15 downto 6);
    
    p_Result_3_fu_1101_p4_proc : process(p_Val2_4_reg_1240, i_assign_2_fu_1098_p1)
    begin
        p_Result_3_fu_1101_p4 <= p_Val2_4_reg_1240;
        if to_integer(unsigned(i_assign_2_fu_1098_p1)) >= p_Val2_4_reg_1240'low and to_integer(unsigned(i_assign_2_fu_1098_p1)) <= p_Val2_4_reg_1240'high then
            p_Result_3_fu_1101_p4(to_integer(unsigned(i_assign_2_fu_1098_p1))) <= ap_const_lv1_0(0);
        end if;
    end process;

    
    p_Result_4_fu_1120_p4_proc : process(p_Val2_2_reg_1156, i_assign_3_fu_1117_p1)
    begin
        p_Result_4_fu_1120_p4 <= p_Val2_2_reg_1156;
        if to_integer(unsigned(i_assign_3_fu_1117_p1)) >= p_Val2_2_reg_1156'low and to_integer(unsigned(i_assign_3_fu_1117_p1)) <= p_Val2_2_reg_1156'high then
            p_Result_4_fu_1120_p4(to_integer(unsigned(i_assign_3_fu_1117_p1))) <= ap_const_lv1_0(0);
        end if;
    end process;

    
    p_Result_s_fu_851_p4_proc : process(heap_tree_V_q0, i_assign_fu_848_p1)
    begin
        p_Result_s_fu_851_p4 <= heap_tree_V_q0;
        if to_integer(unsigned(i_assign_fu_848_p1)) >= heap_tree_V_q0'low and to_integer(unsigned(i_assign_fu_848_p1)) <= heap_tree_V_q0'high then
            p_Result_s_fu_851_p4(to_integer(unsigned(i_assign_fu_848_p1))) <= ap_const_lv1_1(0);
        end if;
    end process;

    p_Val2_3_fu_975_p2 <= (p_not1_reg_1246 and p_Val2_4_reg_1240);
    p_Val2_s_fu_862_p2 <= (p_not_reg_1185 and p_Val2_2_reg_1156);
    p_not1_fu_969_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(heap_tree_V_q0));
    p_not_fu_842_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(top_heap_V));
    r_V_fu_1077_p3 <= (tmp_13_reg_1224 & ap_const_lv6_0);
    tmp2_cast_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_940_p2),8));
    tmp2_fu_940_p2 <= std_logic_vector(unsigned(p_0248_0_i1_reg_401) + unsigned(p_0167_0_i1_cast_reg_1205));
    tmp3_cast_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_949_p2),8));
    tmp3_fu_949_p2 <= std_logic_vector(unsigned(p_0244_0_i1_cast_fu_936_p1) + unsigned(p_0252_0_i1_cast_reg_1213));
    tmp5_cast_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp5_fu_1053_p2),8));
    tmp5_fu_1053_p2 <= std_logic_vector(unsigned(p_0248_0_i_reg_643) + unsigned(p_0167_0_i_cast_reg_1267));
    tmp6_cast_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp6_fu_1062_p2),8));
    tmp6_fu_1062_p2 <= std_logic_vector(unsigned(p_0244_0_i_cast_fu_1049_p1) + unsigned(p_0252_0_i_cast_reg_1275));
    tmp_10_fu_926_p2 <= "1" when (DD_V_fu_890_p4 = ap_const_lv16_0) else "0";
    tmp_13_fu_958_p2 <= std_logic_vector(unsigned(tmp2_cast_fu_945_p1) + unsigned(tmp3_cast_fu_954_p1));
    tmp_14_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_958_p2),64));
    tmp_15_fu_1013_p2 <= "1" when (AA_V_1_fu_979_p1 = ap_const_lv16_0) else "0";
    tmp_16_fu_1023_p2 <= "1" when (BB_V_1_fu_983_p4 = ap_const_lv16_0) else "0";
    tmp_17_fu_1033_p2 <= "1" when (CC_V_1_fu_993_p4 = ap_const_lv16_0) else "0";
    tmp_18_fu_1039_p2 <= "1" when (DD_V_1_fu_1003_p4 = ap_const_lv16_0) else "0";
    tmp_19_fu_1071_p2 <= std_logic_vector(unsigned(tmp5_cast_fu_1058_p1) + unsigned(tmp6_cast_fu_1067_p1));
    tmp_1_fu_823_p2 <= "1" when (top_heap_V = ap_const_lv64_0) else "0";
    tmp_20_fu_1088_p2 <= std_logic_vector(unsigned(tmp_25_cast_fu_1084_p1) + unsigned(r_V_fu_1077_p3));
    tmp_22_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_reg_1292),32));
    tmp_23_fu_1111_p2 <= "1" when (p_Result_3_fu_1101_p4 = ap_const_lv64_0) else "0";
    tmp_25_cast_fu_1084_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_1071_p2),14));
    tmp_25_fu_786_p1 <= alloc_free_target_re_reg_1146(6 - 1 downto 0);
    tmp_2_fu_829_p3 <= alloc_size_read_reg_1141(1 downto 1);
    tmp_3_fu_781_p2 <= "1" when (alloc_cmd_read_reg_1135 = ap_const_lv8_3) else "0";
    tmp_5_fu_900_p2 <= "1" when (AA_V_fu_866_p1 = ap_const_lv16_0) else "0";
    tmp_6_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_fu_789_p4),64));
    tmp_8_fu_910_p2 <= "1" when (BB_V_fu_870_p4 = ap_const_lv16_0) else "0";
    tmp_fu_772_p2 <= "1" when (alloc_cmd_read_reg_1135 = ap_const_lv8_2) else "0";
    tmp_s_fu_920_p2 <= "1" when (CC_V_fu_880_p4 = ap_const_lv16_0) else "0";
end behav;
