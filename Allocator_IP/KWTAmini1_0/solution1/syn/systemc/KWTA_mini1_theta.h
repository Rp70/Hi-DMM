// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KWTA_mini1_theta_HH_
#define _KWTA_mini1_theta_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KWTA_mini1_theta_bkb.h"

namespace ap_rtl {

struct KWTA_mini1_theta : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > alloc_size;
    sc_in< sc_logic > alloc_size_ap_vld;
    sc_out< sc_logic > alloc_size_ap_ack;
    sc_in< sc_lv<32> > alloc_free_target;
    sc_in< sc_logic > alloc_free_target_ap_vld;
    sc_out< sc_logic > alloc_free_target_ap_ack;
    sc_out< sc_lv<32> > alloc_addr;
    sc_out< sc_logic > alloc_addr_ap_vld;
    sc_in< sc_logic > alloc_addr_ap_ack;
    sc_in< sc_lv<8> > alloc_cmd;
    sc_in< sc_logic > alloc_cmd_ap_vld;
    sc_out< sc_logic > alloc_cmd_ap_ack;


    // Module declarations
    KWTA_mini1_theta(sc_module_name name);
    SC_HAS_PROCESS(KWTA_mini1_theta);

    ~KWTA_mini1_theta();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    KWTA_mini1_theta_bkb* heap_tree_V_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > top_heap_V;
    sc_signal< sc_lv<6> > heap_tree_V_address0;
    sc_signal< sc_logic > heap_tree_V_ce0;
    sc_signal< sc_logic > heap_tree_V_we0;
    sc_signal< sc_lv<64> > heap_tree_V_d0;
    sc_signal< sc_lv<64> > heap_tree_V_q0;
    sc_signal< sc_logic > alloc_size_blk_n;
    sc_signal< sc_logic > alloc_free_target_blk_n;
    sc_signal< sc_logic > alloc_addr_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_772_p2;
    sc_signal< sc_lv<1> > or_cond_fu_836_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > tmp_3_fu_781_p2;
    sc_signal< sc_logic > alloc_cmd_blk_n;
    sc_signal< sc_lv<8> > alloc_cmd_read_reg_1135;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > alloc_size_read_reg_1141;
    sc_signal< sc_lv<32> > alloc_free_target_re_reg_1146;
    sc_signal< sc_lv<1> > tmp_reg_1152;
    sc_signal< sc_logic > ap_sig_ioackin_alloc_addr_ap_ack;
    sc_signal< bool > ap_predicate_op33_write_state2;
    sc_signal< bool > ap_predicate_op53_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_lv<64> > p_Val2_2_reg_1156;
    sc_signal< sc_lv<1> > tmp_3_reg_1162;
    sc_signal< sc_lv<6> > tmp_25_fu_786_p1;
    sc_signal< sc_lv<6> > tmp_25_reg_1166;
    sc_signal< sc_lv<64> > tmp_6_fu_798_p1;
    sc_signal< sc_lv<64> > tmp_6_reg_1171;
    sc_signal< sc_lv<1> > or_cond_reg_1181;
    sc_signal< sc_lv<64> > p_not_fu_842_p2;
    sc_signal< sc_lv<64> > p_not_reg_1185;
    sc_signal< sc_lv<6> > p_0167_0_i1_cast_fu_906_p1;
    sc_signal< sc_lv<6> > p_0167_0_i1_cast_reg_1205;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<7> > p_0252_0_i1_cast_fu_916_p1;
    sc_signal< sc_lv<7> > p_0252_0_i1_cast_reg_1213;
    sc_signal< sc_lv<8> > tmp_13_fu_958_p2;
    sc_signal< sc_lv<8> > tmp_13_reg_1224;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_14_fu_964_p1;
    sc_signal< sc_lv<64> > tmp_14_reg_1230;
    sc_signal< sc_lv<64> > p_Val2_4_reg_1240;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > p_not1_fu_969_p2;
    sc_signal< sc_lv<64> > p_not1_reg_1246;
    sc_signal< sc_lv<16> > DD_V_1_fu_1003_p4;
    sc_signal< sc_lv<16> > DD_V_1_reg_1260;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > p_0167_0_i_cast_fu_1019_p1;
    sc_signal< sc_lv<6> > p_0167_0_i_cast_reg_1267;
    sc_signal< sc_lv<7> > p_0252_0_i_cast_fu_1029_p1;
    sc_signal< sc_lv<7> > p_0252_0_i_cast_reg_1275;
    sc_signal< sc_lv<1> > tmp_18_fu_1039_p2;
    sc_signal< sc_lv<1> > tmp_18_reg_1283;
    sc_signal< sc_lv<8> > tmp_19_fu_1071_p2;
    sc_signal< sc_lv<8> > tmp_19_reg_1287;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<14> > tmp_20_fu_1088_p2;
    sc_signal< sc_lv<14> > tmp_20_reg_1292;
    sc_signal< sc_lv<4> > ap_phi_mux_p_0167_0_i1_phi_fu_292_p34;
    sc_signal< sc_lv<1> > tmp_5_fu_900_p2;
    sc_signal< sc_lv<16> > AA_V_fu_866_p1;
    sc_signal< sc_lv<5> > ap_phi_mux_p_0252_0_i1_phi_fu_348_p34;
    sc_signal< sc_lv<1> > tmp_8_fu_910_p2;
    sc_signal< sc_lv<16> > BB_V_fu_870_p4;
    sc_signal< sc_lv<6> > p_0248_0_i1_reg_401;
    sc_signal< sc_lv<1> > tmp_s_fu_920_p2;
    sc_signal< sc_lv<16> > CC_V_fu_880_p4;
    sc_signal< sc_lv<5> > p_0244_0_i1_reg_458;
    sc_signal< sc_lv<1> > tmp_10_fu_926_p2;
    sc_signal< sc_lv<16> > DD_V_fu_890_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_p_0167_0_i_phi_fu_534_p34;
    sc_signal< sc_lv<1> > tmp_15_fu_1013_p2;
    sc_signal< sc_lv<16> > AA_V_1_fu_979_p1;
    sc_signal< sc_lv<5> > ap_phi_mux_p_0252_0_i_phi_fu_590_p34;
    sc_signal< sc_lv<1> > tmp_16_fu_1023_p2;
    sc_signal< sc_lv<16> > BB_V_1_fu_983_p4;
    sc_signal< sc_lv<6> > p_0248_0_i_reg_643;
    sc_signal< sc_lv<1> > tmp_17_fu_1033_p2;
    sc_signal< sc_lv<16> > CC_V_1_fu_993_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_p_0244_0_i_phi_fu_719_p34;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > p_Result_1_fu_807_p4;
    sc_signal< sc_lv<64> > p_Result_4_fu_1120_p4;
    sc_signal< sc_lv<1> > tmp_23_fu_1111_p2;
    sc_signal< sc_lv<32> > tmp_22_fu_1094_p1;
    sc_signal< sc_logic > ap_reg_ioackin_alloc_addr_ap_ack;
    sc_signal< sc_lv<64> > p_Result_s_fu_851_p4;
    sc_signal< sc_lv<64> > p_Result_3_fu_1101_p4;
    sc_signal< sc_lv<10> > p_Result_2_fu_789_p4;
    sc_signal< sc_lv<32> > i_assign_1_fu_803_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_823_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_829_p3;
    sc_signal< sc_lv<32> > i_assign_fu_848_p1;
    sc_signal< sc_lv<64> > p_Val2_s_fu_862_p2;
    sc_signal< sc_lv<6> > p_0244_0_i1_cast8_fu_932_p1;
    sc_signal< sc_lv<6> > tmp2_fu_940_p2;
    sc_signal< sc_lv<7> > p_0244_0_i1_cast_fu_936_p1;
    sc_signal< sc_lv<7> > tmp3_fu_949_p2;
    sc_signal< sc_lv<8> > tmp2_cast_fu_945_p1;
    sc_signal< sc_lv<8> > tmp3_cast_fu_954_p1;
    sc_signal< sc_lv<64> > p_Val2_3_fu_975_p2;
    sc_signal< sc_lv<6> > p_0244_0_i_cast7_fu_1045_p1;
    sc_signal< sc_lv<6> > tmp5_fu_1053_p2;
    sc_signal< sc_lv<7> > p_0244_0_i_cast_fu_1049_p1;
    sc_signal< sc_lv<7> > tmp6_fu_1062_p2;
    sc_signal< sc_lv<8> > tmp5_cast_fu_1058_p1;
    sc_signal< sc_lv<8> > tmp6_cast_fu_1067_p1;
    sc_signal< sc_lv<14> > tmp_25_cast_fu_1084_p1;
    sc_signal< sc_lv<14> > r_V_fu_1077_p3;
    sc_signal< sc_lv<32> > i_assign_2_fu_1098_p1;
    sc_signal< sc_lv<32> > i_assign_3_fu_1117_p1;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< bool > ap_condition_910;
    sc_signal< bool > ap_condition_395;
    sc_signal< bool > ap_condition_746;
    sc_signal< bool > ap_condition_579;
    sc_signal< bool > ap_condition_495;
    sc_signal< bool > ap_condition_829;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<16> ap_const_lv16_8000;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<16> ap_const_lv16_4000;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<16> ap_const_lv16_2000;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<16> ap_const_lv16_1000;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<16> ap_const_lv16_800;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<16> ap_const_lv16_400;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<16> ap_const_lv16_200;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<16> ap_const_lv16_100;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<16> ap_const_lv16_80;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<16> ap_const_lv16_40;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<16> ap_const_lv16_20;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<16> ap_const_lv16_10;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<16> ap_const_lv16_8;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<16> ap_const_lv16_4;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<16> ap_const_lv16_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1B;
    static const sc_lv<5> ap_const_lv5_1A;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_16;
    static const sc_lv<5> ap_const_lv5_15;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<5> ap_const_lv5_13;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_2F;
    static const sc_lv<6> ap_const_lv6_2E;
    static const sc_lv<6> ap_const_lv6_2D;
    static const sc_lv<6> ap_const_lv6_2C;
    static const sc_lv<6> ap_const_lv6_2B;
    static const sc_lv<6> ap_const_lv6_2A;
    static const sc_lv<6> ap_const_lv6_29;
    static const sc_lv<6> ap_const_lv6_28;
    static const sc_lv<6> ap_const_lv6_27;
    static const sc_lv<6> ap_const_lv6_26;
    static const sc_lv<6> ap_const_lv6_25;
    static const sc_lv<6> ap_const_lv6_24;
    static const sc_lv<6> ap_const_lv6_23;
    static const sc_lv<6> ap_const_lv6_22;
    static const sc_lv<6> ap_const_lv6_21;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AA_V_1_fu_979_p1();
    void thread_AA_V_fu_866_p1();
    void thread_BB_V_1_fu_983_p4();
    void thread_BB_V_fu_870_p4();
    void thread_CC_V_1_fu_993_p4();
    void thread_CC_V_fu_880_p4();
    void thread_DD_V_1_fu_1003_p4();
    void thread_DD_V_fu_890_p4();
    void thread_alloc_addr();
    void thread_alloc_addr_ap_vld();
    void thread_alloc_addr_blk_n();
    void thread_alloc_cmd_ap_ack();
    void thread_alloc_cmd_blk_n();
    void thread_alloc_free_target_ap_ack();
    void thread_alloc_free_target_blk_n();
    void thread_alloc_size_ap_ack();
    void thread_alloc_size_blk_n();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_block_state2_io();
    void thread_ap_condition_395();
    void thread_ap_condition_495();
    void thread_ap_condition_579();
    void thread_ap_condition_746();
    void thread_ap_condition_829();
    void thread_ap_condition_910();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_p_0167_0_i1_phi_fu_292_p34();
    void thread_ap_phi_mux_p_0167_0_i_phi_fu_534_p34();
    void thread_ap_phi_mux_p_0244_0_i_phi_fu_719_p34();
    void thread_ap_phi_mux_p_0252_0_i1_phi_fu_348_p34();
    void thread_ap_phi_mux_p_0252_0_i_phi_fu_590_p34();
    void thread_ap_predicate_op33_write_state2();
    void thread_ap_predicate_op53_write_state2();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_alloc_addr_ap_ack();
    void thread_heap_tree_V_address0();
    void thread_heap_tree_V_ce0();
    void thread_heap_tree_V_d0();
    void thread_heap_tree_V_we0();
    void thread_i_assign_1_fu_803_p1();
    void thread_i_assign_2_fu_1098_p1();
    void thread_i_assign_3_fu_1117_p1();
    void thread_i_assign_fu_848_p1();
    void thread_or_cond_fu_836_p2();
    void thread_p_0167_0_i1_cast_fu_906_p1();
    void thread_p_0167_0_i_cast_fu_1019_p1();
    void thread_p_0244_0_i1_cast8_fu_932_p1();
    void thread_p_0244_0_i1_cast_fu_936_p1();
    void thread_p_0244_0_i_cast7_fu_1045_p1();
    void thread_p_0244_0_i_cast_fu_1049_p1();
    void thread_p_0252_0_i1_cast_fu_916_p1();
    void thread_p_0252_0_i_cast_fu_1029_p1();
    void thread_p_Result_1_fu_807_p4();
    void thread_p_Result_2_fu_789_p4();
    void thread_p_Result_3_fu_1101_p4();
    void thread_p_Result_4_fu_1120_p4();
    void thread_p_Result_s_fu_851_p4();
    void thread_p_Val2_3_fu_975_p2();
    void thread_p_Val2_s_fu_862_p2();
    void thread_p_not1_fu_969_p2();
    void thread_p_not_fu_842_p2();
    void thread_r_V_fu_1077_p3();
    void thread_tmp2_cast_fu_945_p1();
    void thread_tmp2_fu_940_p2();
    void thread_tmp3_cast_fu_954_p1();
    void thread_tmp3_fu_949_p2();
    void thread_tmp5_cast_fu_1058_p1();
    void thread_tmp5_fu_1053_p2();
    void thread_tmp6_cast_fu_1067_p1();
    void thread_tmp6_fu_1062_p2();
    void thread_tmp_10_fu_926_p2();
    void thread_tmp_13_fu_958_p2();
    void thread_tmp_14_fu_964_p1();
    void thread_tmp_15_fu_1013_p2();
    void thread_tmp_16_fu_1023_p2();
    void thread_tmp_17_fu_1033_p2();
    void thread_tmp_18_fu_1039_p2();
    void thread_tmp_19_fu_1071_p2();
    void thread_tmp_1_fu_823_p2();
    void thread_tmp_20_fu_1088_p2();
    void thread_tmp_22_fu_1094_p1();
    void thread_tmp_23_fu_1111_p2();
    void thread_tmp_25_cast_fu_1084_p1();
    void thread_tmp_25_fu_786_p1();
    void thread_tmp_2_fu_829_p3();
    void thread_tmp_3_fu_781_p2();
    void thread_tmp_5_fu_900_p2();
    void thread_tmp_6_fu_798_p1();
    void thread_tmp_8_fu_910_p2();
    void thread_tmp_fu_772_p2();
    void thread_tmp_s_fu_920_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
