-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity HTA128_theta is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    alloc_size : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_size_ap_vld : IN STD_LOGIC;
    alloc_size_ap_ack : OUT STD_LOGIC;
    alloc_addr : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_addr_ap_vld : OUT STD_LOGIC;
    alloc_addr_ap_ack : IN STD_LOGIC;
    alloc_free_target : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_free_target_ap_vld : IN STD_LOGIC;
    alloc_free_target_ap_ack : OUT STD_LOGIC;
    alloc_cmd : IN STD_LOGIC_VECTOR (7 downto 0);
    alloc_cmd_ap_vld : IN STD_LOGIC;
    alloc_cmd_ap_ack : OUT STD_LOGIC );
end;


architecture behav of HTA128_theta is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "HTA128_theta,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.748750,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=9,HLS_SYN_DSP=0,HLS_SYN_FF=1736,HLS_SYN_LUT=6026,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000100000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000001000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000010000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000100000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000001000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000010000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000100000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000001000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000010000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000100000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000001000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000010000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000100000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (39 downto 0) := "0000000001000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (39 downto 0) := "0000000010000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (39 downto 0) := "0000000100000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (39 downto 0) := "0000001000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (39 downto 0) := "0000010000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (39 downto 0) := "0000100000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (39 downto 0) := "0001000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (39 downto 0) := "0010000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (39 downto 0) := "0100000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (39 downto 0) := "1000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv16_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv16_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv16_40 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv16_400 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv16_800 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv16_1000 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv16_2000 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv16_4000 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv64_FFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000011111111111111111111111111111111";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_FFFF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000001111111111111111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_FF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011111111";
    constant ap_const_lv14_E : STD_LOGIC_VECTOR (13 downto 0) := "00000000001110";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal group_tree_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal group_tree_V_1_ce0 : STD_LOGIC;
    signal group_tree_V_1_we0 : STD_LOGIC;
    signal group_tree_V_1_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal group_tree_V_1_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal group_tree_V_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal group_tree_V_0_ce0 : STD_LOGIC;
    signal group_tree_V_0_we0 : STD_LOGIC;
    signal group_tree_V_0_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal group_tree_V_0_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal group_tree_mask_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal group_tree_mask_V_ce0 : STD_LOGIC;
    signal group_tree_mask_V_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal shift_constant_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal shift_constant_V_ce0 : STD_LOGIC;
    signal shift_constant_V_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal buddy_tree_V_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buddy_tree_V_1_ce0 : STD_LOGIC;
    signal buddy_tree_V_1_we0 : STD_LOGIC;
    signal buddy_tree_V_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal buddy_tree_V_1_ce1 : STD_LOGIC;
    signal buddy_tree_V_1_we1 : STD_LOGIC;
    signal buddy_tree_V_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buddy_tree_V_0_ce0 : STD_LOGIC;
    signal buddy_tree_V_0_we0 : STD_LOGIC;
    signal buddy_tree_V_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal buddy_tree_V_0_ce1 : STD_LOGIC;
    signal buddy_tree_V_0_we1 : STD_LOGIC;
    signal buddy_tree_V_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal addr_layer_map_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal addr_layer_map_V_ce0 : STD_LOGIC;
    signal addr_layer_map_V_we0 : STD_LOGIC;
    signal addr_layer_map_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal addr_tree_map_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal addr_tree_map_V_ce0 : STD_LOGIC;
    signal addr_tree_map_V_we0 : STD_LOGIC;
    signal addr_tree_map_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal addr_tree_map_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mark_mask_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mark_mask_V_ce0 : STD_LOGIC;
    signal mark_mask_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal alloc_size_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal alloc_addr_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_22_fu_2119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal alloc_free_target_blk_n : STD_LOGIC;
    signal alloc_cmd_blk_n : STD_LOGIC;
    signal op_V_assign_log_2_64bit_fu_1152_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_844 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_ioackin_alloc_addr_ap_ack : STD_LOGIC;
    signal ap_block_state29_io : BOOLEAN;
    signal p_03232_2_in_reg_869 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_03236_1_in_reg_878 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_03208_1_in_in_reg_887 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_03180_4_reg_896 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1248 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal size_V_fu_1262_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal size_V_reg_2946 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal free_target_V_fu_1266_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal free_target_V_reg_2951 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_fu_1276_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_reg_2958 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_1286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2964 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal r_V_21_fu_1302_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_1292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_2991 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ans_V_reg_3005 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_12_fu_1318_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_3015 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_tree_map_V_load_reg_3020 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc1_V_10_fu_1326_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc1_V_10_reg_3029 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc1_V_9_cast_cast_fu_1330_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal loc1_V_9_cast_cast_reg_3035 : STD_LOGIC_VECTOR (10 downto 0);
    signal newIndex2_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex2_reg_3040 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_assign_fu_1361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_assign_reg_3061 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal p_Result_s_fu_1375_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_reg_3069 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_fu_1392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_reg_3074 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_Result_9_fu_1396_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal rec_bits_V_fu_1414_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal loc1_V_fu_1418_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal loc1_V_reg_3089 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal loc1_V_11_fu_1428_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc1_V_11_reg_3094 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_97_fu_1432_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_3099 : STD_LOGIC_VECTOR (0 downto 0);
    signal now1_V_1_fu_1436_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal now1_V_1_reg_3104 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_25_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_3109 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex_fu_1458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex_reg_3113 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1506_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_reg_3129 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal p_Result_10_fu_1512_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal p_Repl2_s_fu_1540_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Repl2_s_reg_3144 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal p_Repl2_7_fu_1546_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Repl2_7_reg_3150 : STD_LOGIC_VECTOR (3 downto 0);
    signal mask_V_load26_phi_ca_fu_1582_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_fu_1552_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_fu_1560_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_74_fu_1590_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_73_fu_1602_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal mask_V_load27_phi_ca_fu_1614_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_124_fu_1622_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_reg_3181 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex15_fu_1636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex15_reg_3186 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_24_fu_1645_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_24_reg_3202 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal r_V_18_fu_1658_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_18_reg_3207 : STD_LOGIC_VECTOR (63 downto 0);
    signal cnt_fu_1664_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_10_fu_1719_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_10_reg_3218 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_fu_1745_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_reg_3223 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc_tree_V_5_fu_1757_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc_tree_V_5_reg_3228 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal newIndex6_fu_1787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex6_reg_3233 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_fu_1793_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_3254 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal r_V_4_fu_1804_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_4_reg_3258 : STD_LOGIC_VECTOR (3 downto 0);
    signal TMP_0_V_1_fu_1810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal p_Result_11_fu_1816_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_12_cast_fu_1831_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal now1_V_2_fu_1835_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal now1_V_2_reg_3279 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state18_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal rec_bits_V_3_fu_1841_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal rec_bits_V_3_reg_3284 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_1859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3289 : STD_LOGIC_VECTOR (0 downto 0);
    signal TMP_0_V_4_fu_1899_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal TMP_0_V_4_reg_3293 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_12_fu_1905_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_12_reg_3299 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_8_fu_1918_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_94_fu_1923_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_94_reg_3310 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal newIndex11_fu_1957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex11_reg_3318 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal tmp_59_fu_1941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal TMP_0_V_7_fu_1963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_107_fu_1980_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_reg_3339 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal tmp_64_fu_1992_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_reg_3343 : STD_LOGIC_VECTOR (63 downto 0);
    signal rec_bits_V_2_fu_2021_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal now1_V_3_fu_2025_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_68_fu_2041_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_4_cast_fu_2083_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_4_cast_reg_3365 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_76_fu_2087_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_reg_3370 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex4_fu_2101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex4_reg_3375 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal tmp_V_1_fu_2113_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_1_reg_3403 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal tmp_22_reg_3411 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1218_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_reg_3415 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_13_fu_2138_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal TMP_0_V_fu_2147_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex8_fu_2179_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex8_reg_3439 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal tmp_101_fu_2185_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_reg_3465 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_2219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_3469 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_2225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_3474 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_2231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_3479 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_9_fu_2257_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_9_reg_3485 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_55_fu_2273_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_55_reg_3490 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_43_fu_2297_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_reg_3496 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_11_fu_2366_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_11_reg_3501 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_110_reg_3506 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal now1_V_6_fu_2397_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal now2_V_3_fu_2407_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal newIndex13_fu_2450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex13_reg_3554 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_fu_2456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_reg_3570 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal op2_assign_7_fu_2470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal op2_assign_7_reg_3574 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_2476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_reg_3579 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_6_fu_2596_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_6_reg_3583 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex17_fu_2612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex17_reg_3589 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_fu_2618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_reg_3605 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_fu_2624_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_reg_3609 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex23_fu_2638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex23_reg_3614 : STD_LOGIC_VECTOR (63 downto 0);
    signal now1_V_5_fu_2747_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal now2_V_1_fu_2756_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_6_cast_fu_2826_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_6_cast_reg_3646 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal newIndex19_fu_2848_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex19_reg_3654 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal tmp_78_fu_2832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex21_fu_2869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex21_reg_3664 : STD_LOGIC_VECTOR (63 downto 0);
    signal now2_V_s_fu_2874_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal now2_V_s_reg_3674 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Repl2_6_fu_2880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_6_reg_3679 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_2920_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state18 : STD_LOGIC;
    signal op_V_assign_log_2_64bit_fu_1152_ap_ready : STD_LOGIC;
    signal p_03220_8_in_reg_786 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_61_fu_1534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_03232_1_in_reg_795 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_4_reg_804 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_03228_2_in_reg_816 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_03212_3_in_reg_825 : STD_LOGIC_VECTOR (12 downto 0);
    signal TMP_0_V_3_reg_834 : STD_LOGIC_VECTOR (63 downto 0);
    signal mask_V_load_phi_reg_856 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_p_03232_2_in_phi_fu_872_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_p_03236_1_in_phi_fu_881_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_p_03208_1_in_in_phi_fu_890_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_p_03180_4_phi_fu_899_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_12_reg_906 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_03232_3_reg_916 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_3_reg_928 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_03208_2_reg_937 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_3_reg_948 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_s_reg_958 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_4_reg_1032 : STD_LOGIC_VECTOR (15 downto 0);
    signal buddy_tree_V_load_ph_reg_1073 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_p_7_phi_fu_1086_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_7_reg_1082 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_8_phi_fu_1096_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_8_reg_1093 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_p_03180_1_phi_fu_1105_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_03180_1_reg_1102 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_1_reg_1111 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_2_reg_1121 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_03220_5_in_reg_1131 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_03228_1_reg_1141 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_fu_1364_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buddy_tree_V_0_addr_6_gep_fu_555_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal buddy_tree_V_1_addr_6_gep_fu_563_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_36_fu_2173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_fu_2391_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_69_fu_2445_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_127_fu_2644_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_2796_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmd_fu_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal cnt_1_fu_248 : STD_LOGIC_VECTOR (31 downto 0);
    signal cnt_2_fu_2669_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_V_4_fu_252 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal loc2_V_fu_256 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc2_V_2_cast_fu_2421_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc2_V_2_fu_2663_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc1_V_7_fu_260 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc1_V_8_cast_fu_2403_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc1_V_9_fu_2728_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal output_addr_V_fu_2142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_addr_V_1_fu_2374_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_alloc_addr_ap_ack : STD_LOGIC := '0';
    signal tmp_56_fu_2159_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_fu_2384_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_20_fu_2656_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_7_fu_2703_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_130_fu_2928_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal storemerge_fu_2075_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal r_V_16_fu_2765_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_6_fu_2776_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_129_fu_2899_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_6_fu_2818_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1232_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_size_V_fu_1270_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_1_fu_1297_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal newIndex1_fu_1334_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_1_fu_1350_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_1_fu_1367_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_assign_2_fu_1387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_2_fu_1409_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex9_fu_1448_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_99_fu_1464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_fu_1472_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_8_fu_1489_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal buddy_tree_V_load_1_s_fu_1499_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_1495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_1521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_7_fu_1525_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal rec_bits_V_1_fu_1530_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_120_fu_1574_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_1590_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_fu_1602_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal newIndex14_fu_1626_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_77_fu_1642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs_V_3_fu_1651_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_25_fu_1670_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_1690_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_cast_fu_1687_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_13_cast_fu_1696_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_cast_fu_1683_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_1700_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_7_fu_1706_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_1675_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1711_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_33_fu_1715_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_11_fu_1730_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_23_cast_fu_1727_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_cast_fu_1735_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_1739_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_1749_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_16_fu_1753_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_3_cast_fu_1763_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_3_fu_1767_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal newIndex5_fu_1778_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_fu_1796_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal TMP_0_V_1_cast_fu_1813_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_6_fu_1825_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_79_fu_1845_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_03208_1_in_fu_1865_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_24_fu_1875_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal loc_tree_V_fu_1879_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_27_fu_1885_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_s_fu_1889_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_1895_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_1915_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_fu_1929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_s_fu_1935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex10_fu_1947_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_62_fu_1966_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_1_fu_1970_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal buddy_tree_V_load_4_s_fu_1984_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_fu_1976_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_15_cast8_fu_1998_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_13_fu_2002_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_67_fu_2012_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_14_fu_2016_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_113_fu_2031_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_122_fu_2045_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_assign_1_fu_2055_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_5_fu_2059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_2065_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_15_fu_2049_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex3_fu_2091_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_fu_2107_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1226_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_39_cast_fu_2128_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_cast_fu_2128_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_cast_fu_2124_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_fu_2132_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal buddy_tree_V_load_2_s_fu_2152_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_5_fu_2167_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1232_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_101_fu_2185_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_102_fu_2197_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal group_tree_V_load_ph_fu_2189_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal TMP_1_V_fu_2201_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_5_fu_2207_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal TMP_1_V_1_fu_2213_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_73_cast_fu_2237_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_fu_2241_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_73_cast_fu_2237_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_78_cast_fu_2247_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_fu_2251_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp26_fu_2261_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_54_fu_2267_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_42_fu_2293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_2286_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_52_cast_fu_2279_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal loc_tree_V_2_fu_2305_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_48_fu_2313_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_47_fu_2309_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_104_fu_2324_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_49_fu_2332_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal new_loc1_V_fu_2318_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_51_fu_2340_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_51_fu_2340_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_cast_fu_2346_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_50_fu_2336_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_2332_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_2356_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_2324_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_2350_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_105_fu_2362_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_fu_2379_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc2_V_3_fu_2413_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc2_V_3_fu_2413_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal rev_fu_2464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_fu_2496_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_2512_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_81_fu_2524_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_125_fu_2482_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp_fu_2544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_2512_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal mask_V_load_114_phi_s_fu_2504_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp2_fu_2558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_2524_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp1_fu_2550_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp4_fu_2572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mask_V_load_113_phi_s_fu_2536_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp3_fu_2564_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mask_V_load_1_phi_fu_2578_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_82_fu_2586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_19_fu_2590_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex16_fu_2602_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex22_fu_2628_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs_V_4_fu_2648_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_15_fu_2696_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_assign_4_fu_2692_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc1_V_6_fu_2718_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal op2_assign_6_fu_2737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_2743_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2753_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_assign_2_fu_2772_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_2_fu_2772_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_117_fu_2796_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_116_fu_2786_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal group_tree_V_load_3_s_fu_2800_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal rhs_i_i_fu_2790_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_118_fu_2814_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_70_fu_2808_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal newIndex18_fu_2838_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal now2_V_fu_2853_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex20_fu_2859_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal loc1_V_s_fu_2885_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_assign_3_fu_2895_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc1_V_7_1_fu_2910_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_assign_3_1_fu_2924_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component log_2_64bit IS
    port (
        ap_ready : OUT STD_LOGIC;
        tmp_V : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component HTA128_theta_mux_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component HTA128_theta_groubkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component HTA128_theta_groudEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component HTA128_theta_shifeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component HTA128_theta_buddfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component HTA128_theta_buddg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component HTA128_theta_addrhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component HTA128_theta_addribs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component HTA128_theta_markjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    group_tree_V_1_U : component HTA128_theta_groubkb
    generic map (
        DataWidth => 4,
        AddressRange => 35,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => group_tree_V_1_address0,
        ce0 => group_tree_V_1_ce0,
        we0 => group_tree_V_1_we0,
        d0 => group_tree_V_1_d0,
        q0 => group_tree_V_1_q0);

    group_tree_V_0_U : component HTA128_theta_groubkb
    generic map (
        DataWidth => 4,
        AddressRange => 35,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => group_tree_V_0_address0,
        ce0 => group_tree_V_0_ce0,
        we0 => group_tree_V_0_we0,
        d0 => group_tree_V_0_d0,
        q0 => group_tree_V_0_q0);

    group_tree_mask_V_U : component HTA128_theta_groudEe
    generic map (
        DataWidth => 31,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => group_tree_mask_V_address0,
        ce0 => group_tree_mask_V_ce0,
        q0 => group_tree_mask_V_q0);

    shift_constant_V_U : component HTA128_theta_shifeOg
    generic map (
        DataWidth => 5,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shift_constant_V_address0,
        ce0 => shift_constant_V_ce0,
        q0 => shift_constant_V_q0);

    buddy_tree_V_1_U : component HTA128_theta_buddfYi
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buddy_tree_V_1_address0,
        ce0 => buddy_tree_V_1_ce0,
        we0 => buddy_tree_V_1_we0,
        d0 => buddy_tree_V_1_d0,
        q0 => buddy_tree_V_1_q0,
        address1 => buddy_tree_V_1_address1,
        ce1 => buddy_tree_V_1_ce1,
        we1 => buddy_tree_V_1_we1,
        d1 => buddy_tree_V_1_d1,
        q1 => buddy_tree_V_1_q1);

    buddy_tree_V_0_U : component HTA128_theta_buddg8j
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buddy_tree_V_0_address0,
        ce0 => buddy_tree_V_0_ce0,
        we0 => buddy_tree_V_0_we0,
        d0 => buddy_tree_V_0_d0,
        q0 => buddy_tree_V_0_q0,
        address1 => buddy_tree_V_0_address1,
        ce1 => buddy_tree_V_0_ce1,
        we1 => buddy_tree_V_0_we1,
        d1 => buddy_tree_V_0_d1,
        q1 => buddy_tree_V_0_q1);

    addr_layer_map_V_U : component HTA128_theta_addrhbi
    generic map (
        DataWidth => 4,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => addr_layer_map_V_address0,
        ce0 => addr_layer_map_V_ce0,
        we0 => addr_layer_map_V_we0,
        d0 => p_s_reg_958,
        q0 => addr_layer_map_V_q0);

    addr_tree_map_V_U : component HTA128_theta_addribs
    generic map (
        DataWidth => 8,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => addr_tree_map_V_address0,
        ce0 => addr_tree_map_V_ce0,
        we0 => addr_tree_map_V_we0,
        d0 => addr_tree_map_V_d0,
        q0 => addr_tree_map_V_q0);

    mark_mask_V_U : component HTA128_theta_markjbC
    generic map (
        DataWidth => 4,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mark_mask_V_address0,
        ce0 => mark_mask_V_ce0,
        q0 => mark_mask_V_q0);

    op_V_assign_log_2_64bit_fu_1152 : component log_2_64bit
    port map (
        ap_ready => op_V_assign_log_2_64bit_fu_1152_ap_ready,
        tmp_V => tmp_V_1_reg_3403,
        ap_return => op_V_assign_log_2_64bit_fu_1152_ap_return);

    HTA128_theta_mux_kbM_U2 : component HTA128_theta_mux_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_3,
        din1 => ap_const_lv64_FFFFFFFF,
        din2 => ap_const_lv64_0,
        din3 => tmp_74_fu_1590_p4,
        dout => tmp_74_fu_1590_p5);

    HTA128_theta_mux_kbM_U3 : component HTA128_theta_mux_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_1,
        din1 => ap_const_lv64_FFFF,
        din2 => ap_const_lv64_0,
        din3 => tmp_73_fu_1602_p4,
        dout => tmp_73_fu_1602_p5);

    HTA128_theta_mux_kbM_U4 : component HTA128_theta_mux_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_1,
        din1 => ap_const_lv64_FFFF,
        din2 => ap_const_lv64_0,
        din3 => tmp_80_fu_2512_p4,
        dout => tmp_80_fu_2512_p5);

    HTA128_theta_mux_kbM_U5 : component HTA128_theta_mux_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_3,
        din1 => ap_const_lv64_FFFFFFFF,
        din2 => ap_const_lv64_0,
        din3 => tmp_81_fu_2524_p4,
        dout => tmp_81_fu_2524_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state18))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state18);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_alloc_addr_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_io) and (tmp_22_fu_2119_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)))) then 
                    ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = alloc_addr_ap_ack) and (ap_const_logic_1 = ap_CS_fsm_state29) and (tmp_22_fu_2119_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = alloc_addr_ap_ack) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((ap_const_logic_1 = alloc_addr_ap_ack) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
                    ap_reg_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    TMP_0_V_3_reg_834_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                TMP_0_V_3_reg_834 <= r_V_24_reg_3202;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and ((tmp_61_fu_1534_p2 = ap_const_lv1_0) or (tmp_25_reg_3109 = ap_const_lv1_1)))) then 
                TMP_0_V_3_reg_834 <= tmp_V_reg_3074;
            end if; 
        end if;
    end process;

    buddy_tree_V_load_ph_reg_1073_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                buddy_tree_V_load_ph_reg_1073 <= buddy_tree_V_1_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                buddy_tree_V_load_ph_reg_1073 <= buddy_tree_V_0_q0;
            end if; 
        end if;
    end process;

    cmd_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                cmd_fu_244 <= alloc_cmd;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                cmd_fu_244 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    cnt_1_fu_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_121_reg_3570 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_72_reg_3579 = ap_const_lv1_1))) then 
                cnt_1_fu_248 <= cnt_2_fu_2669_p2;
            elsif (((grp_fu_1218_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                cnt_1_fu_248 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    loc1_V_7_fu_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_84_reg_3605 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_72_reg_3579 = ap_const_lv1_1))) then 
                                loc1_V_7_fu_260(6 downto 0) <= loc1_V_9_fu_2728_p1(6 downto 0);
            elsif (((grp_fu_1218_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                                loc1_V_7_fu_260(6 downto 0) <= loc1_V_8_cast_fu_2403_p1(6 downto 0);
            end if; 
        end if;
    end process;

    loc2_V_fu_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_121_reg_3570 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_72_reg_3579 = ap_const_lv1_1))) then 
                                loc2_V_fu_256(12 downto 1) <= loc2_V_2_fu_2663_p2(12 downto 1);
            elsif (((grp_fu_1218_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                                loc2_V_fu_256(12 downto 1) <= loc2_V_2_cast_fu_2421_p1(12 downto 1);
            end if; 
        end if;
    end process;

    mask_V_load_phi_reg_856_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_115_fu_1552_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                if ((tmp_119_fu_1560_p1 = ap_const_lv2_3)) then 
                    mask_V_load_phi_reg_856 <= mask_V_load27_phi_ca_fu_1614_p3;
                elsif ((tmp_119_fu_1560_p1 = ap_const_lv2_2)) then 
                    mask_V_load_phi_reg_856 <= mask_V_load26_phi_ca_fu_1582_p3;
                elsif ((tmp_119_fu_1560_p1 = ap_const_lv2_1)) then 
                    mask_V_load_phi_reg_856 <= tmp_74_fu_1590_p5;
                elsif ((tmp_119_fu_1560_p1 = ap_const_lv2_0)) then 
                    mask_V_load_phi_reg_856 <= tmp_73_fu_1602_p5;
                end if;
            end if; 
        end if;
    end process;

    p_03180_1_reg_1102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1))) then 
                p_03180_1_reg_1102 <= TMP_0_V_fu_2147_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (tmp_98_reg_3415 = ap_const_lv1_1))) then 
                p_03180_1_reg_1102 <= p_4_cast_reg_3365;
            end if; 
        end if;
    end process;

    p_03180_4_reg_896_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3289 = ap_const_lv1_1))) then 
                p_03180_4_reg_896 <= TMP_0_V_4_reg_3293;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                p_03180_4_reg_896 <= TMP_0_V_1_fu_1810_p1;
            end if; 
        end if;
    end process;

    p_03208_1_in_in_reg_887_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3289 = ap_const_lv1_1))) then 
                p_03208_1_in_in_reg_887 <= p_Result_12_reg_3299;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                p_03208_1_in_in_reg_887 <= p_Result_11_fu_1816_p4;
            end if; 
        end if;
    end process;

    p_03208_2_reg_937_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_115_fu_1552_p3 = ap_const_lv1_1))) then 
                p_03208_2_reg_937 <= ap_const_lv8_0;
            elsif (((tmp_59_fu_1941_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_12_reg_3015 = ap_const_lv1_1))) then 
                p_03208_2_reg_937 <= addr_tree_map_V_load_reg_3020;
            end if; 
        end if;
    end process;

    p_03212_3_in_reg_825_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                p_03212_3_in_reg_825 <= p_Repl2_s_reg_3144;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and ((tmp_61_fu_1534_p2 = ap_const_lv1_0) or (tmp_25_reg_3109 = ap_const_lv1_1)))) then 
                p_03212_3_in_reg_825 <= loc1_V_10_reg_3029;
            end if; 
        end if;
    end process;

    p_03220_5_in_reg_1131_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                p_03220_5_in_reg_1131 <= reg_844(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                p_03220_5_in_reg_1131 <= tmp_83_fu_2920_p1;
            end if; 
        end if;
    end process;

    p_03220_8_in_reg_786_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_25_reg_3109 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_61_fu_1534_p2 = ap_const_lv1_1))) then 
                p_03220_8_in_reg_786 <= p_Result_10_fu_1512_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_03220_8_in_reg_786 <= p_Result_9_fu_1396_p4;
            end if; 
        end if;
    end process;

    p_03228_1_reg_1141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                p_03228_1_reg_1141 <= ap_const_lv3_6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                p_03228_1_reg_1141 <= now2_V_s_reg_3674;
            end if; 
        end if;
    end process;

    p_03228_2_in_reg_816_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                p_03228_2_in_reg_816 <= p_Repl2_7_reg_3150;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and ((tmp_61_fu_1534_p2 = ap_const_lv1_0) or (tmp_25_reg_3109 = ap_const_lv1_1)))) then 
                p_03228_2_in_reg_816 <= ans_V_reg_3005;
            end if; 
        end if;
    end process;

    p_03232_1_in_reg_795_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_25_reg_3109 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_61_fu_1534_p2 = ap_const_lv1_1))) then 
                p_03232_1_in_reg_795 <= now1_V_1_reg_3104;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_03232_1_in_reg_795 <= ans_V_reg_3005;
            end if; 
        end if;
    end process;

    p_03232_2_in_reg_869_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3289 = ap_const_lv1_1))) then 
                p_03232_2_in_reg_869 <= now1_V_2_reg_3279;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                p_03232_2_in_reg_869 <= ans_V_reg_3005;
            end if; 
        end if;
    end process;

    p_03232_3_reg_916_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                p_03232_3_reg_916 <= now1_V_3_fu_2025_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                p_03232_3_reg_916 <= ap_const_lv4_7;
            end if; 
        end if;
    end process;

    p_03236_1_in_reg_878_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3289 = ap_const_lv1_1))) then 
                p_03236_1_in_reg_878 <= r_V_8_fu_1918_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                p_03236_1_in_reg_878 <= r_V_12_cast_fu_1831_p1;
            end if; 
        end if;
    end process;

    p_1_reg_1111_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_72_reg_3579 = ap_const_lv1_1))) then 
                p_1_reg_1111 <= now1_V_5_fu_2747_p2;
            elsif (((grp_fu_1218_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                p_1_reg_1111 <= now1_V_6_fu_2397_p2;
            end if; 
        end if;
    end process;

    p_2_reg_1121_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_72_reg_3579 = ap_const_lv1_1))) then 
                p_2_reg_1121 <= now2_V_1_fu_2756_p2;
            elsif (((grp_fu_1218_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                p_2_reg_1121 <= now2_V_3_fu_2407_p2;
            end if; 
        end if;
    end process;

    p_4_reg_1032_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_s_fu_1292_p2 = ap_const_lv1_1) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_4_reg_1032 <= ap_const_lv16_0;
            elsif (((not((r_V_21_fu_1302_p2 = ap_const_lv16_8000)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_4000)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_2000)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_1000)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_800)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_400)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_200)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_100)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_80)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_40)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_20)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_10)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_8)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_4)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_2)) and (tmp_s_fu_1292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_8000) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_4000) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_2000) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_1000) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_800) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_400) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_200) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_100) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_80) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_40) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_20) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_10) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_8) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_4) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or ((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)))) then 
                p_4_reg_1032 <= r_V_21_fu_1302_p2;
            end if; 
        end if;
    end process;

    p_7_reg_1082_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1))) then 
                p_7_reg_1082 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (tmp_98_reg_3415 = ap_const_lv1_1))) then 
                p_7_reg_1082 <= tmp_43_reg_3496;
            end if; 
        end if;
    end process;

    p_8_reg_1093_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1))) then 
                p_8_reg_1093 <= r_V_13_fu_2138_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (tmp_98_reg_3415 = ap_const_lv1_1))) then 
                p_8_reg_1093 <= r_V_11_reg_3501;
            end if; 
        end if;
    end process;

    p_Val2_12_reg_906_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                                p_Val2_12_reg_906(7 downto 0) <= tmp_68_fu_2041_p1(7 downto 0);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                                p_Val2_12_reg_906(7 downto 0) <= loc1_V_9_cast_cast_reg_3035(7 downto 0);
            end if; 
        end if;
    end process;

    p_Val2_3_reg_928_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                p_Val2_3_reg_928 <= rec_bits_V_2_fu_2021_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                p_Val2_3_reg_928 <= rec_bits_V_3_reg_3284;
            end if; 
        end if;
    end process;

    p_Val2_4_reg_804_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_25_reg_3109 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_61_fu_1534_p2 = ap_const_lv1_1))) then 
                p_Val2_4_reg_804 <= ap_const_lv2_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_Val2_4_reg_804 <= rec_bits_V_fu_1414_p1;
            end if; 
        end if;
    end process;

    p_s_reg_958_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_s_fu_1292_p2 = ap_const_lv1_1) and (tmp_fu_1286_p2 = ap_const_lv1_1)) or (not((r_V_21_fu_1302_p2 = ap_const_lv16_8000)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_4000)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_2000)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_1000)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_800)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_400)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_200)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_100)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_80)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_40)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_20)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_10)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_8)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_4)) and not((r_V_21_fu_1302_p2 = ap_const_lv16_2)) and (tmp_s_fu_1292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1)))) then 
                p_s_reg_958 <= ap_const_lv4_8;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_8000) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_7;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_4000) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_6;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_2000) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_5;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_1000) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_4;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_800) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_3;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_400) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_2;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_200) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_1;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_100) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_0;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_80) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_F;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_40) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_E;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_20) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_D;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_10) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_C;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_8) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_B;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_4) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_A;
            elsif (((tmp_s_fu_1292_p2 = ap_const_lv1_0) and (r_V_21_fu_1302_p2 = ap_const_lv16_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then 
                p_s_reg_958 <= ap_const_lv4_9;
            end if; 
        end if;
    end process;

    reg_844_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                reg_844 <= cnt_fu_1664_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and ((tmp_61_fu_1534_p2 = ap_const_lv1_0) or (tmp_25_reg_3109 = ap_const_lv1_1)))) then 
                reg_844 <= ap_const_lv32_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_io))) then 
                reg_844 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_V_assign_log_2_64bit_fu_1152_ap_return),32));
            end if; 
        end if;
    end process;

    rhs_V_3_reg_948_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_115_fu_1552_p3 = ap_const_lv1_1))) then 
                rhs_V_3_reg_948 <= TMP_0_V_3_reg_834;
            elsif (((tmp_59_fu_1941_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_12_reg_3015 = ap_const_lv1_1))) then 
                rhs_V_3_reg_948 <= TMP_0_V_7_fu_1963_p1;
            end if; 
        end if;
    end process;

    rhs_V_4_fu_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_121_reg_3570 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_72_reg_3579 = ap_const_lv1_1))) then 
                rhs_V_4_fu_252 <= rhs_V_6_reg_3583;
            elsif (((grp_fu_1218_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                rhs_V_4_fu_252 <= ap_phi_mux_p_03180_1_phi_fu_1105_p4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_fu_1859_p2 = ap_const_lv1_1))) then
                TMP_0_V_4_reg_3293 <= TMP_0_V_4_fu_1899_p2;
                p_Result_12_reg_3299 <= p_Result_12_fu_1905_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                addr_tree_map_V_load_reg_3020 <= addr_tree_map_V_q0;
                ans_V_reg_3005 <= addr_layer_map_V_q0;
                    loc1_V_10_reg_3029(7 downto 0) <= loc1_V_10_fu_1326_p1(7 downto 0);
                    loc1_V_9_cast_cast_reg_3035(7 downto 0) <= loc1_V_9_cast_cast_fu_1330_p1(7 downto 0);
                tmp_12_reg_3015 <= addr_layer_map_V_q0(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                free_target_V_reg_2951 <= free_target_V_fu_1266_p1;
                p_Result_8_reg_2958 <= p_Result_8_fu_1276_p4;
                size_V_reg_2946 <= size_V_fu_1262_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    i_assign_reg_3061(7 downto 0) <= i_assign_fu_1361_p1(7 downto 0);
                p_Result_s_reg_3069 <= p_Result_s_fu_1375_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    loc1_V_11_reg_3094(11 downto 0) <= loc1_V_11_fu_1428_p1(11 downto 0);
                loc1_V_reg_3089 <= p_03220_8_in_reg_786(12 downto 1);
                now1_V_1_reg_3104 <= now1_V_1_fu_1436_p2;
                tmp_25_reg_3109 <= tmp_25_fu_1442_p2;
                tmp_97_reg_3099 <= tmp_97_fu_1432_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                loc_tree_V_5_reg_3228 <= loc_tree_V_5_fu_1757_p2;
                    newIndex6_reg_3233(6 downto 0) <= newIndex6_fu_1787_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_59_fu_1941_p2 = ap_const_lv1_1) and (tmp_12_reg_3015 = ap_const_lv1_1))) then
                    newIndex11_reg_3318(2 downto 0) <= newIndex11_fu_1957_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) and (grp_fu_1218_p3 = ap_const_lv1_1))) then
                    newIndex13_reg_3554(6 downto 0) <= newIndex13_fu_2450_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_115_fu_1552_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    newIndex15_reg_3186(2 downto 0) <= newIndex15_fu_1636_p1(2 downto 0);
                tmp_124_reg_3181 <= tmp_124_fu_1622_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_121_fu_2456_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (tmp_72_fu_2476_p2 = ap_const_lv1_1))) then
                    newIndex17_reg_3589(2 downto 0) <= newIndex17_fu_2612_p1(2 downto 0);
                rhs_V_6_reg_3583 <= rhs_V_6_fu_2596_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_78_fu_2832_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    newIndex19_reg_3654(1 downto 0) <= newIndex19_fu_2848_p1(1 downto 0);
                    newIndex21_reg_3664(1 downto 0) <= newIndex21_fu_2869_p1(1 downto 0);
                now2_V_s_reg_3674 <= now2_V_s_fu_2874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_84_fu_2618_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (tmp_72_fu_2476_p2 = ap_const_lv1_1))) then
                    newIndex23_reg_3614(2 downto 0) <= newIndex23_fu_2638_p1(2 downto 0);
                tmp_132_reg_3609 <= tmp_132_fu_2624_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_fu_1318_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    newIndex2_reg_3040(2 downto 0) <= newIndex2_fu_1344_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                    newIndex4_reg_3375(2 downto 0) <= newIndex4_fu_2101_p1(2 downto 0);
                    p_4_cast_reg_3365(15 downto 0) <= p_4_cast_fu_2083_p1(15 downto 0);
                tmp_76_reg_3370 <= tmp_76_fu_2087_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                    newIndex8_reg_3439(6 downto 0) <= newIndex8_fu_2179_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_25_fu_1442_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    newIndex_reg_3113(2 downto 0) <= newIndex_fu_1458_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                now1_V_2_reg_3279 <= now1_V_2_fu_1835_p2;
                rec_bits_V_3_reg_3284 <= rec_bits_V_3_fu_1841_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                op2_assign_7_reg_3574 <= op2_assign_7_fu_2470_p2;
                tmp_121_reg_3570 <= p_1_reg_1111(3 downto 3);
                tmp_72_reg_3579 <= tmp_72_fu_2476_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                p_6_cast_reg_3646 <= p_6_cast_fu_2826_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_78_fu_2832_p2 = ap_const_lv1_1))) then
                p_Repl2_6_reg_3679 <= p_Repl2_6_fu_2880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                p_Repl2_7_reg_3150 <= p_Repl2_7_fu_1546_p2;
                    p_Repl2_s_reg_3144(12 downto 1) <= p_Repl2_s_fu_1540_p2(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1))) then
                r_V_11_reg_3501 <= r_V_11_fu_2366_p3;
                tmp_43_reg_3496 <= tmp_43_fu_2297_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                r_V_18_reg_3207 <= r_V_18_fu_1658_p2;
                r_V_24_reg_3202 <= r_V_24_fu_1645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                r_V_4_reg_3258 <= r_V_4_fu_1804_p2;
                tmp_57_reg_3254 <= tmp_57_fu_1793_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                r_V_9_reg_3485 <= r_V_9_fu_2257_p1;
                tmp_101_reg_3465 <= tmp_101_fu_2185_p1;
                tmp_38_reg_3469 <= tmp_38_fu_2219_p2;
                tmp_39_reg_3474 <= tmp_39_fu_2225_p2;
                tmp_40_reg_3479 <= tmp_40_fu_2231_p2;
                tmp_55_reg_3490 <= tmp_55_fu_2273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                r_V_reg_3223 <= r_V_fu_1745_p1;
                tmp_10_reg_3218 <= tmp_10_fu_1719_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state14))) then
                reg_1248 <= shift_constant_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                tmp_107_reg_3339 <= tmp_107_fu_1980_p1;
                tmp_64_reg_3343 <= tmp_64_fu_1992_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                tmp_110_reg_3506 <= p_s_reg_958(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_20_reg_3289 <= tmp_20_fu_1859_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_io))) then
                tmp_22_reg_3411 <= tmp_22_fu_2119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                tmp_37_reg_3129 <= tmp_37_fu_1506_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_6_reg_2991 <= tmp_6_fu_1307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (tmp_72_fu_2476_p2 = ap_const_lv1_1))) then
                tmp_84_reg_3605 <= tmp_84_fu_2618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                tmp_94_reg_3310 <= tmp_94_fu_1923_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_io) and (tmp_22_fu_2119_p2 = ap_const_lv1_0))) then
                tmp_98_reg_3415 <= p_s_reg_958(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                tmp_V_1_reg_3403 <= tmp_V_1_fu_2113_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_V_reg_3074 <= tmp_V_fu_1392_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                tmp_reg_2964 <= tmp_fu_1286_p2;
            end if;
        end if;
    end process;
    loc1_V_10_reg_3029(12 downto 8) <= "00000";
    loc1_V_9_cast_cast_reg_3035(10 downto 8) <= "000";
    newIndex2_reg_3040(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    i_assign_reg_3061(31 downto 8) <= "000000000000000000000000";
    loc1_V_11_reg_3094(12) <= '0';
    newIndex_reg_3113(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    p_Repl2_s_reg_3144(0) <= '0';
    newIndex15_reg_3186(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    newIndex6_reg_3233(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex11_reg_3318(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    p_4_cast_reg_3365(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    newIndex4_reg_3375(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    newIndex8_reg_3439(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex13_reg_3554(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex17_reg_3589(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    newIndex23_reg_3614(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    newIndex19_reg_3654(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    newIndex21_reg_3664(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    p_Val2_12_reg_906(10 downto 8) <= "000";
    loc2_V_fu_256(0) <= '0';
    loc1_V_7_fu_260(12 downto 7) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2, ap_CS_fsm_state33, ap_CS_fsm_state30, ap_CS_fsm_state29, tmp_22_fu_2119_p2, ap_sig_ioackin_alloc_addr_ap_ack, ap_block_state29_io, tmp_fu_1286_p2, ap_CS_fsm_state3, tmp_6_fu_1307_p2, ap_CS_fsm_state4, ap_CS_fsm_state5, tmp_12_fu_1318_p3, tmp_12_reg_3015, ap_CS_fsm_state8, tmp_25_fu_1442_p2, tmp_25_reg_3109, ap_CS_fsm_state10, ap_CS_fsm_state11, tmp_115_fu_1552_p3, ap_enable_reg_pp0_iter0, tmp_20_fu_1859_p2, ap_CS_fsm_state21, tmp_59_fu_1941_p2, ap_CS_fsm_state25, tmp_76_fu_2087_p1, grp_fu_1218_p3, ap_CS_fsm_state34, ap_CS_fsm_state35, tmp_72_fu_2476_p2, ap_CS_fsm_state40, tmp_78_fu_2832_p2, ap_block_pp0_stage0_subdone, tmp_61_fu_1534_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1286_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((tmp_6_fu_1307_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_12_fu_1318_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_25_fu_1442_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and ((tmp_61_fu_1534_p2 = ap_const_lv1_0) or (tmp_25_reg_3109 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_115_fu_1552_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_20_fu_1859_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_20_fu_1859_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and ((tmp_59_fu_1941_p2 = ap_const_lv1_0) or (tmp_12_reg_3015 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (tmp_76_fu_2087_p1 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_io) and (tmp_22_fu_2119_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_io) and (grp_fu_1218_p3 = ap_const_lv1_1) and (tmp_22_fu_2119_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                elsif (((grp_fu_1218_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_io) and (tmp_22_fu_2119_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((grp_fu_1218_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state35 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state35) and (tmp_72_fu_2476_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((tmp_78_fu_2832_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    TMP_0_V_1_cast_fu_1813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_reg_3258),13));
    TMP_0_V_1_fu_1810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_reg_3258),64));
    TMP_0_V_4_fu_1899_p2 <= (tmp_28_fu_1895_p1 or ap_phi_mux_p_03180_4_phi_fu_899_p4);
    TMP_0_V_7_fu_1963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_reg_3310),64));
    TMP_0_V_fu_2147_p2 <= (tmp_V_1_reg_3403 xor ap_const_lv64_FFFFFFFFFFFFFFFF);
    TMP_1_V_1_fu_2213_p2 <= (p_5_fu_2207_p2 and TMP_1_V_fu_2201_p2);
    TMP_1_V_fu_2201_p2 <= (tmp_102_fu_2197_p1 and group_tree_V_load_ph_fu_2189_p3);

    addr_layer_map_V_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state34, tmp_9_fu_1313_p1, tmp_66_fu_2391_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            addr_layer_map_V_address0 <= tmp_66_fu_2391_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            addr_layer_map_V_address0 <= tmp_9_fu_1313_p1(7 - 1 downto 0);
        else 
            addr_layer_map_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    addr_layer_map_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            addr_layer_map_V_ce0 <= ap_const_logic_1;
        else 
            addr_layer_map_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    addr_layer_map_V_we0_assign_proc : process(ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            addr_layer_map_V_we0 <= ap_const_logic_1;
        else 
            addr_layer_map_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    addr_tree_map_V_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state34, tmp_9_fu_1313_p1, tmp_66_fu_2391_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            addr_tree_map_V_address0 <= tmp_66_fu_2391_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            addr_tree_map_V_address0 <= tmp_9_fu_1313_p1(7 - 1 downto 0);
        else 
            addr_tree_map_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    addr_tree_map_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            addr_tree_map_V_ce0 <= ap_const_logic_1;
        else 
            addr_tree_map_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    addr_tree_map_V_d0 <= reg_844(8 - 1 downto 0);

    addr_tree_map_V_we0_assign_proc : process(ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            addr_tree_map_V_we0 <= ap_const_logic_1;
        else 
            addr_tree_map_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    alloc_addr_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_state30, ap_CS_fsm_state29, tmp_22_fu_2119_p2, output_addr_V_fu_2142_p1, output_addr_V_1_fu_2374_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            alloc_addr <= output_addr_V_1_fu_2374_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            alloc_addr <= output_addr_V_fu_2142_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (tmp_22_fu_2119_p2 = ap_const_lv1_1))) then 
            alloc_addr <= ap_const_lv32_FFFFFFFF;
        else 
            alloc_addr <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    alloc_addr_ap_vld_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_state30, ap_CS_fsm_state29, tmp_22_fu_2119_p2, ap_reg_ioackin_alloc_addr_ap_ack)
    begin
        if ((((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state29) and (tmp_22_fu_2119_p2 = ap_const_lv1_1)) or ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            alloc_addr_ap_vld <= ap_const_logic_1;
        else 
            alloc_addr_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    alloc_addr_blk_n_assign_proc : process(alloc_addr_ap_ack, ap_CS_fsm_state33, ap_CS_fsm_state30, ap_CS_fsm_state29, tmp_22_fu_2119_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state33) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (tmp_22_fu_2119_p2 = ap_const_lv1_1)))) then 
            alloc_addr_blk_n <= alloc_addr_ap_ack;
        else 
            alloc_addr_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_cmd_ap_ack_assign_proc : process(alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_cmd_ap_ack <= ap_const_logic_1;
        else 
            alloc_cmd_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_cmd_blk_n_assign_proc : process(alloc_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_cmd_blk_n <= alloc_cmd_ap_vld;
        else 
            alloc_cmd_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_free_target_ap_ack_assign_proc : process(alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_free_target_ap_ack <= ap_const_logic_1;
        else 
            alloc_free_target_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_free_target_blk_n_assign_proc : process(alloc_free_target_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_free_target_blk_n <= alloc_free_target_ap_vld;
        else 
            alloc_free_target_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    alloc_size_ap_ack_assign_proc : process(alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_size_ap_ack <= ap_const_logic_1;
        else 
            alloc_size_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_size_blk_n_assign_proc : process(alloc_size_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_size_blk_n <= alloc_size_ap_vld;
        else 
            alloc_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(18);
    ap_CS_fsm_state21 <= ap_CS_fsm(19);
    ap_CS_fsm_state22 <= ap_CS_fsm(20);
    ap_CS_fsm_state23 <= ap_CS_fsm(21);
    ap_CS_fsm_state24 <= ap_CS_fsm(22);
    ap_CS_fsm_state25 <= ap_CS_fsm(23);
    ap_CS_fsm_state26 <= ap_CS_fsm(24);
    ap_CS_fsm_state27 <= ap_CS_fsm(25);
    ap_CS_fsm_state28 <= ap_CS_fsm(26);
    ap_CS_fsm_state29 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(28);
    ap_CS_fsm_state31 <= ap_CS_fsm(29);
    ap_CS_fsm_state32 <= ap_CS_fsm(30);
    ap_CS_fsm_state33 <= ap_CS_fsm(31);
    ap_CS_fsm_state34 <= ap_CS_fsm(32);
    ap_CS_fsm_state35 <= ap_CS_fsm(33);
    ap_CS_fsm_state36 <= ap_CS_fsm(34);
    ap_CS_fsm_state37 <= ap_CS_fsm(35);
    ap_CS_fsm_state38 <= ap_CS_fsm(36);
    ap_CS_fsm_state39 <= ap_CS_fsm(37);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(38);
    ap_CS_fsm_state41 <= ap_CS_fsm(39);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_assign_proc : process(alloc_size_ap_vld, alloc_free_target_ap_vld, alloc_cmd_ap_vld)
    begin
                ap_block_state2 <= ((ap_const_logic_0 = alloc_cmd_ap_vld) or (ap_const_logic_0 = alloc_free_target_ap_vld) or (ap_const_logic_0 = alloc_size_ap_vld));
    end process;


    ap_block_state29_io_assign_proc : process(tmp_22_fu_2119_p2, ap_sig_ioackin_alloc_addr_ap_ack)
    begin
                ap_block_state29_io <= ((ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_0) and (tmp_22_fu_2119_p2 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state18_assign_proc : process(tmp_20_fu_1859_p2)
    begin
        if ((tmp_20_fu_1859_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_03180_1_phi_fu_1105_p4_assign_proc : process(p_4_cast_reg_3365, tmp_98_reg_3415, ap_CS_fsm_state34, p_03180_1_reg_1102)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) and (tmp_98_reg_3415 = ap_const_lv1_1))) then 
            ap_phi_mux_p_03180_1_phi_fu_1105_p4 <= p_4_cast_reg_3365;
        else 
            ap_phi_mux_p_03180_1_phi_fu_1105_p4 <= p_03180_1_reg_1102;
        end if; 
    end process;


    ap_phi_mux_p_03180_4_phi_fu_899_p4_assign_proc : process(p_03180_4_reg_896, ap_CS_fsm_pp0_stage0, tmp_20_reg_3289, TMP_0_V_4_reg_3293, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3289 = ap_const_lv1_1))) then 
            ap_phi_mux_p_03180_4_phi_fu_899_p4 <= TMP_0_V_4_reg_3293;
        else 
            ap_phi_mux_p_03180_4_phi_fu_899_p4 <= p_03180_4_reg_896;
        end if; 
    end process;


    ap_phi_mux_p_03208_1_in_in_phi_fu_890_p4_assign_proc : process(p_03208_1_in_in_reg_887, ap_CS_fsm_pp0_stage0, tmp_20_reg_3289, p_Result_12_reg_3299, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3289 = ap_const_lv1_1))) then 
            ap_phi_mux_p_03208_1_in_in_phi_fu_890_p4 <= p_Result_12_reg_3299;
        else 
            ap_phi_mux_p_03208_1_in_in_phi_fu_890_p4 <= p_03208_1_in_in_reg_887;
        end if; 
    end process;


    ap_phi_mux_p_03232_2_in_phi_fu_872_p4_assign_proc : process(p_03232_2_in_reg_869, now1_V_2_reg_3279, ap_CS_fsm_pp0_stage0, tmp_20_reg_3289, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3289 = ap_const_lv1_1))) then 
            ap_phi_mux_p_03232_2_in_phi_fu_872_p4 <= now1_V_2_reg_3279;
        else 
            ap_phi_mux_p_03232_2_in_phi_fu_872_p4 <= p_03232_2_in_reg_869;
        end if; 
    end process;


    ap_phi_mux_p_03236_1_in_phi_fu_881_p4_assign_proc : process(p_03236_1_in_reg_878, ap_CS_fsm_pp0_stage0, tmp_20_reg_3289, r_V_8_fu_1918_p2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3289 = ap_const_lv1_1))) then 
            ap_phi_mux_p_03236_1_in_phi_fu_881_p4 <= r_V_8_fu_1918_p2;
        else 
            ap_phi_mux_p_03236_1_in_phi_fu_881_p4 <= p_03236_1_in_reg_878;
        end if; 
    end process;


    ap_phi_mux_p_7_phi_fu_1086_p4_assign_proc : process(tmp_98_reg_3415, tmp_43_reg_3496, ap_CS_fsm_state34, p_7_reg_1082)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) and (tmp_98_reg_3415 = ap_const_lv1_1))) then 
            ap_phi_mux_p_7_phi_fu_1086_p4 <= tmp_43_reg_3496;
        else 
            ap_phi_mux_p_7_phi_fu_1086_p4 <= p_7_reg_1082;
        end if; 
    end process;


    ap_phi_mux_p_8_phi_fu_1096_p4_assign_proc : process(tmp_98_reg_3415, r_V_11_reg_3501, ap_CS_fsm_state34, p_8_reg_1093)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) and (tmp_98_reg_3415 = ap_const_lv1_1))) then 
            ap_phi_mux_p_8_phi_fu_1096_p4 <= r_V_11_reg_3501;
        else 
            ap_phi_mux_p_8_phi_fu_1096_p4 <= p_8_reg_1093;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_alloc_addr_ap_ack_assign_proc : process(alloc_addr_ap_ack, ap_reg_ioackin_alloc_addr_ap_ack)
    begin
        if ((ap_reg_ioackin_alloc_addr_ap_ack = ap_const_logic_0)) then 
            ap_sig_ioackin_alloc_addr_ap_ack <= alloc_addr_ap_ack;
        else 
            ap_sig_ioackin_alloc_addr_ap_ack <= ap_const_logic_1;
        end if; 
    end process;

    buddy_tree_V_0_addr_6_gep_fu_555_p3 <= newIndex4_reg_3375(3 - 1 downto 0);

    buddy_tree_V_0_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state29, ap_CS_fsm_state5, tmp_12_reg_3015, newIndex2_fu_1344_p1, newIndex2_reg_3040, ap_CS_fsm_state6, ap_CS_fsm_state8, newIndex_fu_1458_p1, newIndex_reg_3113, ap_CS_fsm_state10, ap_CS_fsm_state11, newIndex15_fu_1636_p1, newIndex15_reg_3186, ap_CS_fsm_state13, newIndex11_fu_1957_p1, newIndex11_reg_3318, ap_CS_fsm_state21, tmp_59_fu_1941_p2, ap_CS_fsm_state23, ap_CS_fsm_state25, newIndex4_fu_2101_p1, newIndex4_reg_3375, ap_CS_fsm_state35, newIndex17_fu_2612_p1, newIndex23_reg_3614, ap_CS_fsm_state36, buddy_tree_V_0_addr_6_gep_fu_555_p3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buddy_tree_V_0_address0 <= newIndex23_reg_3614(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            buddy_tree_V_0_address0 <= newIndex17_fu_2612_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            buddy_tree_V_0_address0 <= buddy_tree_V_0_addr_6_gep_fu_555_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            buddy_tree_V_0_address0 <= newIndex4_reg_3375(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            buddy_tree_V_0_address0 <= newIndex4_fu_2101_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            buddy_tree_V_0_address0 <= newIndex11_reg_3318(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_logic_1 = ap_CS_fsm_state21) and ((tmp_59_fu_1941_p2 = ap_const_lv1_0) or (tmp_12_reg_3015 = ap_const_lv1_0))))) then 
            buddy_tree_V_0_address0 <= ap_const_lv3_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_59_fu_1941_p2 = ap_const_lv1_1) and (tmp_12_reg_3015 = ap_const_lv1_1))) then 
            buddy_tree_V_0_address0 <= newIndex11_fu_1957_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buddy_tree_V_0_address0 <= newIndex15_reg_3186(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buddy_tree_V_0_address0 <= newIndex15_fu_1636_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buddy_tree_V_0_address0 <= newIndex_reg_3113(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buddy_tree_V_0_address0 <= newIndex_fu_1458_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buddy_tree_V_0_address0 <= newIndex2_reg_3040(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buddy_tree_V_0_address0 <= newIndex2_fu_1344_p1(3 - 1 downto 0);
        else 
            buddy_tree_V_0_address0 <= "XXX";
        end if; 
    end process;


    buddy_tree_V_0_address1_assign_proc : process(tmp_reg_2964, tmp_22_reg_3411, tmp_110_reg_3506, ap_CS_fsm_state35, newIndex17_reg_3589, newIndex23_fu_2638_p1, ap_CS_fsm_state36, newIndex19_fu_2848_p1, newIndex19_reg_3654, ap_CS_fsm_state40, tmp_78_fu_2832_p2, ap_CS_fsm_state41, ap_CS_fsm_state38, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            buddy_tree_V_0_address1 <= newIndex19_reg_3654(3 - 1 downto 0);
        elsif (((tmp_78_fu_2832_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            buddy_tree_V_0_address1 <= newIndex19_fu_2848_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or ((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_78_fu_2832_p2 = ap_const_lv1_1)) or ((tmp_22_reg_3411 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38) and (tmp_110_reg_3506 = ap_const_lv1_1) and (tmp_reg_2964 = ap_const_lv1_1)) or ((tmp_110_reg_3506 = ap_const_lv1_0) and (tmp_22_reg_3411 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38) and (tmp_reg_2964 = ap_const_lv1_1)))) then 
            buddy_tree_V_0_address1 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buddy_tree_V_0_address1 <= newIndex17_reg_3589(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            buddy_tree_V_0_address1 <= newIndex23_fu_2638_p1(3 - 1 downto 0);
        else 
            buddy_tree_V_0_address1 <= "XXX";
        end if; 
    end process;


    buddy_tree_V_0_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state29, ap_sig_ioackin_alloc_addr_ap_ack, ap_block_state29_io, ap_CS_fsm_state5, tmp_12_reg_3015, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state21, tmp_59_fu_1941_p2, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_59_fu_1941_p2 = ap_const_lv1_1) and (tmp_12_reg_3015 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and ((tmp_59_fu_1941_p2 = ap_const_lv1_0) or (tmp_12_reg_3015 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_io)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)))) then 
            buddy_tree_V_0_ce0 <= ap_const_logic_1;
        else 
            buddy_tree_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_0_ce1_assign_proc : process(tmp_reg_2964, tmp_22_reg_3411, tmp_110_reg_3506, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state40, tmp_78_fu_2832_p2, ap_CS_fsm_state41, ap_CS_fsm_state38, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state37) or ((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_78_fu_2832_p2 = ap_const_lv1_1)) or ((tmp_78_fu_2832_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((tmp_22_reg_3411 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38) and (tmp_110_reg_3506 = ap_const_lv1_1) and (tmp_reg_2964 = ap_const_lv1_1)) or ((tmp_110_reg_3506 = ap_const_lv1_0) and (tmp_22_reg_3411 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38) and (tmp_reg_2964 = ap_const_lv1_1)))) then 
            buddy_tree_V_0_ce1 <= ap_const_logic_1;
        else 
            buddy_tree_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_0_d0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state6, p_Result_s_fu_1375_p4, tmp_37_reg_3129, ap_CS_fsm_state10, r_V_18_reg_3207, ap_CS_fsm_state13, tmp_64_reg_3343, ap_CS_fsm_state23, ap_CS_fsm_state36, tmp_56_fu_2159_p2, p_Result_7_fu_2703_p4, ap_CS_fsm_state24, storemerge_fu_2075_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buddy_tree_V_0_d0 <= p_Result_7_fu_2703_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            buddy_tree_V_0_d0 <= tmp_56_fu_2159_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            buddy_tree_V_0_d0 <= storemerge_fu_2075_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            buddy_tree_V_0_d0 <= tmp_64_reg_3343;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buddy_tree_V_0_d0 <= r_V_18_reg_3207;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buddy_tree_V_0_d0 <= tmp_37_reg_3129;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buddy_tree_V_0_d0 <= p_Result_s_fu_1375_p4;
        else 
            buddy_tree_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buddy_tree_V_0_d1_assign_proc : process(tmp_reg_2964, tmp_22_reg_3411, tmp_110_reg_3506, ap_CS_fsm_state36, ap_CS_fsm_state41, ap_CS_fsm_state38, r_V_20_fu_2656_p2, r_V_16_fu_2765_p2, p_Result_6_fu_2776_p4, tmp_129_fu_2899_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            buddy_tree_V_0_d1 <= tmp_129_fu_2899_p4;
        elsif (((tmp_22_reg_3411 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38) and (tmp_110_reg_3506 = ap_const_lv1_1) and (tmp_reg_2964 = ap_const_lv1_1))) then 
            buddy_tree_V_0_d1 <= p_Result_6_fu_2776_p4;
        elsif (((tmp_110_reg_3506 = ap_const_lv1_0) and (tmp_22_reg_3411 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38) and (tmp_reg_2964 = ap_const_lv1_1))) then 
            buddy_tree_V_0_d1 <= r_V_16_fu_2765_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buddy_tree_V_0_d1 <= r_V_20_fu_2656_p2;
        else 
            buddy_tree_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buddy_tree_V_0_we0_assign_proc : process(ap_CS_fsm_state30, ap_sig_ioackin_alloc_addr_ap_ack, tmp_6_reg_2991, ap_CS_fsm_state6, tmp_97_reg_3099, tmp_25_reg_3109, ap_CS_fsm_state10, tmp_124_reg_3181, ap_CS_fsm_state13, tmp_107_reg_3339, ap_CS_fsm_state23, tmp_76_reg_3370, tmp_72_reg_3579, tmp_84_reg_3605, tmp_132_reg_3609, ap_CS_fsm_state36, tmp_71_fu_1364_p1, ap_CS_fsm_state24)
    begin
        if ((((tmp_132_reg_3609 = ap_const_lv1_0) and (tmp_84_reg_3605 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_72_reg_3579 = ap_const_lv1_1)) or ((tmp_107_reg_3339 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_124_reg_3181 = ap_const_lv1_1)) or ((tmp_25_reg_3109 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_97_reg_3099 = ap_const_lv1_1)) or ((tmp_71_fu_1364_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_76_reg_3370 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (tmp_6_reg_2991 = ap_const_lv1_1)))) then 
            buddy_tree_V_0_we0 <= ap_const_logic_1;
        else 
            buddy_tree_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_0_we1_assign_proc : process(tmp_reg_2964, tmp_22_reg_3411, tmp_110_reg_3506, tmp_121_reg_3570, tmp_72_reg_3579, ap_CS_fsm_state36, ap_CS_fsm_state41, tmp_127_fu_2644_p1, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or ((tmp_127_fu_2644_p1 = ap_const_lv1_0) and (tmp_121_reg_3570 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_72_reg_3579 = ap_const_lv1_1)) or ((tmp_22_reg_3411 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38) and (tmp_110_reg_3506 = ap_const_lv1_1) and (tmp_reg_2964 = ap_const_lv1_1)) or ((tmp_110_reg_3506 = ap_const_lv1_0) and (tmp_22_reg_3411 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38) and (tmp_reg_2964 = ap_const_lv1_1)))) then 
            buddy_tree_V_0_we1 <= ap_const_logic_1;
        else 
            buddy_tree_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buddy_tree_V_1_addr_6_gep_fu_563_p3 <= newIndex4_reg_3375(3 - 1 downto 0);

    buddy_tree_V_1_address0_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_state30, ap_CS_fsm_state29, ap_CS_fsm_state5, newIndex2_fu_1344_p1, newIndex2_reg_3040, ap_CS_fsm_state6, ap_CS_fsm_state8, newIndex_fu_1458_p1, newIndex_reg_3113, ap_CS_fsm_state10, ap_CS_fsm_state11, newIndex15_fu_1636_p1, newIndex15_reg_3186, ap_CS_fsm_state13, newIndex11_fu_1957_p1, newIndex11_reg_3318, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, newIndex4_fu_2101_p1, newIndex4_reg_3375, ap_CS_fsm_state34, ap_CS_fsm_state35, newIndex17_fu_2612_p1, newIndex23_reg_3614, ap_CS_fsm_state36, buddy_tree_V_1_addr_6_gep_fu_563_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buddy_tree_V_1_address0 <= newIndex23_reg_3614(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            buddy_tree_V_1_address0 <= newIndex17_fu_2612_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            buddy_tree_V_1_address0 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            buddy_tree_V_1_address0 <= buddy_tree_V_1_addr_6_gep_fu_563_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            buddy_tree_V_1_address0 <= newIndex4_reg_3375(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            buddy_tree_V_1_address0 <= newIndex4_fu_2101_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            buddy_tree_V_1_address0 <= newIndex11_reg_3318(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            buddy_tree_V_1_address0 <= newIndex11_fu_1957_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buddy_tree_V_1_address0 <= newIndex15_reg_3186(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buddy_tree_V_1_address0 <= newIndex15_fu_1636_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buddy_tree_V_1_address0 <= newIndex_reg_3113(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buddy_tree_V_1_address0 <= newIndex_fu_1458_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buddy_tree_V_1_address0 <= newIndex2_reg_3040(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buddy_tree_V_1_address0 <= newIndex2_fu_1344_p1(3 - 1 downto 0);
        else 
            buddy_tree_V_1_address0 <= "XXX";
        end if; 
    end process;


    buddy_tree_V_1_address1_assign_proc : process(ap_CS_fsm_state35, newIndex17_reg_3589, newIndex23_fu_2638_p1, ap_CS_fsm_state36, ap_CS_fsm_state40, newIndex21_fu_2869_p1, newIndex21_reg_3664, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            buddy_tree_V_1_address1 <= newIndex21_reg_3664(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            buddy_tree_V_1_address1 <= newIndex21_fu_2869_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buddy_tree_V_1_address1 <= newIndex17_reg_3589(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            buddy_tree_V_1_address1 <= newIndex23_fu_2638_p1(3 - 1 downto 0);
        else 
            buddy_tree_V_1_address1 <= "XXX";
        end if; 
    end process;


    buddy_tree_V_1_ce0_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_state30, ap_CS_fsm_state29, ap_sig_ioackin_alloc_addr_ap_ack, ap_block_state29_io, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_io)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)))) then 
            buddy_tree_V_1_ce0 <= ap_const_logic_1;
        else 
            buddy_tree_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_1_ce1_assign_proc : process(ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state40, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            buddy_tree_V_1_ce1 <= ap_const_logic_1;
        else 
            buddy_tree_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_1_d0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state6, p_Result_s_fu_1375_p4, tmp_37_reg_3129, ap_CS_fsm_state10, r_V_18_reg_3207, ap_CS_fsm_state13, tmp_64_reg_3343, ap_CS_fsm_state23, ap_CS_fsm_state34, ap_CS_fsm_state36, tmp_56_fu_2159_p2, tmp_65_fu_2384_p2, p_Result_7_fu_2703_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buddy_tree_V_1_d0 <= p_Result_7_fu_2703_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            buddy_tree_V_1_d0 <= tmp_65_fu_2384_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            buddy_tree_V_1_d0 <= tmp_56_fu_2159_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            buddy_tree_V_1_d0 <= tmp_64_reg_3343;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buddy_tree_V_1_d0 <= r_V_18_reg_3207;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buddy_tree_V_1_d0 <= tmp_37_reg_3129;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buddy_tree_V_1_d0 <= p_Result_s_fu_1375_p4;
        else 
            buddy_tree_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buddy_tree_V_1_d1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state41, r_V_20_fu_2656_p2, tmp_130_fu_2928_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            buddy_tree_V_1_d1 <= tmp_130_fu_2928_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buddy_tree_V_1_d1 <= r_V_20_fu_2656_p2;
        else 
            buddy_tree_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buddy_tree_V_1_we0_assign_proc : process(ap_CS_fsm_state30, ap_sig_ioackin_alloc_addr_ap_ack, ap_CS_fsm_state6, tmp_97_reg_3099, tmp_25_reg_3109, ap_CS_fsm_state10, tmp_124_reg_3181, ap_CS_fsm_state13, tmp_107_reg_3339, ap_CS_fsm_state23, tmp_76_reg_3370, tmp_98_reg_3415, ap_CS_fsm_state34, tmp_72_reg_3579, tmp_84_reg_3605, tmp_132_reg_3609, ap_CS_fsm_state36, tmp_71_fu_1364_p1)
    begin
        if ((((tmp_84_reg_3605 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_132_reg_3609 = ap_const_lv1_1) and (tmp_72_reg_3579 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state34) and (tmp_98_reg_3415 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state23) and (tmp_107_reg_3339 = ap_const_lv1_1)) or ((tmp_124_reg_3181 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((tmp_25_reg_3109 = ap_const_lv1_0) and (tmp_97_reg_3099 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_71_fu_1364_p1 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (tmp_76_reg_3370 = ap_const_lv1_1)))) then 
            buddy_tree_V_1_we0 <= ap_const_logic_1;
        else 
            buddy_tree_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buddy_tree_V_1_we1_assign_proc : process(tmp_121_reg_3570, tmp_72_reg_3579, ap_CS_fsm_state36, ap_CS_fsm_state41, tmp_127_fu_2644_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or ((tmp_121_reg_3570 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_127_fu_2644_p1 = ap_const_lv1_1) and (tmp_72_reg_3579 = ap_const_lv1_1)))) then 
            buddy_tree_V_1_we1 <= ap_const_logic_1;
        else 
            buddy_tree_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buddy_tree_V_load_1_s_fu_1499_p3 <= 
        buddy_tree_V_0_q0 when (tmp_97_reg_3099(0) = '1') else 
        buddy_tree_V_1_q0;
    buddy_tree_V_load_2_s_fu_2152_p3 <= 
        buddy_tree_V_1_q0 when (tmp_76_reg_3370(0) = '1') else 
        buddy_tree_V_0_q0;
    buddy_tree_V_load_4_s_fu_1984_p3 <= 
        buddy_tree_V_1_q0 when (tmp_107_fu_1980_p1(0) = '1') else 
        buddy_tree_V_0_q0;
    cnt_2_fu_2669_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(cnt_1_fu_248));
    cnt_fu_1664_p2 <= std_logic_vector(unsigned(reg_844) + unsigned(ap_const_lv32_1));
    free_target_V_fu_1266_p1 <= alloc_free_target(16 - 1 downto 0);

    group_tree_V_0_address0_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_state15, newIndex6_fu_1787_p1, newIndex6_reg_3233, ap_CS_fsm_state20, newIndex8_fu_2179_p1, newIndex8_reg_3439, ap_CS_fsm_state31, ap_CS_fsm_state34, newIndex13_fu_2450_p1, newIndex13_reg_3554, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            group_tree_V_0_address0 <= newIndex13_reg_3554(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            group_tree_V_0_address0 <= newIndex13_fu_2450_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            group_tree_V_0_address0 <= newIndex8_reg_3439(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            group_tree_V_0_address0 <= newIndex8_fu_2179_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            group_tree_V_0_address0 <= newIndex6_reg_3233(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            group_tree_V_0_address0 <= newIndex6_fu_1787_p1(6 - 1 downto 0);
        else 
            group_tree_V_0_address0 <= "XXXXXX";
        end if; 
    end process;


    group_tree_V_0_ce0_assign_proc : process(ap_CS_fsm_state33, ap_sig_ioackin_alloc_addr_ap_ack, ap_CS_fsm_state15, ap_CS_fsm_state20, ap_CS_fsm_state31, ap_CS_fsm_state34, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)))) then 
            group_tree_V_0_ce0 <= ap_const_logic_1;
        else 
            group_tree_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    group_tree_V_0_d0_assign_proc : process(ap_CS_fsm_state33, tmp_94_fu_1923_p1, ap_CS_fsm_state20, tmp_55_reg_3490, ap_CS_fsm_state39, p_6_fu_2818_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            group_tree_V_0_d0 <= p_6_fu_2818_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            group_tree_V_0_d0 <= tmp_55_reg_3490;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            group_tree_V_0_d0 <= tmp_94_fu_1923_p1;
        else 
            group_tree_V_0_d0 <= "XXXX";
        end if; 
    end process;


    group_tree_V_0_we0_assign_proc : process(ap_CS_fsm_state33, ap_sig_ioackin_alloc_addr_ap_ack, tmp_57_reg_3254, ap_CS_fsm_state20, tmp_101_reg_3465, ap_CS_fsm_state39, tmp_117_fu_2796_p1)
    begin
        if ((((tmp_117_fu_2796_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((tmp_57_reg_3254 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((tmp_101_reg_3465 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)))) then 
            group_tree_V_0_we0 <= ap_const_logic_1;
        else 
            group_tree_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    group_tree_V_1_address0_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_state15, newIndex6_fu_1787_p1, newIndex6_reg_3233, ap_CS_fsm_state20, newIndex8_fu_2179_p1, newIndex8_reg_3439, ap_CS_fsm_state31, ap_CS_fsm_state34, newIndex13_fu_2450_p1, newIndex13_reg_3554, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            group_tree_V_1_address0 <= newIndex13_reg_3554(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            group_tree_V_1_address0 <= newIndex13_fu_2450_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            group_tree_V_1_address0 <= newIndex8_reg_3439(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            group_tree_V_1_address0 <= newIndex8_fu_2179_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            group_tree_V_1_address0 <= newIndex6_reg_3233(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            group_tree_V_1_address0 <= newIndex6_fu_1787_p1(6 - 1 downto 0);
        else 
            group_tree_V_1_address0 <= "XXXXXX";
        end if; 
    end process;


    group_tree_V_1_ce0_assign_proc : process(ap_CS_fsm_state33, ap_sig_ioackin_alloc_addr_ap_ack, ap_CS_fsm_state15, ap_CS_fsm_state20, ap_CS_fsm_state31, ap_CS_fsm_state34, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1)))) then 
            group_tree_V_1_ce0 <= ap_const_logic_1;
        else 
            group_tree_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    group_tree_V_1_d0_assign_proc : process(ap_CS_fsm_state33, tmp_94_fu_1923_p1, ap_CS_fsm_state20, tmp_55_reg_3490, ap_CS_fsm_state39, p_6_fu_2818_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            group_tree_V_1_d0 <= p_6_fu_2818_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            group_tree_V_1_d0 <= tmp_55_reg_3490;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            group_tree_V_1_d0 <= tmp_94_fu_1923_p1;
        else 
            group_tree_V_1_d0 <= "XXXX";
        end if; 
    end process;


    group_tree_V_1_we0_assign_proc : process(ap_CS_fsm_state33, ap_sig_ioackin_alloc_addr_ap_ack, tmp_57_reg_3254, ap_CS_fsm_state20, tmp_101_reg_3465, ap_CS_fsm_state39, tmp_117_fu_2796_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state39) and (tmp_117_fu_2796_p1 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_57_reg_3254 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_sig_ioackin_alloc_addr_ap_ack = ap_const_logic_1) and (tmp_101_reg_3465 = ap_const_lv1_1)))) then 
            group_tree_V_1_we0 <= ap_const_logic_1;
        else 
            group_tree_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    group_tree_V_load_3_s_fu_2800_p3 <= 
        group_tree_V_1_q0 when (tmp_117_fu_2796_p1(0) = '1') else 
        group_tree_V_0_q0;
    group_tree_V_load_ph_fu_2189_p3 <= 
        group_tree_V_1_q0 when (tmp_101_fu_2185_p1(0) = '1') else 
        group_tree_V_0_q0;
    group_tree_mask_V_address0 <= tmp_36_fu_2173_p1(3 - 1 downto 0);

    group_tree_mask_V_ce0_assign_proc : process(ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            group_tree_mask_V_ce0 <= ap_const_logic_1;
        else 
            group_tree_mask_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1218_p3 <= p_s_reg_958(3 downto 3);
    grp_fu_1226_p2 <= std_logic_vector(signed(ap_const_lv4_8) - signed(p_s_reg_958));
    grp_fu_1232_p1 <= reg_844(8 - 1 downto 0);
    grp_fu_1232_p4 <= grp_fu_1232_p1(7 downto 1);
    i_assign_1_fu_2055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03208_2_reg_937),32));
    i_assign_2_fu_2772_p0 <= reg_844(8 - 1 downto 0);
    i_assign_2_fu_2772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_assign_2_fu_2772_p0),32));
    i_assign_3_1_fu_2924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_7_1_fu_2910_p4),32));
    i_assign_3_fu_2895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_s_fu_2885_p4),32));
    i_assign_4_fu_2692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_7_fu_260),32));
    i_assign_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_tree_map_V_load_reg_3020),32));
    lhs_V_3_cast_fu_1763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_tree_V_5_fu_1757_p2),14));
    lhs_V_3_fu_1651_p3 <= 
        buddy_tree_V_0_q0 when (tmp_124_reg_3181(0) = '1') else 
        buddy_tree_V_1_q0;
    lhs_V_4_fu_2648_p3 <= 
        buddy_tree_V_1_q0 when (tmp_127_fu_2644_p1(0) = '1') else 
        buddy_tree_V_0_q0;
    lhs_V_fu_1796_p3 <= 
        group_tree_V_1_q0 when (tmp_57_fu_1793_p1(0) = '1') else 
        group_tree_V_0_q0;
    loc1_V_10_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_tree_map_V_q0),13));
    loc1_V_11_fu_1428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_fu_1418_p4),13));
    loc1_V_6_fu_2718_p4 <= loc1_V_7_fu_260(12 downto 1);
    loc1_V_7_1_fu_2910_p4 <= p_03220_5_in_reg_1131(7 downto 2);
    loc1_V_8_cast_fu_2403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1232_p4),13));
    loc1_V_9_cast_cast_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_tree_map_V_q0),11));
    loc1_V_9_fu_2728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_6_fu_2718_p4),13));
    loc1_V_fu_1418_p4 <= p_03220_8_in_reg_786(12 downto 1);
    loc1_V_s_fu_2885_p4 <= p_03220_5_in_reg_1131(7 downto 1);
    loc2_V_2_cast_fu_2421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc2_V_3_fu_2413_p3),13));
    loc2_V_2_fu_2663_p2 <= std_logic_vector(shift_left(unsigned(loc2_V_fu_256),to_integer(unsigned('0' & ap_const_lv13_1(13-1 downto 0)))));
    loc2_V_3_fu_2413_p1 <= reg_844(8 - 1 downto 0);
    loc2_V_3_fu_2413_p3 <= (loc2_V_3_fu_2413_p1 & ap_const_lv1_0);
    loc_tree_V_2_fu_2305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_2297_p3),13));
    loc_tree_V_5_fu_1757_p2 <= std_logic_vector(unsigned(tmp_14_fu_1749_p2) + unsigned(tmp_16_fu_1753_p1));
    loc_tree_V_fu_1879_p2 <= std_logic_vector(unsigned(tmp_24_fu_1875_p1) + unsigned(ap_const_lv13_1FFF));

    mark_mask_V_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state34, tmp_17_fu_1773_p1, tmp_69_fu_2445_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            mark_mask_V_address0 <= tmp_69_fu_2445_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            mark_mask_V_address0 <= tmp_17_fu_1773_p1(5 - 1 downto 0);
        else 
            mark_mask_V_address0 <= "XXXXX";
        end if; 
    end process;


    mark_mask_V_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            mark_mask_V_ce0 <= ap_const_logic_1;
        else 
            mark_mask_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mask_V_load26_phi_ca_fu_1582_p3 <= 
        ap_const_lv64_FFFFFFFF when (tmp_120_fu_1574_p3(0) = '1') else 
        ap_const_lv64_F;
    mask_V_load27_phi_ca_fu_1614_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (tmp_120_fu_1574_p3(0) = '1') else 
        ap_const_lv64_FF;
    mask_V_load_113_phi_s_fu_2536_p3 <= 
        ap_const_lv64_FFFFFFFF when (tmp_126_fu_2496_p3(0) = '1') else 
        ap_const_lv64_F;
    mask_V_load_114_phi_s_fu_2504_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (tmp_126_fu_2496_p3(0) = '1') else 
        ap_const_lv64_FF;
    mask_V_load_1_phi_fu_2578_p3 <= 
        mask_V_load_113_phi_s_fu_2536_p3 when (sel_tmp4_fu_2572_p2(0) = '1') else 
        sel_tmp3_fu_2564_p3;
    newIndex10_fu_1947_p4 <= p_03232_3_reg_916(3 downto 1);
    newIndex11_fu_1957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex10_fu_1947_p4),64));
    newIndex13_fu_2450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1232_p4),64));
    newIndex14_fu_1626_p4 <= p_Repl2_7_fu_1546_p2(3 downto 1);
    newIndex15_fu_1636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex14_fu_1626_p4),64));
    newIndex16_fu_2602_p4 <= p_1_reg_1111(3 downto 1);
    newIndex17_fu_2612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex16_fu_2602_p4),64));
    newIndex18_fu_2838_p4 <= p_03228_1_reg_1141(2 downto 1);
    newIndex19_fu_2848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex18_fu_2838_p4),64));
    newIndex1_fu_1334_p4 <= addr_layer_map_V_q0(3 downto 1);
    newIndex20_fu_2859_p4 <= now2_V_fu_2853_p2(2 downto 1);
    newIndex21_fu_2869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex20_fu_2859_p4),64));
    newIndex22_fu_2628_p4 <= p_2_reg_1121(3 downto 1);
    newIndex23_fu_2638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex22_fu_2628_p4),64));
    newIndex2_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex1_fu_1334_p4),64));
    newIndex3_fu_2091_p4 <= p_s_reg_958(3 downto 1);
    newIndex4_fu_2101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex3_fu_2091_p4),64));
    newIndex5_fu_1778_p4 <= addr_tree_map_V_load_reg_3020(7 downto 1);
    newIndex6_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex5_fu_1778_p4),64));
    newIndex8_fu_2179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1232_p4),64));
    newIndex9_fu_1448_p4 <= now1_V_1_fu_1436_p2(3 downto 1);
    newIndex_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex9_fu_1448_p4),64));
    new_loc1_V_fu_2318_p2 <= std_logic_vector(unsigned(tmp_48_fu_2313_p2) - unsigned(tmp_47_fu_2309_p1));
    not_s_fu_1935_p2 <= "0" when (p_03232_3_reg_916 = ap_const_lv4_0) else "1";
    now1_V_1_fu_1436_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(p_03232_1_in_reg_795));
    now1_V_2_fu_1835_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(ap_phi_mux_p_03232_2_in_phi_fu_872_p4));
    now1_V_3_fu_2025_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(p_03232_3_reg_916));
    now1_V_5_fu_2747_p2 <= std_logic_vector(unsigned(tmp_85_fu_2743_p1) + unsigned(p_1_reg_1111));
    now1_V_6_fu_2397_p2 <= std_logic_vector(unsigned(p_s_reg_958) + unsigned(ap_const_lv4_1));
    now2_V_1_fu_2756_p2 <= std_logic_vector(unsigned(p_2_reg_1121) - unsigned(tmp_86_fu_2753_p1));
    now2_V_3_fu_2407_p2 <= std_logic_vector(unsigned(p_s_reg_958) + unsigned(ap_const_lv4_F));
    now2_V_fu_2853_p2 <= std_logic_vector(unsigned(p_03228_1_reg_1141) + unsigned(ap_const_lv3_7));
    now2_V_s_fu_2874_p2 <= std_logic_vector(unsigned(p_03228_1_reg_1141) + unsigned(ap_const_lv3_6));
    op2_assign_1_fu_1970_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & tmp_62_fu_1966_p1(31-1 downto 0)))));
    op2_assign_6_fu_2737_p2 <= "0" when (p_1_reg_1111 = ap_const_lv4_8) else "1";
    op2_assign_7_fu_2470_p2 <= "0" when (p_2_reg_1121 = ap_const_lv4_0) else "1";
    op2_assign_8_fu_1489_p2 <= std_logic_vector(shift_left(unsigned(tmp_32_fu_1482_p1),to_integer(unsigned('0' & tmp_34_fu_1486_p1(31-1 downto 0)))));
    op2_assign_fu_2379_p2 <= (tmp_V_1_reg_3403 xor ap_const_lv64_FFFFFFFFFFFFFFFF);
    op2_assign_s_fu_1889_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & tmp_27_fu_1885_p1(31-1 downto 0)))));
    output_addr_V_1_fu_2374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_11_fu_2366_p3),32));
    output_addr_V_fu_2142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_13_fu_2138_p1),32));
    p_03208_1_in_fu_1865_p4 <= ap_phi_mux_p_03208_1_in_in_phi_fu_890_p4(12 downto 1);
    p_4_cast_fu_2083_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_4_reg_1032),64));
    p_5_fu_2207_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(TMP_1_V_fu_2201_p2));
    p_6_cast_fu_2826_p2 <= (tmp_70_fu_2808_p2 and tmp_118_fu_2814_p1);
    p_6_fu_2818_p2 <= (rhs_i_i_fu_2790_p2 and group_tree_V_load_3_s_fu_2800_p3);
    p_Repl2_5_fu_2059_p2 <= "0" when (tmp_122_fu_2045_p1 = ap_const_lv2_0) else "1";
    p_Repl2_6_fu_2880_p2 <= "0" when (p_6_cast_reg_3646 = ap_const_lv2_0) else "1";
    p_Repl2_7_fu_1546_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(p_03228_2_in_reg_816));
    p_Repl2_s_fu_1540_p2 <= std_logic_vector(shift_left(unsigned(p_03212_3_in_reg_825),to_integer(unsigned('0' & ap_const_lv13_1(13-1 downto 0)))));
    
    p_Result_10_fu_1512_p4_proc : process(loc1_V_11_reg_3094)
    begin
        p_Result_10_fu_1512_p4 <= loc1_V_11_reg_3094;
        p_Result_10_fu_1512_p4(0) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_11_fu_1816_p4_proc : process(loc_tree_V_5_reg_3228)
    begin
        p_Result_11_fu_1816_p4 <= loc_tree_V_5_reg_3228;
        p_Result_11_fu_1816_p4(0) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_12_fu_1905_p4_proc : process(loc_tree_V_fu_1879_p2)
    begin
        p_Result_12_fu_1905_p4 <= loc_tree_V_fu_1879_p2;
        p_Result_12_fu_1905_p4(0) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_13_fu_2002_p4_proc : process(p_Val2_15_cast8_fu_1998_p1)
    begin
        p_Result_13_fu_2002_p4 <= p_Val2_15_cast8_fu_1998_p1;
        p_Result_13_fu_2002_p4(0) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_5_fu_2065_p4_proc : process(buddy_tree_V_0_q0, i_assign_1_fu_2055_p1, p_Repl2_5_fu_2059_p2)
    begin
        p_Result_5_fu_2065_p4 <= buddy_tree_V_0_q0;
        if to_integer(unsigned(i_assign_1_fu_2055_p1)) >= buddy_tree_V_0_q0'low and to_integer(unsigned(i_assign_1_fu_2055_p1)) <= buddy_tree_V_0_q0'high then
            p_Result_5_fu_2065_p4(to_integer(unsigned(i_assign_1_fu_2055_p1))) <= p_Repl2_5_fu_2059_p2(0);
        end if;
    end process;

    
    p_Result_6_fu_2776_p4_proc : process(buddy_tree_V_0_q1, i_assign_2_fu_2772_p1, p_Repl2_6_reg_3679)
    begin
        p_Result_6_fu_2776_p4 <= buddy_tree_V_0_q1;
        if to_integer(unsigned(i_assign_2_fu_2772_p1)) >= buddy_tree_V_0_q1'low and to_integer(unsigned(i_assign_2_fu_2772_p1)) <= buddy_tree_V_0_q1'high then
            p_Result_6_fu_2776_p4(to_integer(unsigned(i_assign_2_fu_2772_p1))) <= p_Repl2_6_reg_3679(0);
        end if;
    end process;

    
    p_Result_7_fu_2703_p4_proc : process(p_Val2_15_fu_2696_p3, i_assign_4_fu_2692_p1)
    begin
        p_Result_7_fu_2703_p4 <= p_Val2_15_fu_2696_p3;
        if to_integer(unsigned(i_assign_4_fu_2692_p1)) >= p_Val2_15_fu_2696_p3'low and to_integer(unsigned(i_assign_4_fu_2692_p1)) <= p_Val2_15_fu_2696_p3'high then
            p_Result_7_fu_2703_p4(to_integer(unsigned(i_assign_4_fu_2692_p1))) <= ap_const_lv1_0(0);
        end if;
    end process;

    
    p_Result_8_fu_1276_p4_proc : process(tmp_size_V_fu_1270_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_8_fu_1276_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_size_V_fu_1270_p2;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_8_fu_1276_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_8_fu_1276_p4_i) := tmp_size_V_fu_1270_p2(16-1-p_Result_8_fu_1276_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_8_fu_1276_p4 <= resvalue(16-1 downto 0);
    end process;

    
    p_Result_9_fu_1396_p4_proc : process(loc1_V_10_reg_3029)
    begin
        p_Result_9_fu_1396_p4 <= loc1_V_10_reg_3029;
        p_Result_9_fu_1396_p4(0) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_s_fu_1375_p4_proc : process(p_Val2_1_fu_1367_p3, i_assign_fu_1361_p1)
    begin
        p_Result_s_fu_1375_p4 <= p_Val2_1_fu_1367_p3;
        if to_integer(unsigned(i_assign_fu_1361_p1)) >= p_Val2_1_fu_1367_p3'low and to_integer(unsigned(i_assign_fu_1361_p1)) <= p_Val2_1_fu_1367_p3'high then
            p_Result_s_fu_1375_p4(to_integer(unsigned(i_assign_fu_1361_p1))) <= ap_const_lv1_1(0);
        end if;
    end process;

    p_Val2_15_cast8_fu_1998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_12_reg_906),13));
    p_Val2_15_fu_2696_p3 <= 
        buddy_tree_V_1_q1 when (tmp_132_reg_3609(0) = '1') else 
        buddy_tree_V_0_q1;
    p_Val2_1_fu_1367_p3 <= 
        buddy_tree_V_1_q0 when (tmp_71_fu_1364_p1(0) = '1') else 
        buddy_tree_V_0_q0;
    r_V_11_fu_2366_p3 <= 
        tmp_52_fu_2350_p2 when (tmp_104_fu_2324_p3(0) = '1') else 
        tmp_105_fu_2362_p1;
    r_V_12_cast_fu_1831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_6_fu_1825_p2),64));
    r_V_13_fu_2138_p1 <= tmp_44_fu_2132_p2(13 - 1 downto 0);
    r_V_14_fu_2016_p2 <= std_logic_vector(shift_right(unsigned(tmp_64_reg_3343),to_integer(unsigned('0' & tmp_67_fu_2012_p1(31-1 downto 0)))));
    r_V_15_fu_2049_p2 <= (rhs_V_3_reg_948 or buddy_tree_V_0_q0);
    r_V_16_fu_2765_p2 <= (rhs_V_4_fu_252 and buddy_tree_V_0_q1);
    r_V_18_fu_1658_p2 <= (r_V_24_fu_1645_p2 or lhs_V_3_fu_1651_p3);
    r_V_19_fu_2590_p2 <= std_logic_vector(shift_left(unsigned(mask_V_load_1_phi_fu_2578_p3),to_integer(unsigned('0' & tmp_82_fu_2586_p1(31-1 downto 0)))));
    r_V_1_fu_1350_p2 <= (ap_const_lv4_8 xor addr_layer_map_V_q0);
    r_V_20_fu_2656_p2 <= (rhs_V_6_reg_3583 and lhs_V_4_fu_2648_p3);
    r_V_21_fu_1302_p2 <= (rhs_V_1_fu_1297_p2 and p_Result_8_reg_2958);
    r_V_24_fu_1645_p2 <= std_logic_vector(shift_left(unsigned(mask_V_load_phi_reg_856),to_integer(unsigned('0' & tmp_77_fu_1642_p1(31-1 downto 0)))));
    r_V_25_fu_1670_p2 <= std_logic_vector(signed(ap_const_lv4_8) - signed(ans_V_reg_3005));
    r_V_2_fu_1409_p2 <= std_logic_vector(shift_right(unsigned(p_Result_s_reg_3069),to_integer(unsigned('0' & tmp_21_fu_1405_p1(31-1 downto 0)))));
    r_V_3_fu_1767_p2 <= std_logic_vector(unsigned(ap_const_lv14_E) + unsigned(lhs_V_3_cast_fu_1763_p1));
    r_V_4_fu_1804_p2 <= (mark_mask_V_q0 or lhs_V_fu_1796_p3);
    r_V_5_fu_2167_p2 <= (p_s_reg_958 xor ap_const_lv4_8);
    r_V_6_fu_1825_p2 <= std_logic_vector(shift_right(unsigned(TMP_0_V_1_cast_fu_1813_p1),to_integer(unsigned('0' & p_Result_11_fu_1816_p4(13-1 downto 0)))));
    r_V_7_fu_1525_p2 <= std_logic_vector(shift_right(unsigned(tmp_37_reg_3129),to_integer(unsigned('0' & tmp_60_fu_1521_p1(31-1 downto 0)))));
    r_V_8_fu_1918_p2 <= std_logic_vector(shift_right(unsigned(TMP_0_V_4_reg_3293),to_integer(unsigned('0' & tmp_29_fu_1915_p1(31-1 downto 0)))));
    r_V_9_fu_2257_p1 <= tmp_46_fu_2251_p2(13 - 1 downto 0);
    r_V_fu_1745_p1 <= tmp_13_fu_1739_p2(13 - 1 downto 0);
    rec_bits_V_1_fu_1530_p1 <= r_V_7_fu_1525_p2(2 - 1 downto 0);
    rec_bits_V_2_fu_2021_p1 <= r_V_14_fu_2016_p2(2 - 1 downto 0);
    rec_bits_V_3_fu_1841_p1 <= ap_phi_mux_p_03236_1_in_phi_fu_881_p4(2 - 1 downto 0);
    rec_bits_V_fu_1414_p1 <= r_V_2_fu_1409_p2(2 - 1 downto 0);
    rev_fu_2464_p2 <= (tmp_121_fu_2456_p3 xor ap_const_lv1_1);
    rhs_V_1_fu_1297_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_8_reg_2958));
    rhs_V_6_fu_2596_p2 <= (r_V_19_fu_2590_p2 xor ap_const_lv64_FFFFFFFFFFFFFFFF);
    rhs_i_i_fu_2790_p2 <= (mark_mask_V_q0 xor ap_const_lv4_F);
    sel_tmp1_fu_2550_p3 <= 
        tmp_80_fu_2512_p5 when (sel_tmp_fu_2544_p2(0) = '1') else 
        mask_V_load_114_phi_s_fu_2504_p3;
    sel_tmp2_fu_2558_p2 <= "1" when (tmp_125_fu_2482_p1 = ap_const_lv2_1) else "0";
    sel_tmp3_fu_2564_p3 <= 
        tmp_81_fu_2524_p5 when (sel_tmp2_fu_2558_p2(0) = '1') else 
        sel_tmp1_fu_2550_p3;
    sel_tmp4_fu_2572_p2 <= "1" when (tmp_125_fu_2482_p1 = ap_const_lv2_2) else "0";
    sel_tmp_fu_2544_p2 <= "1" when (tmp_125_fu_2482_p1 = ap_const_lv2_0) else "0";

    shift_constant_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state31, tmp_15_fu_1356_p1, tmp_36_fu_2173_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            shift_constant_V_address0 <= tmp_36_fu_2173_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            shift_constant_V_address0 <= tmp_15_fu_1356_p1(3 - 1 downto 0);
        else 
            shift_constant_V_address0 <= "XXX";
        end if; 
    end process;


    shift_constant_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            shift_constant_V_ce0 <= ap_const_logic_1;
        else 
            shift_constant_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    size_V_fu_1262_p1 <= alloc_size(16 - 1 downto 0);
    storemerge_fu_2075_p3 <= 
        p_Result_5_fu_2065_p4 when (tmp_12_reg_3015(0) = '1') else 
        r_V_15_fu_2049_p2;
    tmp26_fu_2261_p2 <= (p_5_fu_2207_p2 and group_tree_V_load_ph_fu_2189_p3);
    tmp_100_fu_1472_p1 <= p_Val2_4_reg_804(1 - 1 downto 0);
    tmp_101_fu_2185_p0 <= reg_844(8 - 1 downto 0);
    tmp_101_fu_2185_p1 <= tmp_101_fu_2185_p0(1 - 1 downto 0);
    tmp_102_fu_2197_p1 <= group_tree_mask_V_q0(4 - 1 downto 0);
    tmp_104_fu_2324_p1 <= grp_fu_1226_p2;
    tmp_104_fu_2324_p3 <= tmp_104_fu_2324_p1(3 downto 3);
    tmp_105_fu_2362_p1 <= tmp_53_fu_2356_p2(13 - 1 downto 0);
    tmp_107_fu_1980_p1 <= p_03232_3_reg_916(1 - 1 downto 0);
    tmp_10_fu_1719_p3 <= 
        tmp_30_fu_1711_p1 when (tmp_23_fu_1675_p3(0) = '1') else 
        tmp_33_fu_1715_p1;
    tmp_113_fu_2031_p4 <= p_Val2_12_reg_906(10 downto 1);
    tmp_115_fu_1552_p3 <= p_Repl2_7_fu_1546_p2(3 downto 3);
    tmp_116_fu_2786_p1 <= mark_mask_V_q0(2 - 1 downto 0);
    tmp_117_fu_2796_p0 <= reg_844(8 - 1 downto 0);
    tmp_117_fu_2796_p1 <= tmp_117_fu_2796_p0(1 - 1 downto 0);
    tmp_118_fu_2814_p1 <= group_tree_V_load_3_s_fu_2800_p3(2 - 1 downto 0);
    tmp_119_fu_1560_p1 <= reg_844(2 - 1 downto 0);
        tmp_11_cast_fu_1683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_25_fu_1670_p2),16));

    tmp_11_fu_1730_p2 <= std_logic_vector(signed(ap_const_lv4_9) + signed(ans_V_reg_3005));
    tmp_120_fu_1574_p3 <= reg_844(2 downto 2);
    tmp_121_fu_2456_p3 <= p_1_reg_1111(3 downto 3);
    tmp_122_fu_2045_p1 <= rhs_V_3_reg_948(2 - 1 downto 0);
    tmp_124_fu_1622_p1 <= p_03228_2_in_reg_816(1 - 1 downto 0);
    tmp_125_fu_2482_p1 <= cnt_1_fu_248(2 - 1 downto 0);
    tmp_126_fu_2496_p3 <= cnt_1_fu_248(2 downto 2);
    tmp_127_fu_2644_p1 <= p_1_reg_1111(1 - 1 downto 0);
    
    tmp_129_fu_2899_p4_proc : process(buddy_tree_V_0_q1, i_assign_3_fu_2895_p1)
    begin
        tmp_129_fu_2899_p4 <= buddy_tree_V_0_q1;
        if to_integer(unsigned(i_assign_3_fu_2895_p1)) >= buddy_tree_V_0_q1'low and to_integer(unsigned(i_assign_3_fu_2895_p1)) <= buddy_tree_V_0_q1'high then
            tmp_129_fu_2899_p4(to_integer(unsigned(i_assign_3_fu_2895_p1))) <= ap_const_lv1_0(0);
        end if;
    end process;

    tmp_12_cast_fu_1687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(free_target_V_reg_2951),23));
    tmp_12_fu_1318_p3 <= addr_layer_map_V_q0(3 downto 3);
    
    tmp_130_fu_2928_p4_proc : process(buddy_tree_V_1_q1, i_assign_3_1_fu_2924_p1)
    begin
        tmp_130_fu_2928_p4 <= buddy_tree_V_1_q1;
        if to_integer(unsigned(i_assign_3_1_fu_2924_p1)) >= buddy_tree_V_1_q1'low and to_integer(unsigned(i_assign_3_1_fu_2924_p1)) <= buddy_tree_V_1_q1'high then
            tmp_130_fu_2928_p4(to_integer(unsigned(i_assign_3_1_fu_2924_p1))) <= ap_const_lv1_0(0);
        end if;
    end process;

    tmp_132_fu_2624_p1 <= p_2_reg_1121(1 - 1 downto 0);
    tmp_13_cast_fu_1696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1690_p2),23));
    tmp_13_fu_1739_p2 <= std_logic_vector(shift_left(unsigned(tmp_23_cast_fu_1727_p1),to_integer(unsigned('0' & tmp_28_cast_fu_1735_p1(16-1 downto 0)))));
    tmp_14_fu_1749_p2 <= std_logic_vector(unsigned(tmp_10_reg_3218) - unsigned(r_V_reg_3223));
    tmp_15_fu_1356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_fu_1350_p2),64));
    tmp_16_fu_1753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1248),13));
    tmp_17_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_fu_1767_p2),64));
    tmp_18_fu_1853_p2 <= "1" when (rec_bits_V_3_fu_1841_p1 = ap_const_lv2_3) else "0";
    tmp_19_fu_2107_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(buddy_tree_V_load_ph_reg_1073));
    tmp_20_fu_1859_p2 <= (tmp_79_fu_1845_p3 and tmp_18_fu_1853_p2);
    tmp_21_fu_1405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_fu_1396_p4),64));
    tmp_22_fu_2119_p2 <= "1" when (tmp_V_1_reg_3403 = ap_const_lv64_0) else "0";
    tmp_23_cast_fu_1727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_tree_map_V_load_reg_3020),16));
    tmp_23_fu_1675_p3 <= r_V_25_fu_1670_p2(3 downto 3);
    tmp_24_fu_1875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03208_1_in_fu_1865_p4),13));
    tmp_25_fu_1442_p2 <= "1" when (now1_V_1_fu_1436_p2 = ap_const_lv4_0) else "0";
    tmp_27_fu_1885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_tree_V_fu_1879_p2),32));
    tmp_28_cast_fu_1735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_1730_p2),16));
        tmp_28_fu_1895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(op2_assign_s_fu_1889_p2),64));

    tmp_29_fu_1915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_12_reg_3299),64));
    tmp_30_fu_1711_p1 <= tmp_8_fu_1700_p2(13 - 1 downto 0);
    tmp_31_fu_1476_p2 <= (tmp_99_fu_1464_p3 and tmp_100_fu_1472_p1);
    tmp_32_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_1476_p2),32));
    tmp_33_fu_1715_p1 <= tmp_7_fu_1706_p2(13 - 1 downto 0);
    tmp_34_fu_1486_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_reg_3089),32));
        tmp_35_fu_1495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(op2_assign_8_fu_1489_p2),64));

    tmp_36_fu_2173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_fu_2167_p2),64));
    tmp_37_fu_1506_p2 <= (tmp_35_fu_1495_p1 or buddy_tree_V_load_1_s_fu_1499_p3);
    tmp_38_cast_fu_2124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1226_p2),16));
    tmp_38_fu_2219_p2 <= "1" when (TMP_1_V_1_fu_2213_p2 = ap_const_lv4_8) else "0";
    tmp_39_cast_fu_2128_p0 <= reg_844(8 - 1 downto 0);
    tmp_39_cast_fu_2128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_cast_fu_2128_p0),16));
    tmp_39_fu_2225_p2 <= "1" when (TMP_1_V_1_fu_2213_p2 = ap_const_lv4_2) else "0";
    tmp_40_fu_2231_p2 <= "1" when (TMP_1_V_1_fu_2213_p2 = ap_const_lv4_4) else "0";
    tmp_41_fu_2286_p3 <= 
        ap_const_lv2_2 when (tmp_40_reg_3479(0) = '1') else 
        ap_const_lv2_1;
    tmp_42_fu_2293_p2 <= (tmp_40_reg_3479 or tmp_39_reg_3474);
    tmp_43_fu_2297_p3 <= 
        tmp_41_fu_2286_p3 when (tmp_42_fu_2293_p2(0) = '1') else 
        tmp_52_cast_fu_2279_p3;
    tmp_44_fu_2132_p2 <= std_logic_vector(shift_left(unsigned(tmp_39_cast_fu_2128_p1),to_integer(unsigned('0' & tmp_38_cast_fu_2124_p1(16-1 downto 0)))));
    tmp_45_fu_2241_p2 <= std_logic_vector(signed(ap_const_lv4_9) + signed(p_s_reg_958));
    tmp_46_fu_2251_p2 <= std_logic_vector(shift_left(unsigned(tmp_73_cast_fu_2237_p1),to_integer(unsigned('0' & tmp_78_cast_fu_2247_p1(16-1 downto 0)))));
    tmp_47_fu_2309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1248),13));
    tmp_48_fu_2313_p2 <= std_logic_vector(unsigned(r_V_9_reg_3485) + unsigned(loc_tree_V_2_fu_2305_p1));
    tmp_49_fu_2332_p0 <= grp_fu_1226_p2;
        tmp_49_fu_2332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_2332_p0),32));

    tmp_4_fu_1690_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(r_V_25_fu_1670_p2));
    tmp_50_fu_2336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(new_loc1_V_fu_2318_p2),32));
    tmp_51_fu_2340_p1 <= grp_fu_1226_p2;
    tmp_51_fu_2340_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(tmp_51_fu_2340_p1));
    tmp_52_cast_fu_2279_p3 <= 
        ap_const_lv2_3 when (tmp_38_reg_3469(0) = '1') else 
        ap_const_lv2_0;
    tmp_52_fu_2350_p2 <= std_logic_vector(shift_right(unsigned(new_loc1_V_fu_2318_p2),to_integer(unsigned('0' & tmp_87_cast_fu_2346_p1(13-1 downto 0)))));
    tmp_53_fu_2356_p2 <= std_logic_vector(shift_left(unsigned(tmp_50_fu_2336_p1),to_integer(unsigned('0' & tmp_49_fu_2332_p1(31-1 downto 0)))));
    tmp_54_fu_2267_p2 <= (tmp_102_fu_2197_p1 and tmp26_fu_2261_p2);
    tmp_55_fu_2273_p2 <= (tmp_54_fu_2267_p2 xor group_tree_V_load_ph_fu_2189_p3);
    tmp_56_fu_2159_p2 <= (buddy_tree_V_load_2_s_fu_2152_p3 and TMP_0_V_fu_2147_p2);
    tmp_57_fu_1793_p1 <= addr_tree_map_V_load_reg_3020(1 - 1 downto 0);
    tmp_58_fu_1929_p2 <= "1" when (p_Val2_3_reg_928 = ap_const_lv2_3) else "0";
    tmp_59_fu_1941_p2 <= (tmp_58_fu_1929_p2 and not_s_fu_1935_p2);
    tmp_60_fu_1521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_fu_1512_p4),64));
    tmp_61_fu_1534_p2 <= "1" when (rec_bits_V_1_fu_1530_p1 = ap_const_lv2_3) else "0";
    tmp_62_fu_1966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_12_reg_906),32));
        tmp_63_fu_1976_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(op2_assign_1_fu_1970_p2),64));

    tmp_64_fu_1992_p2 <= (tmp_63_fu_1976_p1 or buddy_tree_V_load_4_s_fu_1984_p3);
    tmp_65_fu_2384_p2 <= (op2_assign_fu_2379_p2 and buddy_tree_V_1_q0);
    tmp_66_fu_2391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_8_phi_fu_1096_p4),64));
    tmp_67_fu_2012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_13_fu_2002_p4),64));
    tmp_68_fu_2041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_113_fu_2031_p4),11));
    tmp_69_fu_2445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_7_phi_fu_1086_p4),64));
    tmp_6_fu_1307_p2 <= "1" when (cmd_fu_244 = ap_const_lv8_3) else "0";
    tmp_70_fu_2808_p2 <= (tmp_116_fu_2786_p1 xor ap_const_lv2_3);
    tmp_71_fu_1364_p1 <= ans_V_reg_3005(1 - 1 downto 0);
    tmp_72_fu_2476_p2 <= (rev_fu_2464_p2 or op2_assign_7_fu_2470_p2);
    tmp_73_cast_fu_2237_p0 <= reg_844(8 - 1 downto 0);
    tmp_73_cast_fu_2237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_cast_fu_2237_p0),16));
    tmp_73_fu_1602_p4 <= reg_844(3 downto 2);
    tmp_74_fu_1590_p4 <= reg_844(3 downto 2);
    tmp_76_fu_2087_p1 <= p_s_reg_958(1 - 1 downto 0);
    tmp_77_fu_1642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Repl2_s_reg_3144),64));
    tmp_78_cast_fu_2247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_2241_p2),16));
    tmp_78_fu_2832_p2 <= "1" when (p_03228_1_reg_1141 = ap_const_lv3_0) else "0";
    tmp_79_fu_1845_p3 <= now1_V_2_fu_1835_p2(3 downto 3);
    tmp_7_fu_1706_p2 <= std_logic_vector(shift_right(unsigned(free_target_V_reg_2951),to_integer(unsigned('0' & tmp_11_cast_fu_1683_p1(16-1 downto 0)))));
    tmp_80_fu_2512_p4 <= cnt_1_fu_248(3 downto 2);
    tmp_81_fu_2524_p4 <= cnt_1_fu_248(3 downto 2);
    tmp_82_fu_2586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc2_V_fu_256),64));
    tmp_83_fu_2920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc1_V_7_1_fu_2910_p4),8));
    tmp_84_fu_2618_p2 <= "1" when (p_2_reg_1121 = ap_const_lv4_0) else "0";
    tmp_85_fu_2743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op2_assign_6_fu_2737_p2),4));
    tmp_86_fu_2753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op2_assign_7_reg_3574),4));
    tmp_87_cast_fu_2346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_2340_p2),13));
    tmp_8_fu_1700_p2 <= std_logic_vector(shift_left(unsigned(tmp_12_cast_fu_1687_p1),to_integer(unsigned('0' & tmp_13_cast_fu_1696_p1(23-1 downto 0)))));
    tmp_94_fu_1923_p1 <= p_03180_4_reg_896(4 - 1 downto 0);
    tmp_97_fu_1432_p1 <= p_03232_1_in_reg_795(1 - 1 downto 0);
    tmp_99_fu_1464_p3 <= p_Val2_4_reg_804(1 downto 1);
    tmp_9_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(free_target_V_reg_2951),64));
    tmp_V_1_fu_2113_p2 <= (tmp_19_fu_2107_p2 and buddy_tree_V_load_ph_reg_1073);
        tmp_V_fu_1392_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(val_assign_2_fu_1387_p2),64));

    tmp_fu_1286_p2 <= "1" when (cmd_fu_244 = ap_const_lv8_2) else "0";
    tmp_s_fu_1292_p2 <= "1" when (size_V_reg_2946 = ap_const_lv16_1) else "0";
    tmp_size_V_fu_1270_p2 <= std_logic_vector(signed(ap_const_lv16_FFFF) + signed(size_V_fu_1262_p1));
    val_assign_2_fu_1387_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & i_assign_reg_3061(31-1 downto 0)))));
end behav;
