-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity HLS_SPFA is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (31 downto 0);
    map_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    map_r_ce0 : OUT STD_LOGIC;
    map_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    map_r_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
    map_r_ce1 : OUT STD_LOGIC;
    map_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dis_output_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    dis_output_ce0 : OUT STD_LOGIC;
    dis_output_we0 : OUT STD_LOGIC;
    dis_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_1_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_1_size_ap_vld : OUT STD_LOGIC;
    alloc_1_size_ap_ack : IN STD_LOGIC;
    alloc_1_free_target : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_1_free_target_ap_vld : OUT STD_LOGIC;
    alloc_1_free_target_ap_ack : IN STD_LOGIC;
    alloc_1_addr : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_1_addr_ap_vld : IN STD_LOGIC;
    alloc_1_addr_ap_ack : OUT STD_LOGIC;
    alloc_1_cmd : OUT STD_LOGIC_VECTOR (7 downto 0);
    alloc_1_cmd_ap_vld : OUT STD_LOGIC;
    alloc_1_cmd_ap_ack : IN STD_LOGIC );
end;


architecture behav of HLS_SPFA is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "HLS_SPFA,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.510000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=9,HLS_SYN_DSP=3,HLS_SYN_FF=1039,HLS_SYN_LUT=1802,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (23 downto 0) := "000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (23 downto 0) := "000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (23 downto 0) := "000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (23 downto 0) := "000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (23 downto 0) := "000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (23 downto 0) := "000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (23 downto 0) := "000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (23 downto 0) := "000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (23 downto 0) := "001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (23 downto 0) := "010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2710 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010011100010000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_270F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010011100001111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal guard_variable_for_H : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal N_2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal grp_HLS_malloc_1_s_fu_521_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_578 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_HLS_malloc_1_s_fu_521_ap_idle : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_521_ap_ready : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_521_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal tmp_5_cast_fu_629_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_cast_reg_1349 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_heap0_0_addr_reg_1358 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_4_fu_661_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_5_fu_705_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_8_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_779_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal now_fu_783_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal now_reg_1416 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_795_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1422 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex9_reg_1427 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_26_fu_819_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_26_reg_1442 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_4_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_reg_1447 : STD_LOGIC_VECTOR (63 downto 0);
    signal now_dis_fu_826_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal now_dis_reg_1452 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_833_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1458 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_fu_851_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_reg_1467 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_32_fu_857_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_reg_1472 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_10_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i0_fu_861_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i0_reg_1477 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_fu_867_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_reg_1484 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1511 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal weight0_fu_932_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_reg_1515 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight1_fu_937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight1_reg_1521 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_heap0_0_addr_8_reg_1527 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_heap0_1_addr_7_reg_1532 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_1537 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal in_list_addr_3_reg_1543 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1549 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_list_addr_4_reg_1555 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight0_heap0_load_s_fu_1013_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_heap0_load_s_reg_1561 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight1_1_fu_1020_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight1_1_reg_1566 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1027_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_34_reg_1571 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal brmerge3_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge3_reg_1576 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1077_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1103_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_35_reg_1590 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_36_fu_1107_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_1595 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_heap0_0_addr_9_reg_1599 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_heap0_1_addr_8_reg_1604 : STD_LOGIC_VECTOR (10 downto 0);
    signal newIndex25_reg_1609 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal offset_new_node1_reg_1614 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_44_fu_1138_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_44_reg_1619 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_45_fu_1142_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_1624 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_heap0_0_addr_15_reg_1628 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_heap0_1_addr_14_reg_1633 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_38_fu_1182_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_38_reg_1638 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_39_fu_1186_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1643 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_heap0_0_addr_11_reg_1647 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_heap0_1_addr_10_reg_1652 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_fu_1227_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_41_reg_1660 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_42_fu_1231_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_heap0_0_addr_13_reg_1669 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_heap0_1_addr_12_reg_1674 : STD_LOGIC_VECTOR (10 downto 0);
    signal offset_next_fu_1272_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_HLS_free_1_s_fu_538_ap_idle : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_538_ap_ready : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_538_ap_done : STD_LOGIC;
    signal i_6_fu_1288_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_6_reg_1690 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal tmp_1_fu_1283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_heap0_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_heap0_0_ce0 : STD_LOGIC;
    signal p_heap0_0_we0 : STD_LOGIC;
    signal p_heap0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_heap0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_heap0_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_heap0_1_ce0 : STD_LOGIC;
    signal p_heap0_1_we0 : STD_LOGIC;
    signal p_heap0_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_heap0_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_list_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_list_ce0 : STD_LOGIC;
    signal in_list_we0 : STD_LOGIC;
    signal in_list_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_list_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_list_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_list_ce1 : STD_LOGIC;
    signal in_list_we1 : STD_LOGIC;
    signal in_list_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_HLS_malloc_1_s_fu_521_ap_start : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_521_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_1_s_fu_521_allocator_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_521_allocator_free_targe : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_521_allocator_addr_ap_ack : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_521_allocator_cmd : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_538_ap_start : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_538_allocator_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_free_1_s_fu_538_allocator_size_ap_vld : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_538_allocator_free_targe : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_538_allocator_cmd : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld : STD_LOGIC;
    signal i_reg_466 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_477 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_9_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal offset_head_reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_498 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal i_3_reg_509 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_HLS_malloc_1_s_fu_521_ap_start_reg : STD_LOGIC := '0';
    signal brmerge4_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge5_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_HLS_free_1_s_fu_538_ap_start_reg : STD_LOGIC := '0';
    signal newIndex2_fu_647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex3_cast_fu_690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_711_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex5_fu_724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex6_cast_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex8_fu_773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex9_cast_fu_814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_888_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex10_cast_fu_908_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex11_cast_fu_964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex12_cast_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_995_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex14_fu_1111_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex15_cast_fu_1117_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex24_fu_1146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex25_cast_fu_1152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex27_cast_fu_1172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex17_fu_1190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex18_cast_fu_1200_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex26_cast_fu_1221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal newIndex21_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex22_cast_fu_1245_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex19_cast_fu_1266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal newIndex_cast_fu_1313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal guard_variable_for_H_1_load_fu_587_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal offset_tail_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_671_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_720_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1196_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1241_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_563_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_i_fu_591_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_fu_591_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_619_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal newIndex1_fu_637_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal i_cast_fu_652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_656_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_667_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal local_dis_0_sum2_fu_675_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex3_fu_680_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_1_cast_fu_696_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_700_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_550_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_12_fu_716_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_sum_fu_730_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex6_fu_736_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal newIndex7_fu_763_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_28_fu_791_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal local_dis_0_sum1_fu_799_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_fu_833_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal extLd_fu_841_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_873_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_883_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_sum2_fu_893_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex10_fu_898_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_cast_fu_942_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal local_dis_0_sum4_fu_949_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex11_fu_954_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_cast_fu_969_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal local_dis_0_sum5_fu_975_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex12_fu_980_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_demorgan_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_demorgan_not_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_not_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_not_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_568_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_sum3_fu_1123_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_sum4_fu_1157_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex27_fu_1162_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_sum6_fu_1206_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex26_fu_1211_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_sum8_fu_1251_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex19_fu_1256_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_3_cast_fu_1279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1294_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal local_dis_0_sum_fu_1298_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex_fu_1303_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_fu_1324_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (23 downto 0);

    component HLS_malloc_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        size : IN STD_LOGIC_VECTOR (31 downto 0);
        allocator_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_size_ap_vld : OUT STD_LOGIC;
        allocator_size_ap_ack : IN STD_LOGIC;
        allocator_free_targe : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_free_targe_ap_vld : OUT STD_LOGIC;
        allocator_free_targe_ap_ack : IN STD_LOGIC;
        allocator_addr : IN STD_LOGIC_VECTOR (31 downto 0);
        allocator_addr_ap_vld : IN STD_LOGIC;
        allocator_addr_ap_ack : OUT STD_LOGIC;
        allocator_cmd : OUT STD_LOGIC_VECTOR (7 downto 0);
        allocator_cmd_ap_vld : OUT STD_LOGIC;
        allocator_cmd_ap_ack : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HLS_free_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        free_target : IN STD_LOGIC_VECTOR (31 downto 0);
        allocator_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_size_ap_vld : OUT STD_LOGIC;
        allocator_size_ap_ack : IN STD_LOGIC;
        allocator_free_targe : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_free_targe_ap_vld : OUT STD_LOGIC;
        allocator_free_targe_ap_ack : IN STD_LOGIC;
        allocator_cmd : OUT STD_LOGIC_VECTOR (7 downto 0);
        allocator_cmd_ap_vld : OUT STD_LOGIC;
        allocator_cmd_ap_ack : IN STD_LOGIC );
    end component;


    component HLS_SPFA_p_heap0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HLS_SPFA_in_list IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (0 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    p_heap0_0_U : component HLS_SPFA_p_heap0_0
    generic map (
        DataWidth => 32,
        AddressRange => 1500,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_heap0_0_address0,
        ce0 => p_heap0_0_ce0,
        we0 => p_heap0_0_we0,
        d0 => p_heap0_0_d0,
        q0 => p_heap0_0_q0);

    p_heap0_1_U : component HLS_SPFA_p_heap0_0
    generic map (
        DataWidth => 32,
        AddressRange => 1500,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_heap0_1_address0,
        ce0 => p_heap0_1_ce0,
        we0 => p_heap0_1_we0,
        d0 => p_heap0_1_d0,
        q0 => p_heap0_1_q0);

    in_list_U : component HLS_SPFA_in_list
    generic map (
        DataWidth => 1,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => in_list_address0,
        ce0 => in_list_ce0,
        we0 => in_list_we0,
        d0 => in_list_d0,
        q0 => in_list_q0,
        address1 => in_list_address1,
        ce1 => in_list_ce1,
        we1 => in_list_we1,
        d1 => ap_const_lv1_1,
        q1 => in_list_q1);

    grp_HLS_malloc_1_s_fu_521 : component HLS_malloc_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HLS_malloc_1_s_fu_521_ap_start,
        ap_done => grp_HLS_malloc_1_s_fu_521_ap_done,
        ap_idle => grp_HLS_malloc_1_s_fu_521_ap_idle,
        ap_ready => grp_HLS_malloc_1_s_fu_521_ap_ready,
        size => grp_HLS_malloc_1_s_fu_521_size,
        allocator_size => grp_HLS_malloc_1_s_fu_521_allocator_size,
        allocator_size_ap_vld => grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld,
        allocator_size_ap_ack => alloc_1_size_ap_ack,
        allocator_free_targe => grp_HLS_malloc_1_s_fu_521_allocator_free_targe,
        allocator_free_targe_ap_vld => grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld,
        allocator_free_targe_ap_ack => alloc_1_free_target_ap_ack,
        allocator_addr => alloc_1_addr,
        allocator_addr_ap_vld => alloc_1_addr_ap_vld,
        allocator_addr_ap_ack => grp_HLS_malloc_1_s_fu_521_allocator_addr_ap_ack,
        allocator_cmd => grp_HLS_malloc_1_s_fu_521_allocator_cmd,
        allocator_cmd_ap_vld => grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld,
        allocator_cmd_ap_ack => alloc_1_cmd_ap_ack,
        ap_return => grp_HLS_malloc_1_s_fu_521_ap_return);

    grp_HLS_free_1_s_fu_538 : component HLS_free_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HLS_free_1_s_fu_538_ap_start,
        ap_done => grp_HLS_free_1_s_fu_538_ap_done,
        ap_idle => grp_HLS_free_1_s_fu_538_ap_idle,
        ap_ready => grp_HLS_free_1_s_fu_538_ap_ready,
        free_target => offset_head_reg_488,
        allocator_size => grp_HLS_free_1_s_fu_538_allocator_size,
        allocator_size_ap_vld => grp_HLS_free_1_s_fu_538_allocator_size_ap_vld,
        allocator_size_ap_ack => alloc_1_size_ap_ack,
        allocator_free_targe => grp_HLS_free_1_s_fu_538_allocator_free_targe,
        allocator_free_targe_ap_vld => grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld,
        allocator_free_targe_ap_ack => alloc_1_free_target_ap_ack,
        allocator_cmd => grp_HLS_free_1_s_fu_538_allocator_cmd,
        allocator_cmd_ap_vld => grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld,
        allocator_cmd_ap_ack => alloc_1_cmd_ap_ack);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_HLS_free_1_s_fu_538_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HLS_free_1_s_fu_538_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_10_fu_845_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_HLS_free_1_s_fu_538_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HLS_free_1_s_fu_538_ap_ready = ap_const_logic_1)) then 
                    grp_HLS_free_1_s_fu_538_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HLS_malloc_1_s_fu_521_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HLS_malloc_1_s_fu_521_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((brmerge5_fu_1097_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (brmerge4_fu_1086_p2 = ap_const_lv1_1) and (brmerge3_fu_1071_p2 = ap_const_lv1_1)) or ((brmerge4_fu_1086_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (brmerge3_fu_1071_p2 = ap_const_lv1_1)) or ((brmerge3_fu_1071_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((tmp_9_fu_700_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                    grp_HLS_malloc_1_s_fu_521_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HLS_malloc_1_s_fu_521_ap_ready = ap_const_logic_1)) then 
                    grp_HLS_malloc_1_s_fu_521_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_9_fu_700_p2 = ap_const_lv1_1))) then 
                i_1_reg_477 <= i_5_fu_705_p2;
            elsif (((tmp_6_fu_656_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_1_reg_477 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    i_2_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                i_2_reg_498 <= i_7_reg_1467;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i_2_reg_498 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_3_reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_8_fu_757_p2 = ap_const_lv1_1))) then 
                i_3_reg_509 <= ap_const_lv31_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                i_3_reg_509 <= i_6_reg_1690;
            end if; 
        end if;
    end process;

    i_reg_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_fu_656_p2 = ap_const_lv1_1))) then 
                i_reg_466 <= i_4_fu_661_p2;
            elsif (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_466 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    offset_head_reg_488_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_HLS_free_1_s_fu_538_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                offset_head_reg_488 <= offset_next_fu_1272_p3;
            elsif (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                offset_head_reg_488 <= grp_HLS_malloc_1_s_fu_521_ap_return;
            end if; 
        end if;
    end process;

    offset_tail_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                offset_tail_fu_90 <= reg_578;
            elsif (((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                offset_tail_fu_90 <= offset_new_node1_reg_1614;
            elsif (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                offset_tail_fu_90 <= grp_HLS_malloc_1_s_fu_521_ap_return;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((guard_variable_for_H_1_load_fu_587_p1 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                N_2 <= tmp_1_i_fu_591_p2(31 downto 1);
                guard_variable_for_H <= ap_const_lv1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                brmerge3_reg_1576 <= brmerge3_fu_1071_p2;
                tmp_34_reg_1571 <= tmp_34_fu_1027_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_10_fu_845_p2 = ap_const_lv1_1))) then
                    i0_reg_1477(31 downto 1) <= i0_fu_861_p2(31 downto 1);
                    i1_reg_1484(31 downto 1) <= i1_fu_867_p2(31 downto 1);
                tmp_32_reg_1472 <= tmp_32_fu_857_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                i_6_reg_1690 <= i_6_fu_1288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                i_7_reg_1467 <= i_7_fu_851_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                    in_list_addr_3_reg_1543(7 downto 1) <= tmp_20_fu_995_p1(8 - 1 downto 0)(7 downto 1);
                    in_list_addr_4_reg_1555(7 downto 1) <= tmp_23_fu_1004_p1(8 - 1 downto 0)(7 downto 1);
                tmp_21_reg_1537 <= tmp_21_fu_999_p2;
                tmp_24_reg_1549 <= tmp_24_fu_1008_p2;
                weight0_heap0_load_s_reg_1561 <= weight0_heap0_load_s_fu_1013_p3;
                weight1_1_reg_1566 <= weight1_1_fu_1020_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                newIndex25_reg_1609 <= p_sum3_fu_1123_p2(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                newIndex9_reg_1427 <= local_dis_0_sum1_fu_799_p2(12 downto 1);
                now_reg_1416 <= now_fu_783_p3;
                tmp_27_reg_1411 <= tmp_27_fu_779_p1;
                tmp_29_reg_1422 <= tmp_29_fu_795_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                now_dis_reg_1452 <= now_dis_fu_826_p3;
                tmp_26_reg_1442 <= tmp_26_fu_819_p1;
                tmp_4_reg_1447 <= tmp_4_fu_823_p1;
                tmp_7_reg_1458 <= tmp_7_fu_833_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                offset_new_node1_reg_1614 <= grp_HLS_malloc_1_s_fu_521_ap_return;
                p_heap0_0_addr_15_reg_1628 <= newIndex24_fu_1146_p1(11 - 1 downto 0);
                p_heap0_1_addr_14_reg_1633 <= newIndex24_fu_1146_p1(11 - 1 downto 0);
                tmp_44_reg_1619 <= tmp_44_fu_1138_p1;
                tmp_45_reg_1624 <= tmp_45_fu_1142_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                or_cond_reg_1511 <= or_cond_fu_926_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                p_heap0_0_addr_11_reg_1647 <= newIndex17_fu_1190_p1(11 - 1 downto 0);
                p_heap0_1_addr_10_reg_1652 <= newIndex17_fu_1190_p1(11 - 1 downto 0);
                tmp_38_reg_1638 <= tmp_38_fu_1182_p1;
                tmp_39_reg_1643 <= tmp_39_fu_1186_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                p_heap0_0_addr_13_reg_1669 <= newIndex21_fu_1235_p1(11 - 1 downto 0);
                p_heap0_1_addr_12_reg_1674 <= newIndex21_fu_1235_p1(11 - 1 downto 0);
                tmp_41_reg_1660 <= tmp_41_fu_1227_p1;
                tmp_42_reg_1665 <= tmp_42_fu_1231_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_fu_926_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                p_heap0_0_addr_8_reg_1527 <= newIndex11_cast_fu_964_p1(11 - 1 downto 0);
                p_heap0_1_addr_7_reg_1532 <= newIndex12_cast_fu_990_p1(11 - 1 downto 0);
                weight0_reg_1515 <= weight0_fu_932_p2;
                weight1_reg_1521 <= weight1_fu_937_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                p_heap0_0_addr_9_reg_1599 <= newIndex14_fu_1111_p1(11 - 1 downto 0);
                p_heap0_1_addr_8_reg_1604 <= newIndex14_fu_1111_p1(11 - 1 downto 0);
                tmp_35_reg_1590 <= tmp_35_fu_1103_p1;
                tmp_36_reg_1595 <= tmp_36_fu_1107_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                p_heap0_0_addr_reg_1358 <= newIndex2_fu_647_p1(11 - 1 downto 0);
                    tmp_5_cast_reg_1349(12 downto 1) <= tmp_5_cast_fu_629_p3(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then
                reg_578 <= grp_HLS_malloc_1_s_fu_521_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((brmerge3_fu_1071_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                tmp_37_reg_1580 <= tmp_37_fu_1077_p1;
            end if;
        end if;
    end process;
    tmp_5_cast_reg_1349(0) <= '0';
    i0_reg_1477(0) <= '0';
    i1_reg_1484(0) <= '1';
    in_list_addr_3_reg_1543(0) <= '0';
    in_list_addr_4_reg_1555(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state18, grp_HLS_malloc_1_s_fu_521_ap_done, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, tmp_8_fu_757_p2, ap_CS_fsm_state10, tmp_10_fu_845_p2, or_cond_fu_926_p2, ap_CS_fsm_state11, ap_CS_fsm_state13, brmerge3_fu_1071_p2, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_HLS_free_1_s_fu_538_ap_done, ap_CS_fsm_state23, tmp_1_fu_1283_p2, tmp_6_fu_656_p2, tmp_9_fu_700_p2, brmerge4_fu_1086_p2, brmerge5_fu_1097_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_6_fu_656_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_9_fu_700_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_8_fu_757_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((tmp_10_fu_845_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (or_cond_fu_926_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((brmerge5_fu_1097_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (brmerge4_fu_1086_p2 = ap_const_lv1_1) and (brmerge3_fu_1071_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (brmerge5_fu_1097_p2 = ap_const_lv1_1) and (brmerge4_fu_1086_p2 = ap_const_lv1_1) and (brmerge3_fu_1071_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((brmerge4_fu_1086_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (brmerge3_fu_1071_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state18 => 
                if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state20 => 
                if (((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state22 => 
                if (((grp_HLS_free_1_s_fu_538_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((tmp_1_fu_1283_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    alloc_1_addr_ap_ack_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state16, grp_HLS_malloc_1_s_fu_521_allocator_addr_ap_ack)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_1_addr_ap_ack <= grp_HLS_malloc_1_s_fu_521_allocator_addr_ap_ack;
        else 
            alloc_1_addr_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_1_cmd_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_HLS_malloc_1_s_fu_521_allocator_cmd, grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld, grp_HLS_free_1_s_fu_538_allocator_cmd, grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld)
    begin
        if (((grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            alloc_1_cmd <= grp_HLS_free_1_s_fu_538_allocator_cmd;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state20) and (grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld = ap_const_logic_1)) or ((grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            alloc_1_cmd <= grp_HLS_malloc_1_s_fu_521_allocator_cmd;
        else 
            alloc_1_cmd <= "XXXXXXXX";
        end if; 
    end process;


    alloc_1_cmd_ap_vld_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld, grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            alloc_1_cmd_ap_vld <= grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_1_cmd_ap_vld <= grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld;
        else 
            alloc_1_cmd_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    alloc_1_free_target_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_HLS_malloc_1_s_fu_521_allocator_free_targe, grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld, grp_HLS_free_1_s_fu_538_allocator_free_targe, grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld)
    begin
        if (((grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            alloc_1_free_target <= grp_HLS_free_1_s_fu_538_allocator_free_targe;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state20) and (grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld = ap_const_logic_1)) or ((grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            alloc_1_free_target <= grp_HLS_malloc_1_s_fu_521_allocator_free_targe;
        else 
            alloc_1_free_target <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    alloc_1_free_target_ap_vld_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld, grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            alloc_1_free_target_ap_vld <= grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_1_free_target_ap_vld <= grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld;
        else 
            alloc_1_free_target_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    alloc_1_size_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_HLS_malloc_1_s_fu_521_allocator_size, grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld, grp_HLS_free_1_s_fu_538_allocator_size, grp_HLS_free_1_s_fu_538_allocator_size_ap_vld)
    begin
        if (((grp_HLS_free_1_s_fu_538_allocator_size_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            alloc_1_size <= grp_HLS_free_1_s_fu_538_allocator_size;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state20) and (grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld = ap_const_logic_1)) or ((grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            alloc_1_size <= grp_HLS_malloc_1_s_fu_521_allocator_size;
        else 
            alloc_1_size <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    alloc_1_size_ap_vld_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld, grp_HLS_free_1_s_fu_538_allocator_size_ap_vld)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            alloc_1_size_ap_vld <= grp_HLS_free_1_s_fu_538_allocator_size_ap_vld;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            alloc_1_size_ap_vld <= grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld;
        else 
            alloc_1_size_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state23, tmp_1_fu_1283_p2)
    begin
        if (((tmp_1_fu_1283_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state23, tmp_1_fu_1283_p2)
    begin
        if (((tmp_1_fu_1283_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge3_fu_1071_p2 <= (tmp8_fu_1065_p2 or in_list_q0);
    brmerge4_fu_1086_p2 <= (tmp_24_not_fu_1081_p2 or in_list_q0);
    brmerge5_fu_1097_p2 <= (tmp_27_not_fu_1092_p2 or in_list_q1);
    brmerge_demorgan_fu_1053_p2 <= (tmp7_fu_1048_p2 and tmp6_fu_1043_p2);
    brmerge_demorgan_not_fu_1059_p2 <= (brmerge_demorgan_fu_1053_p2 xor ap_const_lv1_1);
    dis_output_address0 <= tmp_11_fu_1319_p1(8 - 1 downto 0);

    dis_output_ce0_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            dis_output_ce0 <= ap_const_logic_1;
        else 
            dis_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dis_output_d0 <= 
        p_heap0_1_q0 when (tmp_31_fu_1324_p1(0) = '1') else 
        p_heap0_0_q0;

    dis_output_we0_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            dis_output_we0 <= ap_const_logic_1;
        else 
            dis_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

        extLd_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(N_2),32));

    grp_HLS_free_1_s_fu_538_ap_start <= grp_HLS_free_1_s_fu_538_ap_start_reg;
    grp_HLS_malloc_1_s_fu_521_ap_start <= grp_HLS_malloc_1_s_fu_521_ap_start_reg;

    grp_HLS_malloc_1_s_fu_521_size_assign_proc : process(n, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_HLS_malloc_1_s_fu_521_size <= ap_const_lv32_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_HLS_malloc_1_s_fu_521_size <= n;
        else 
            grp_HLS_malloc_1_s_fu_521_size <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_550_p4 <= grp_HLS_malloc_1_s_fu_521_ap_return(31 downto 1);
    grp_fu_563_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(tmp_34_reg_1571));
    grp_fu_568_p4 <= grp_fu_563_p2(12 downto 1);
    guard_variable_for_H_1_load_fu_587_p1 <= guard_variable_for_H;
    i0_fu_861_p2 <= std_logic_vector(shift_left(unsigned(i_2_reg_498),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    i1_fu_867_p2 <= (i0_fu_861_p2 or ap_const_lv32_1);
    i_1_cast_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_477),32));
    i_3_cast_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_reg_509),32));
    i_4_fu_661_p2 <= std_logic_vector(unsigned(i_reg_466) + unsigned(ap_const_lv31_1));
    i_5_fu_705_p2 <= std_logic_vector(unsigned(i_1_reg_477) + unsigned(ap_const_lv31_1));
    i_6_fu_1288_p2 <= std_logic_vector(unsigned(i_3_reg_509) + unsigned(ap_const_lv31_1));
    i_7_fu_851_p2 <= std_logic_vector(unsigned(i_2_reg_498) + unsigned(ap_const_lv32_1));
    i_cast_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_466),32));

    in_list_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, tmp_4_reg_1447, ap_CS_fsm_state10, ap_CS_fsm_state12, in_list_addr_4_reg_1555, ap_CS_fsm_state17, tmp_s_fu_711_p1, tmp_20_fu_995_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            in_list_address0 <= in_list_addr_4_reg_1555;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            in_list_address0 <= tmp_20_fu_995_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            in_list_address0 <= tmp_4_reg_1447(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            in_list_address0 <= ap_const_lv64_0(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_list_address0 <= tmp_s_fu_711_p1(8 - 1 downto 0);
        else 
            in_list_address0 <= "XXXXXXXX";
        end if; 
    end process;


    in_list_address1_assign_proc : process(ap_CS_fsm_state12, in_list_addr_3_reg_1543, in_list_addr_4_reg_1555, ap_CS_fsm_state17, tmp_23_fu_1004_p1, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            in_list_address1 <= in_list_addr_4_reg_1555;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            in_list_address1 <= in_list_addr_3_reg_1543;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            in_list_address1 <= tmp_23_fu_1004_p1(8 - 1 downto 0);
        else 
            in_list_address1 <= "XXXXXXXX";
        end if; 
    end process;


    in_list_ce0_assign_proc : process(grp_HLS_malloc_1_s_fu_521_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            in_list_ce0 <= ap_const_logic_1;
        else 
            in_list_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_list_ce1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            in_list_ce1 <= ap_const_logic_1;
        else 
            in_list_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    in_list_d0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            in_list_d0 <= ap_const_lv1_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            in_list_d0 <= ap_const_lv1_0;
        else 
            in_list_d0 <= "X";
        end if; 
    end process;


    in_list_we0_assign_proc : process(grp_HLS_malloc_1_s_fu_521_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state10, tmp_10_fu_845_p2, or_cond_reg_1511, brmerge3_reg_1576, tmp_9_fu_700_p2, ap_CS_fsm_state17)
    begin
        if ((((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((tmp_10_fu_845_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_9_fu_700_p2 = ap_const_lv1_1)))) then 
            in_list_we0 <= ap_const_logic_1;
        else 
            in_list_we0 <= ap_const_logic_0;
        end if; 
    end process;


    in_list_we1_assign_proc : process(or_cond_reg_1511, brmerge3_reg_1576, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            in_list_we1 <= ap_const_logic_1;
        else 
            in_list_we1 <= ap_const_logic_0;
        end if; 
    end process;

    local_dis_0_sum1_fu_799_p2 <= std_logic_vector(unsigned(tmp_5_cast_reg_1349) + unsigned(tmp_28_fu_791_p1));
    local_dis_0_sum2_fu_675_p2 <= std_logic_vector(unsigned(tmp_3_fu_667_p1) + unsigned(tmp_5_cast_reg_1349));
    local_dis_0_sum4_fu_949_p2 <= std_logic_vector(unsigned(tmp_5_cast_reg_1349) + unsigned(tmp_23_cast_fu_942_p3));
    local_dis_0_sum5_fu_975_p2 <= std_logic_vector(unsigned(tmp_5_cast_reg_1349) + unsigned(tmp_26_cast_fu_969_p2));
    local_dis_0_sum_fu_1298_p2 <= std_logic_vector(unsigned(tmp_30_fu_1294_p1) + unsigned(tmp_5_cast_reg_1349));
    map_r_address0 <= tmp_15_fu_878_p1(15 - 1 downto 0);
    map_r_address1 <= tmp_17_fu_888_p1(15 - 1 downto 0);

    map_r_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            map_r_ce0 <= ap_const_logic_1;
        else 
            map_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    map_r_ce1_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            map_r_ce1 <= ap_const_logic_1;
        else 
            map_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    newIndex10_cast_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex10_fu_898_p4),64));
    newIndex10_fu_898_p4 <= p_sum2_fu_893_p2(12 downto 1);
    newIndex11_cast_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex11_fu_954_p4),64));
    newIndex11_fu_954_p4 <= local_dis_0_sum4_fu_949_p2(12 downto 1);
    newIndex12_cast_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex12_fu_980_p4),64));
    newIndex12_fu_980_p4 <= local_dis_0_sum5_fu_975_p2(12 downto 1);
    newIndex14_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_550_p4),64));
    newIndex15_cast_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_568_p4),64));
    newIndex17_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_550_p4),64));
    newIndex18_cast_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_568_p4),64));
    newIndex19_cast_fu_1266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex19_fu_1256_p4),64));
    newIndex19_fu_1256_p4 <= p_sum8_fu_1251_p2(12 downto 1);
    newIndex1_fu_637_p4 <= grp_HLS_malloc_1_s_fu_521_ap_return(19 downto 1);
    newIndex21_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_550_p4),64));
    newIndex22_cast_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_568_p4),64));
    newIndex24_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_550_p4),64));
    newIndex25_cast_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex25_reg_1609),64));
    newIndex26_cast_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex26_fu_1211_p4),64));
    newIndex26_fu_1211_p4 <= p_sum6_fu_1206_p2(12 downto 1);
    newIndex27_cast_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex27_fu_1162_p4),64));
    newIndex27_fu_1162_p4 <= p_sum4_fu_1157_p2(12 downto 1);
    newIndex2_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex1_fu_637_p4),64));
    newIndex3_cast_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex3_fu_680_p4),64));
    newIndex3_fu_680_p4 <= local_dis_0_sum2_fu_675_p2(12 downto 1);
    newIndex5_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_550_p4),64));
    newIndex6_cast_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex6_fu_736_p4),64));
    newIndex6_fu_736_p4 <= p_sum_fu_730_p2(12 downto 1);
    newIndex7_fu_763_p4 <= offset_head_reg_488(31 downto 1);
    newIndex8_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex7_fu_763_p4),64));
    newIndex9_cast_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex9_reg_1427),64));
    newIndex_cast_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex_fu_1303_p4),64));
    newIndex_fu_1303_p4 <= local_dis_0_sum_fu_1298_p2(12 downto 1);
    now_dis_fu_826_p3 <= 
        p_heap0_1_q0 when (tmp_29_reg_1422(0) = '1') else 
        p_heap0_0_q0;
    now_fu_783_p3 <= 
        p_heap0_1_q0 when (tmp_27_fu_779_p1(0) = '1') else 
        p_heap0_0_q0;
    offset_next_fu_1272_p3 <= 
        p_heap0_0_q0 when (tmp_27_reg_1411(0) = '1') else 
        p_heap0_1_q0;
    or_cond_fu_926_p2 <= (tmp_19_fu_920_p2 and tmp_18_fu_914_p2);

    p_heap0_0_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, p_heap0_0_addr_reg_1358, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, or_cond_reg_1511, ap_CS_fsm_state11, p_heap0_0_addr_8_reg_1527, ap_CS_fsm_state13, brmerge3_reg_1576, ap_CS_fsm_state14, p_heap0_0_addr_9_reg_1599, ap_CS_fsm_state15, ap_CS_fsm_state16, tmp_45_reg_1624, p_heap0_0_addr_15_reg_1628, tmp_39_reg_1643, p_heap0_0_addr_11_reg_1647, tmp_42_reg_1665, p_heap0_0_addr_13_reg_1669, ap_CS_fsm_state23, tmp_6_fu_656_p2, ap_CS_fsm_state17, newIndex3_cast_fu_690_p1, newIndex5_fu_724_p1, newIndex6_cast_fu_746_p1, newIndex8_fu_773_p1, newIndex9_cast_fu_814_p1, newIndex10_cast_fu_908_p1, newIndex11_cast_fu_964_p1, newIndex15_cast_fu_1117_p1, newIndex25_cast_fu_1152_p1, newIndex27_cast_fu_1172_p1, newIndex18_cast_fu_1200_p1, newIndex26_cast_fu_1221_p1, ap_CS_fsm_state19, newIndex22_cast_fu_1245_p1, newIndex19_cast_fu_1266_p1, ap_CS_fsm_state21, newIndex_cast_fu_1313_p1, tmp_5_fu_671_p1, tmp_13_fu_720_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_heap0_0_address0 <= newIndex_cast_fu_1313_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_42_reg_1665 = ap_const_lv1_1))) then 
            p_heap0_0_address0 <= newIndex19_cast_fu_1266_p1(11 - 1 downto 0);
        elsif (((tmp_42_reg_1665 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            p_heap0_0_address0 <= p_heap0_0_addr_13_reg_1669;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_heap0_0_address0 <= newIndex22_cast_fu_1245_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_39_reg_1643 = ap_const_lv1_1))) then 
            p_heap0_0_address0 <= newIndex26_cast_fu_1221_p1(11 - 1 downto 0);
        elsif (((tmp_39_reg_1643 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            p_heap0_0_address0 <= p_heap0_0_addr_11_reg_1647;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_heap0_0_address0 <= newIndex18_cast_fu_1200_p1(11 - 1 downto 0);
        elsif (((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_45_reg_1624 = ap_const_lv1_1))) then 
            p_heap0_0_address0 <= newIndex27_cast_fu_1172_p1(11 - 1 downto 0);
        elsif (((tmp_45_reg_1624 = ap_const_lv1_0) and (brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            p_heap0_0_address0 <= p_heap0_0_addr_15_reg_1628;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_heap0_0_address0 <= newIndex25_cast_fu_1152_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_heap0_0_address0 <= p_heap0_0_addr_9_reg_1599;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_heap0_0_address0 <= newIndex15_cast_fu_1117_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_heap0_0_address0 <= p_heap0_0_addr_8_reg_1527;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_heap0_0_address0 <= newIndex11_cast_fu_964_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_heap0_0_address0 <= newIndex10_cast_fu_908_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_heap0_0_address0 <= newIndex9_cast_fu_814_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_heap0_0_address0 <= newIndex8_fu_773_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_13_fu_720_p1 = ap_const_lv1_1))) then 
            p_heap0_0_address0 <= newIndex6_cast_fu_746_p1(11 - 1 downto 0);
        elsif (((tmp_13_fu_720_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            p_heap0_0_address0 <= newIndex5_fu_724_p1(11 - 1 downto 0);
        elsif (((tmp_6_fu_656_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            p_heap0_0_address0 <= p_heap0_0_addr_reg_1358;
        elsif (((tmp_5_fu_671_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_fu_656_p2 = ap_const_lv1_1))) then 
            p_heap0_0_address0 <= newIndex3_cast_fu_690_p1(11 - 1 downto 0);
        else 
            p_heap0_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p_heap0_0_ce0_assign_proc : process(ap_CS_fsm_state18, grp_HLS_malloc_1_s_fu_521_ap_done, ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, or_cond_reg_1511, ap_CS_fsm_state11, ap_CS_fsm_state13, brmerge3_reg_1576, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, tmp_45_reg_1624, tmp_39_reg_1643, tmp_42_reg_1665, ap_CS_fsm_state23, tmp_6_fu_656_p2, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, tmp_5_fu_671_p1, tmp_13_fu_720_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_13_fu_720_p1 = ap_const_lv1_1)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (tmp_13_fu_720_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_42_reg_1665 = ap_const_lv1_1)) or ((tmp_42_reg_1665 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_39_reg_1643 = ap_const_lv1_1)) or ((tmp_39_reg_1643 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_45_reg_1624 = ap_const_lv1_1)) or ((tmp_45_reg_1624 = ap_const_lv1_0) and (brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((tmp_6_fu_656_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_5_fu_671_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_fu_656_p2 = ap_const_lv1_1)))) then 
            p_heap0_0_ce0 <= ap_const_logic_1;
        else 
            p_heap0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_heap0_0_d0_assign_proc : process(grp_HLS_malloc_1_s_fu_521_ap_return, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state5, i0_reg_1477, i1_reg_1484, or_cond_reg_1511, weight0_heap0_load_s_reg_1561, ap_CS_fsm_state13, brmerge3_reg_1576, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, tmp_45_reg_1624, tmp_39_reg_1643, tmp_42_reg_1665, tmp_6_fu_656_p2, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, tmp_5_fu_671_p1, tmp_13_fu_720_p1)
    begin
        if ((((tmp_42_reg_1665 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((tmp_45_reg_1624 = ap_const_lv1_0) and (brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            p_heap0_0_d0 <= i1_reg_1484;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or ((tmp_39_reg_1643 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            p_heap0_0_d0 <= i0_reg_1477;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            p_heap0_0_d0 <= grp_HLS_malloc_1_s_fu_521_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_heap0_0_d0 <= weight0_heap0_load_s_reg_1561;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_42_reg_1665 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_39_reg_1643 = ap_const_lv1_1)) or ((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_45_reg_1624 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_13_fu_720_p1 = ap_const_lv1_1)))) then 
            p_heap0_0_d0 <= ap_const_lv32_FFFFFFFF;
        elsif ((((tmp_13_fu_720_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((tmp_6_fu_656_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            p_heap0_0_d0 <= ap_const_lv32_0;
        elsif (((tmp_5_fu_671_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_fu_656_p2 = ap_const_lv1_1))) then 
            p_heap0_0_d0 <= ap_const_lv32_2710;
        else 
            p_heap0_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_heap0_0_we0_assign_proc : process(ap_CS_fsm_state18, grp_HLS_malloc_1_s_fu_521_ap_done, ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state5, or_cond_reg_1511, ap_CS_fsm_state13, brmerge3_reg_1576, tmp_37_reg_1580, ap_CS_fsm_state14, tmp_36_reg_1595, ap_CS_fsm_state15, ap_CS_fsm_state16, tmp_45_reg_1624, tmp_39_reg_1643, tmp_42_reg_1665, tmp_6_fu_656_p2, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, tmp_5_fu_671_p1, tmp_13_fu_720_p1, tmp_40_fu_1196_p1, tmp_43_fu_1241_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_43_fu_1241_p1 = ap_const_lv1_1)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_36_reg_1595 = ap_const_lv1_1)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_37_reg_1580 = ap_const_lv1_1)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_13_fu_720_p1 = ap_const_lv1_1)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (tmp_13_fu_720_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_40_fu_1196_p1 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_42_reg_1665 = ap_const_lv1_1)) or ((tmp_42_reg_1665 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_39_reg_1643 = ap_const_lv1_1)) or ((tmp_39_reg_1643 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_45_reg_1624 = ap_const_lv1_1)) or ((tmp_45_reg_1624 = ap_const_lv1_0) and (brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((tmp_36_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((tmp_6_fu_656_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_5_fu_671_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_fu_656_p2 = ap_const_lv1_1)))) then 
            p_heap0_0_we0 <= ap_const_logic_1;
        else 
            p_heap0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_heap0_1_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, or_cond_reg_1511, ap_CS_fsm_state11, p_heap0_1_addr_7_reg_1532, ap_CS_fsm_state13, brmerge3_reg_1576, ap_CS_fsm_state14, p_heap0_1_addr_8_reg_1604, ap_CS_fsm_state15, ap_CS_fsm_state16, tmp_45_reg_1624, p_heap0_1_addr_14_reg_1633, tmp_39_reg_1643, p_heap0_1_addr_10_reg_1652, tmp_42_reg_1665, p_heap0_1_addr_12_reg_1674, ap_CS_fsm_state23, ap_CS_fsm_state17, newIndex3_cast_fu_690_p1, newIndex5_fu_724_p1, newIndex6_cast_fu_746_p1, newIndex8_fu_773_p1, newIndex9_cast_fu_814_p1, newIndex10_cast_fu_908_p1, newIndex12_cast_fu_990_p1, newIndex15_cast_fu_1117_p1, newIndex25_cast_fu_1152_p1, newIndex27_cast_fu_1172_p1, newIndex18_cast_fu_1200_p1, newIndex26_cast_fu_1221_p1, ap_CS_fsm_state19, newIndex22_cast_fu_1245_p1, newIndex19_cast_fu_1266_p1, ap_CS_fsm_state21, newIndex_cast_fu_1313_p1, tmp_13_fu_720_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_heap0_1_address0 <= newIndex_cast_fu_1313_p1(11 - 1 downto 0);
        elsif (((tmp_42_reg_1665 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            p_heap0_1_address0 <= newIndex19_cast_fu_1266_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_42_reg_1665 = ap_const_lv1_1))) then 
            p_heap0_1_address0 <= p_heap0_1_addr_12_reg_1674;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_heap0_1_address0 <= newIndex22_cast_fu_1245_p1(11 - 1 downto 0);
        elsif (((tmp_39_reg_1643 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            p_heap0_1_address0 <= newIndex26_cast_fu_1221_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_39_reg_1643 = ap_const_lv1_1))) then 
            p_heap0_1_address0 <= p_heap0_1_addr_10_reg_1652;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_heap0_1_address0 <= newIndex18_cast_fu_1200_p1(11 - 1 downto 0);
        elsif (((tmp_45_reg_1624 = ap_const_lv1_0) and (brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            p_heap0_1_address0 <= newIndex27_cast_fu_1172_p1(11 - 1 downto 0);
        elsif (((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_45_reg_1624 = ap_const_lv1_1))) then 
            p_heap0_1_address0 <= p_heap0_1_addr_14_reg_1633;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_heap0_1_address0 <= newIndex25_cast_fu_1152_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_heap0_1_address0 <= p_heap0_1_addr_8_reg_1604;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_heap0_1_address0 <= newIndex15_cast_fu_1117_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_heap0_1_address0 <= p_heap0_1_addr_7_reg_1532;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_heap0_1_address0 <= newIndex12_cast_fu_990_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_heap0_1_address0 <= newIndex10_cast_fu_908_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_heap0_1_address0 <= newIndex9_cast_fu_814_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_heap0_1_address0 <= newIndex8_fu_773_p1(11 - 1 downto 0);
        elsif (((tmp_13_fu_720_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            p_heap0_1_address0 <= newIndex6_cast_fu_746_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_13_fu_720_p1 = ap_const_lv1_1))) then 
            p_heap0_1_address0 <= newIndex5_fu_724_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_heap0_1_address0 <= newIndex3_cast_fu_690_p1(11 - 1 downto 0);
        else 
            p_heap0_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p_heap0_1_ce0_assign_proc : process(ap_CS_fsm_state18, grp_HLS_malloc_1_s_fu_521_ap_done, ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, or_cond_reg_1511, ap_CS_fsm_state11, ap_CS_fsm_state13, brmerge3_reg_1576, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, tmp_45_reg_1624, tmp_39_reg_1643, tmp_42_reg_1665, ap_CS_fsm_state23, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, tmp_13_fu_720_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_13_fu_720_p1 = ap_const_lv1_1)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (tmp_13_fu_720_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_42_reg_1665 = ap_const_lv1_1)) or ((tmp_42_reg_1665 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_39_reg_1643 = ap_const_lv1_1)) or ((tmp_39_reg_1643 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_45_reg_1624 = ap_const_lv1_1)) or ((tmp_45_reg_1624 = ap_const_lv1_0) and (brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            p_heap0_1_ce0 <= ap_const_logic_1;
        else 
            p_heap0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_heap0_1_d0_assign_proc : process(grp_HLS_malloc_1_s_fu_521_ap_return, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state5, i0_reg_1477, i1_reg_1484, or_cond_reg_1511, weight1_1_reg_1566, ap_CS_fsm_state13, brmerge3_reg_1576, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, tmp_45_reg_1624, tmp_39_reg_1643, tmp_42_reg_1665, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, tmp_13_fu_720_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_42_reg_1665 = ap_const_lv1_1)) or ((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_45_reg_1624 = ap_const_lv1_1)))) then 
            p_heap0_1_d0 <= i1_reg_1484;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_39_reg_1643 = ap_const_lv1_1)))) then 
            p_heap0_1_d0 <= i0_reg_1477;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            p_heap0_1_d0 <= grp_HLS_malloc_1_s_fu_521_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_heap0_1_d0 <= weight1_1_reg_1566;
        elsif ((((tmp_42_reg_1665 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((tmp_39_reg_1643 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((tmp_45_reg_1624 = ap_const_lv1_0) and (brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((tmp_13_fu_720_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            p_heap0_1_d0 <= ap_const_lv32_FFFFFFFF;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_13_fu_720_p1 = ap_const_lv1_1))) then 
            p_heap0_1_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_heap0_1_d0 <= ap_const_lv32_2710;
        else 
            p_heap0_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_heap0_1_we0_assign_proc : process(ap_CS_fsm_state18, grp_HLS_malloc_1_s_fu_521_ap_done, ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state5, or_cond_reg_1511, ap_CS_fsm_state13, brmerge3_reg_1576, tmp_37_reg_1580, ap_CS_fsm_state14, tmp_36_reg_1595, ap_CS_fsm_state15, ap_CS_fsm_state16, tmp_45_reg_1624, tmp_39_reg_1643, tmp_42_reg_1665, tmp_6_fu_656_p2, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, tmp_5_fu_671_p1, tmp_13_fu_720_p1, tmp_40_fu_1196_p1, tmp_43_fu_1241_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (tmp_43_fu_1241_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (tmp_36_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (tmp_37_reg_1580 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_13_fu_720_p1 = ap_const_lv1_1)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (tmp_13_fu_720_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_HLS_malloc_1_s_fu_521_ap_done = ap_const_logic_1) and (tmp_40_fu_1196_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_42_reg_1665 = ap_const_lv1_1)) or ((tmp_42_reg_1665 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_39_reg_1643 = ap_const_lv1_1)) or ((tmp_39_reg_1643 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_45_reg_1624 = ap_const_lv1_1)) or ((tmp_45_reg_1624 = ap_const_lv1_0) and (brmerge3_reg_1576 = ap_const_lv1_0) and (or_cond_reg_1511 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_36_reg_1595 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_5_fu_671_p1 = ap_const_lv1_1) and (tmp_6_fu_656_p2 = ap_const_lv1_1)))) then 
            p_heap0_1_we0 <= ap_const_logic_1;
        else 
            p_heap0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_sum2_fu_893_p2 <= std_logic_vector(unsigned(tmp_26_reg_1442) + unsigned(ap_const_lv13_1));
    p_sum3_fu_1123_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(tmp_35_reg_1590));
    p_sum4_fu_1157_p2 <= std_logic_vector(unsigned(tmp_44_reg_1619) + unsigned(ap_const_lv13_1));
    p_sum6_fu_1206_p2 <= std_logic_vector(unsigned(tmp_38_reg_1638) + unsigned(ap_const_lv13_1));
    p_sum8_fu_1251_p2 <= std_logic_vector(unsigned(tmp_41_reg_1660) + unsigned(ap_const_lv13_1));
    p_sum_fu_730_p2 <= std_logic_vector(unsigned(tmp_12_fu_716_p1) + unsigned(ap_const_lv13_1));
    tmp6_fu_1043_p2 <= (tmp_22_fu_1031_p2 and tmp_21_reg_1537);
    tmp7_fu_1048_p2 <= (tmp_25_fu_1037_p2 and tmp_24_reg_1549);
    tmp8_fu_1065_p2 <= (in_list_q1 or brmerge_demorgan_not_fu_1059_p2);
    tmp_10_fu_845_p2 <= "1" when (signed(i_2_reg_498) < signed(extLd_fu_841_p1)) else "0";
    tmp_11_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_reg_509),64));
    tmp_12_fu_716_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(13 - 1 downto 0);
    tmp_13_fu_720_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(1 - 1 downto 0);
    tmp_14_fu_873_p2 <= std_logic_vector(unsigned(tmp_7_reg_1458) + unsigned(i0_fu_861_p2));
        tmp_15_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_fu_873_p2),64));

    tmp_16_fu_883_p2 <= std_logic_vector(unsigned(tmp_7_reg_1458) + unsigned(i1_fu_867_p2));
        tmp_17_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_fu_883_p2),64));

    tmp_18_fu_914_p2 <= "1" when (signed(map_r_q0) > signed(ap_const_lv32_270F)) else "0";
    tmp_19_fu_920_p2 <= "1" when (signed(map_r_q1) > signed(ap_const_lv32_270F)) else "0";
    tmp_1_fu_1283_p1 <= n;
    tmp_1_fu_1283_p2 <= "1" when (signed(i_3_cast_fu_1279_p1) < signed(tmp_1_fu_1283_p1)) else "0";
    tmp_1_i_fu_591_p0 <= n;
    tmp_1_i_fu_591_p2 <= std_logic_vector(signed(tmp_1_i_fu_591_p0) + signed(ap_const_lv32_1));
        tmp_20_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i0_reg_1477),64));

    tmp_21_fu_999_p2 <= "1" when (signed(weight0_reg_1515) < signed(p_heap0_0_q0)) else "0";
    tmp_22_fu_1031_p2 <= (in_list_q0 xor ap_const_lv1_1);
    tmp_23_cast_fu_942_p3 <= (tmp_32_reg_1472 & ap_const_lv1_0);
        tmp_23_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i1_reg_1484),64));

    tmp_24_fu_1008_p2 <= "1" when (signed(weight1_reg_1521) < signed(p_heap0_1_q0)) else "0";
    tmp_24_not_fu_1081_p2 <= (tmp_21_reg_1537 xor ap_const_lv1_1);
    tmp_25_fu_1037_p2 <= (in_list_q1 xor ap_const_lv1_1);
    tmp_26_cast_fu_969_p2 <= (tmp_23_cast_fu_942_p3 or ap_const_lv13_1);
    tmp_26_fu_819_p1 <= offset_head_reg_488(13 - 1 downto 0);
    tmp_27_fu_779_p1 <= offset_head_reg_488(1 - 1 downto 0);
    tmp_27_not_fu_1092_p2 <= (tmp_24_reg_1549 xor ap_const_lv1_1);
    tmp_28_fu_791_p1 <= now_fu_783_p3(13 - 1 downto 0);
    tmp_29_fu_795_p1 <= now_fu_783_p3(1 - 1 downto 0);
    tmp_30_fu_1294_p1 <= i_3_reg_509(13 - 1 downto 0);
    tmp_31_fu_1324_p1 <= i_3_reg_509(1 - 1 downto 0);
    tmp_32_fu_857_p1 <= i_2_reg_498(12 - 1 downto 0);
    tmp_34_fu_1027_p1 <= offset_tail_fu_90(13 - 1 downto 0);
    tmp_35_fu_1103_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(13 - 1 downto 0);
    tmp_36_fu_1107_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(1 - 1 downto 0);
    tmp_37_fu_1077_p1 <= offset_tail_fu_90(1 - 1 downto 0);
    tmp_38_fu_1182_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(13 - 1 downto 0);
    tmp_39_fu_1186_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(1 - 1 downto 0);
    tmp_3_fu_667_p1 <= i_reg_466(13 - 1 downto 0);
    tmp_40_fu_1196_p1 <= offset_tail_fu_90(1 - 1 downto 0);
    tmp_41_fu_1227_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(13 - 1 downto 0);
    tmp_42_fu_1231_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(1 - 1 downto 0);
    tmp_43_fu_1241_p1 <= offset_tail_fu_90(1 - 1 downto 0);
    tmp_44_fu_1138_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(13 - 1 downto 0);
    tmp_45_fu_1142_p1 <= grp_HLS_malloc_1_s_fu_521_ap_return(1 - 1 downto 0);
        tmp_4_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(now_reg_1416),64));

    tmp_5_cast_fu_629_p3 <= (tmp_fu_619_p4 & ap_const_lv1_0);
    tmp_5_fu_671_p1 <= i_reg_466(1 - 1 downto 0);
    tmp_6_fu_656_p1 <= n;
    tmp_6_fu_656_p2 <= "1" when (signed(i_cast_fu_652_p1) < signed(tmp_6_fu_656_p1)) else "0";
    tmp_7_fu_833_p0 <= n;
    tmp_7_fu_833_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_7_fu_833_p0) * signed(now_reg_1416))), 32));
    tmp_8_fu_757_p2 <= "1" when (offset_head_reg_488 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_9_fu_700_p1 <= n;
    tmp_9_fu_700_p2 <= "1" when (signed(i_1_cast_fu_696_p1) < signed(tmp_9_fu_700_p1)) else "0";
    tmp_fu_619_p4 <= grp_HLS_malloc_1_s_fu_521_ap_return(12 downto 1);
    tmp_s_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_477),64));
    weight0_fu_932_p2 <= std_logic_vector(unsigned(now_dis_reg_1452) + unsigned(map_r_q0));
    weight0_heap0_load_s_fu_1013_p3 <= 
        weight0_reg_1515 when (tmp_21_fu_999_p2(0) = '1') else 
        p_heap0_0_q0;
    weight1_1_fu_1020_p3 <= 
        weight1_reg_1521 when (tmp_24_fu_1008_p2(0) = '1') else 
        p_heap0_1_q0;
    weight1_fu_937_p2 <= std_logic_vector(unsigned(now_dis_reg_1452) + unsigned(map_r_q1));
end behav;
