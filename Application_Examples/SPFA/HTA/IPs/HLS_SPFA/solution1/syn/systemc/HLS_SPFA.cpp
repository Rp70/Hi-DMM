// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "HLS_SPFA.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic HLS_SPFA::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic HLS_SPFA::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state1 = "1";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state2 = "10";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state3 = "100";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state4 = "1000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state5 = "10000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state6 = "100000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state9 = "100000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state10 = "1000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state11 = "10000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state12 = "100000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<24> HLS_SPFA::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> HLS_SPFA::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> HLS_SPFA::ap_const_lv1_0 = "0";
const sc_lv<31> HLS_SPFA::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> HLS_SPFA::ap_const_lv32_11 = "10001";
const sc_lv<32> HLS_SPFA::ap_const_lv32_13 = "10011";
const sc_lv<32> HLS_SPFA::ap_const_lv32_1 = "1";
const sc_lv<32> HLS_SPFA::ap_const_lv32_2 = "10";
const sc_lv<32> HLS_SPFA::ap_const_lv32_3 = "11";
const sc_lv<32> HLS_SPFA::ap_const_lv32_4 = "100";
const sc_lv<32> HLS_SPFA::ap_const_lv32_5 = "101";
const sc_lv<32> HLS_SPFA::ap_const_lv32_6 = "110";
const sc_lv<32> HLS_SPFA::ap_const_lv32_7 = "111";
const sc_lv<1> HLS_SPFA::ap_const_lv1_1 = "1";
const sc_lv<32> HLS_SPFA::ap_const_lv32_8 = "1000";
const sc_lv<32> HLS_SPFA::ap_const_lv32_9 = "1001";
const sc_lv<32> HLS_SPFA::ap_const_lv32_A = "1010";
const sc_lv<32> HLS_SPFA::ap_const_lv32_B = "1011";
const sc_lv<32> HLS_SPFA::ap_const_lv32_C = "1100";
const sc_lv<32> HLS_SPFA::ap_const_lv32_D = "1101";
const sc_lv<32> HLS_SPFA::ap_const_lv32_E = "1110";
const sc_lv<32> HLS_SPFA::ap_const_lv32_F = "1111";
const sc_lv<32> HLS_SPFA::ap_const_lv32_15 = "10101";
const sc_lv<32> HLS_SPFA::ap_const_lv32_16 = "10110";
const sc_lv<32> HLS_SPFA::ap_const_lv32_10 = "10000";
const sc_lv<32> HLS_SPFA::ap_const_lv32_17 = "10111";
const sc_lv<64> HLS_SPFA::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> HLS_SPFA::ap_const_lv32_12 = "10010";
const sc_lv<32> HLS_SPFA::ap_const_lv32_14 = "10100";
const sc_lv<32> HLS_SPFA::ap_const_lv32_2710 = "10011100010000";
const sc_lv<32> HLS_SPFA::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> HLS_SPFA::ap_const_lv32_1F = "11111";
const sc_lv<13> HLS_SPFA::ap_const_lv13_1 = "1";
const sc_lv<31> HLS_SPFA::ap_const_lv31_1 = "1";
const sc_lv<32> HLS_SPFA::ap_const_lv32_270F = "10011100001111";
const bool HLS_SPFA::ap_const_boolean_1 = true;

HLS_SPFA::HLS_SPFA(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_heap0_0_U = new HLS_SPFA_p_heap0_0("p_heap0_0_U");
    p_heap0_0_U->clk(ap_clk);
    p_heap0_0_U->reset(ap_rst);
    p_heap0_0_U->address0(p_heap0_0_address0);
    p_heap0_0_U->ce0(p_heap0_0_ce0);
    p_heap0_0_U->we0(p_heap0_0_we0);
    p_heap0_0_U->d0(p_heap0_0_d0);
    p_heap0_0_U->q0(p_heap0_0_q0);
    p_heap0_1_U = new HLS_SPFA_p_heap0_0("p_heap0_1_U");
    p_heap0_1_U->clk(ap_clk);
    p_heap0_1_U->reset(ap_rst);
    p_heap0_1_U->address0(p_heap0_1_address0);
    p_heap0_1_U->ce0(p_heap0_1_ce0);
    p_heap0_1_U->we0(p_heap0_1_we0);
    p_heap0_1_U->d0(p_heap0_1_d0);
    p_heap0_1_U->q0(p_heap0_1_q0);
    in_list_U = new HLS_SPFA_in_list("in_list_U");
    in_list_U->clk(ap_clk);
    in_list_U->reset(ap_rst);
    in_list_U->address0(in_list_address0);
    in_list_U->ce0(in_list_ce0);
    in_list_U->we0(in_list_we0);
    in_list_U->d0(in_list_d0);
    in_list_U->q0(in_list_q0);
    in_list_U->address1(in_list_address1);
    in_list_U->ce1(in_list_ce1);
    in_list_U->we1(in_list_we1);
    in_list_U->d1(ap_var_for_const0);
    in_list_U->q1(in_list_q1);
    grp_HLS_malloc_1_s_fu_521 = new HLS_malloc_1_s("grp_HLS_malloc_1_s_fu_521");
    grp_HLS_malloc_1_s_fu_521->ap_clk(ap_clk);
    grp_HLS_malloc_1_s_fu_521->ap_rst(ap_rst);
    grp_HLS_malloc_1_s_fu_521->ap_start(grp_HLS_malloc_1_s_fu_521_ap_start);
    grp_HLS_malloc_1_s_fu_521->ap_done(grp_HLS_malloc_1_s_fu_521_ap_done);
    grp_HLS_malloc_1_s_fu_521->ap_idle(grp_HLS_malloc_1_s_fu_521_ap_idle);
    grp_HLS_malloc_1_s_fu_521->ap_ready(grp_HLS_malloc_1_s_fu_521_ap_ready);
    grp_HLS_malloc_1_s_fu_521->size(grp_HLS_malloc_1_s_fu_521_size);
    grp_HLS_malloc_1_s_fu_521->allocator_size(grp_HLS_malloc_1_s_fu_521_allocator_size);
    grp_HLS_malloc_1_s_fu_521->allocator_size_ap_vld(grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld);
    grp_HLS_malloc_1_s_fu_521->allocator_size_ap_ack(alloc_1_size_ap_ack);
    grp_HLS_malloc_1_s_fu_521->allocator_free_targe(grp_HLS_malloc_1_s_fu_521_allocator_free_targe);
    grp_HLS_malloc_1_s_fu_521->allocator_free_targe_ap_vld(grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld);
    grp_HLS_malloc_1_s_fu_521->allocator_free_targe_ap_ack(alloc_1_free_target_ap_ack);
    grp_HLS_malloc_1_s_fu_521->allocator_addr(alloc_1_addr);
    grp_HLS_malloc_1_s_fu_521->allocator_addr_ap_vld(alloc_1_addr_ap_vld);
    grp_HLS_malloc_1_s_fu_521->allocator_addr_ap_ack(grp_HLS_malloc_1_s_fu_521_allocator_addr_ap_ack);
    grp_HLS_malloc_1_s_fu_521->allocator_cmd(grp_HLS_malloc_1_s_fu_521_allocator_cmd);
    grp_HLS_malloc_1_s_fu_521->allocator_cmd_ap_vld(grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld);
    grp_HLS_malloc_1_s_fu_521->allocator_cmd_ap_ack(alloc_1_cmd_ap_ack);
    grp_HLS_malloc_1_s_fu_521->ap_return(grp_HLS_malloc_1_s_fu_521_ap_return);
    grp_HLS_free_1_s_fu_538 = new HLS_free_1_s("grp_HLS_free_1_s_fu_538");
    grp_HLS_free_1_s_fu_538->ap_clk(ap_clk);
    grp_HLS_free_1_s_fu_538->ap_rst(ap_rst);
    grp_HLS_free_1_s_fu_538->ap_start(grp_HLS_free_1_s_fu_538_ap_start);
    grp_HLS_free_1_s_fu_538->ap_done(grp_HLS_free_1_s_fu_538_ap_done);
    grp_HLS_free_1_s_fu_538->ap_idle(grp_HLS_free_1_s_fu_538_ap_idle);
    grp_HLS_free_1_s_fu_538->ap_ready(grp_HLS_free_1_s_fu_538_ap_ready);
    grp_HLS_free_1_s_fu_538->free_target(offset_head_reg_488);
    grp_HLS_free_1_s_fu_538->allocator_size(grp_HLS_free_1_s_fu_538_allocator_size);
    grp_HLS_free_1_s_fu_538->allocator_size_ap_vld(grp_HLS_free_1_s_fu_538_allocator_size_ap_vld);
    grp_HLS_free_1_s_fu_538->allocator_size_ap_ack(alloc_1_size_ap_ack);
    grp_HLS_free_1_s_fu_538->allocator_free_targe(grp_HLS_free_1_s_fu_538_allocator_free_targe);
    grp_HLS_free_1_s_fu_538->allocator_free_targe_ap_vld(grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld);
    grp_HLS_free_1_s_fu_538->allocator_free_targe_ap_ack(alloc_1_free_target_ap_ack);
    grp_HLS_free_1_s_fu_538->allocator_cmd(grp_HLS_free_1_s_fu_538_allocator_cmd);
    grp_HLS_free_1_s_fu_538->allocator_cmd_ap_vld(grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld);
    grp_HLS_free_1_s_fu_538->allocator_cmd_ap_ack(alloc_1_cmd_ap_ack);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_alloc_1_addr_ap_ack);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_addr_ap_ack );

    SC_METHOD(thread_alloc_1_cmd);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_cmd );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_538_allocator_cmd );
    sensitive << ( grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld );

    SC_METHOD(thread_alloc_1_cmd_ap_vld);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld );

    SC_METHOD(thread_alloc_1_free_target);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_free_targe );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_538_allocator_free_targe );
    sensitive << ( grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld );

    SC_METHOD(thread_alloc_1_free_target_ap_vld);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld );

    SC_METHOD(thread_alloc_1_size);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_size );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_538_allocator_size );
    sensitive << ( grp_HLS_free_1_s_fu_538_allocator_size_ap_vld );

    SC_METHOD(thread_alloc_1_size_ap_vld);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_538_allocator_size_ap_vld );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_1_fu_1283_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_1_fu_1283_p2 );

    SC_METHOD(thread_brmerge3_fu_1071_p2);
    sensitive << ( in_list_q0 );
    sensitive << ( tmp8_fu_1065_p2 );

    SC_METHOD(thread_brmerge4_fu_1086_p2);
    sensitive << ( in_list_q0 );
    sensitive << ( tmp_24_not_fu_1081_p2 );

    SC_METHOD(thread_brmerge5_fu_1097_p2);
    sensitive << ( in_list_q1 );
    sensitive << ( tmp_27_not_fu_1092_p2 );

    SC_METHOD(thread_brmerge_demorgan_fu_1053_p2);
    sensitive << ( tmp7_fu_1048_p2 );
    sensitive << ( tmp6_fu_1043_p2 );

    SC_METHOD(thread_brmerge_demorgan_not_fu_1059_p2);
    sensitive << ( brmerge_demorgan_fu_1053_p2 );

    SC_METHOD(thread_dis_output_address0);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_11_fu_1319_p1 );

    SC_METHOD(thread_dis_output_ce0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_dis_output_d0);
    sensitive << ( p_heap0_0_q0 );
    sensitive << ( p_heap0_1_q0 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_31_fu_1324_p1 );

    SC_METHOD(thread_dis_output_we0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_extLd_fu_841_p1);
    sensitive << ( N_2 );

    SC_METHOD(thread_grp_HLS_free_1_s_fu_538_ap_start);
    sensitive << ( grp_HLS_free_1_s_fu_538_ap_start_reg );

    SC_METHOD(thread_grp_HLS_malloc_1_s_fu_521_ap_start);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_start_reg );

    SC_METHOD(thread_grp_HLS_malloc_1_s_fu_521_size);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_550_p4);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_grp_fu_563_p2);
    sensitive << ( tmp_34_reg_1571 );

    SC_METHOD(thread_grp_fu_568_p4);
    sensitive << ( grp_fu_563_p2 );

    SC_METHOD(thread_guard_variable_for_H_1_load_fu_587_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_H );

    SC_METHOD(thread_i0_fu_861_p2);
    sensitive << ( i_2_reg_498 );

    SC_METHOD(thread_i1_fu_867_p2);
    sensitive << ( i0_fu_861_p2 );

    SC_METHOD(thread_i_1_cast_fu_696_p1);
    sensitive << ( i_1_reg_477 );

    SC_METHOD(thread_i_3_cast_fu_1279_p1);
    sensitive << ( i_3_reg_509 );

    SC_METHOD(thread_i_4_fu_661_p2);
    sensitive << ( i_reg_466 );

    SC_METHOD(thread_i_5_fu_705_p2);
    sensitive << ( i_1_reg_477 );

    SC_METHOD(thread_i_6_fu_1288_p2);
    sensitive << ( i_3_reg_509 );

    SC_METHOD(thread_i_7_fu_851_p2);
    sensitive << ( i_2_reg_498 );

    SC_METHOD(thread_i_cast_fu_652_p1);
    sensitive << ( i_reg_466 );

    SC_METHOD(thread_in_list_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_4_reg_1447 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( in_list_addr_4_reg_1555 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_s_fu_711_p1 );
    sensitive << ( tmp_20_fu_995_p1 );

    SC_METHOD(thread_in_list_address1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( in_list_addr_3_reg_1543 );
    sensitive << ( in_list_addr_4_reg_1555 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_23_fu_1004_p1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_in_list_ce0);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_in_list_ce1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_in_list_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_in_list_we0);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_10_fu_845_p2 );
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( tmp_9_fu_700_p2 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_in_list_we1);
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_local_dis_0_sum1_fu_799_p2);
    sensitive << ( tmp_5_cast_reg_1349 );
    sensitive << ( tmp_28_fu_791_p1 );

    SC_METHOD(thread_local_dis_0_sum2_fu_675_p2);
    sensitive << ( tmp_5_cast_reg_1349 );
    sensitive << ( tmp_3_fu_667_p1 );

    SC_METHOD(thread_local_dis_0_sum4_fu_949_p2);
    sensitive << ( tmp_5_cast_reg_1349 );
    sensitive << ( tmp_23_cast_fu_942_p3 );

    SC_METHOD(thread_local_dis_0_sum5_fu_975_p2);
    sensitive << ( tmp_5_cast_reg_1349 );
    sensitive << ( tmp_26_cast_fu_969_p2 );

    SC_METHOD(thread_local_dis_0_sum_fu_1298_p2);
    sensitive << ( tmp_5_cast_reg_1349 );
    sensitive << ( tmp_30_fu_1294_p1 );

    SC_METHOD(thread_map_r_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_15_fu_878_p1 );

    SC_METHOD(thread_map_r_address1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_17_fu_888_p1 );

    SC_METHOD(thread_map_r_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_map_r_ce1);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_newIndex10_cast_fu_908_p1);
    sensitive << ( newIndex10_fu_898_p4 );

    SC_METHOD(thread_newIndex10_fu_898_p4);
    sensitive << ( p_sum2_fu_893_p2 );

    SC_METHOD(thread_newIndex11_cast_fu_964_p1);
    sensitive << ( newIndex11_fu_954_p4 );

    SC_METHOD(thread_newIndex11_fu_954_p4);
    sensitive << ( local_dis_0_sum4_fu_949_p2 );

    SC_METHOD(thread_newIndex12_cast_fu_990_p1);
    sensitive << ( newIndex12_fu_980_p4 );

    SC_METHOD(thread_newIndex12_fu_980_p4);
    sensitive << ( local_dis_0_sum5_fu_975_p2 );

    SC_METHOD(thread_newIndex14_fu_1111_p1);
    sensitive << ( grp_fu_550_p4 );

    SC_METHOD(thread_newIndex15_cast_fu_1117_p1);
    sensitive << ( grp_fu_568_p4 );

    SC_METHOD(thread_newIndex17_fu_1190_p1);
    sensitive << ( grp_fu_550_p4 );

    SC_METHOD(thread_newIndex18_cast_fu_1200_p1);
    sensitive << ( grp_fu_568_p4 );

    SC_METHOD(thread_newIndex19_cast_fu_1266_p1);
    sensitive << ( newIndex19_fu_1256_p4 );

    SC_METHOD(thread_newIndex19_fu_1256_p4);
    sensitive << ( p_sum8_fu_1251_p2 );

    SC_METHOD(thread_newIndex1_fu_637_p4);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_newIndex21_fu_1235_p1);
    sensitive << ( grp_fu_550_p4 );

    SC_METHOD(thread_newIndex22_cast_fu_1245_p1);
    sensitive << ( grp_fu_568_p4 );

    SC_METHOD(thread_newIndex24_fu_1146_p1);
    sensitive << ( grp_fu_550_p4 );

    SC_METHOD(thread_newIndex25_cast_fu_1152_p1);
    sensitive << ( newIndex25_reg_1609 );

    SC_METHOD(thread_newIndex26_cast_fu_1221_p1);
    sensitive << ( newIndex26_fu_1211_p4 );

    SC_METHOD(thread_newIndex26_fu_1211_p4);
    sensitive << ( p_sum6_fu_1206_p2 );

    SC_METHOD(thread_newIndex27_cast_fu_1172_p1);
    sensitive << ( newIndex27_fu_1162_p4 );

    SC_METHOD(thread_newIndex27_fu_1162_p4);
    sensitive << ( p_sum4_fu_1157_p2 );

    SC_METHOD(thread_newIndex2_fu_647_p1);
    sensitive << ( newIndex1_fu_637_p4 );

    SC_METHOD(thread_newIndex3_cast_fu_690_p1);
    sensitive << ( newIndex3_fu_680_p4 );

    SC_METHOD(thread_newIndex3_fu_680_p4);
    sensitive << ( local_dis_0_sum2_fu_675_p2 );

    SC_METHOD(thread_newIndex5_fu_724_p1);
    sensitive << ( grp_fu_550_p4 );

    SC_METHOD(thread_newIndex6_cast_fu_746_p1);
    sensitive << ( newIndex6_fu_736_p4 );

    SC_METHOD(thread_newIndex6_fu_736_p4);
    sensitive << ( p_sum_fu_730_p2 );

    SC_METHOD(thread_newIndex7_fu_763_p4);
    sensitive << ( offset_head_reg_488 );

    SC_METHOD(thread_newIndex8_fu_773_p1);
    sensitive << ( newIndex7_fu_763_p4 );

    SC_METHOD(thread_newIndex9_cast_fu_814_p1);
    sensitive << ( newIndex9_reg_1427 );

    SC_METHOD(thread_newIndex_cast_fu_1313_p1);
    sensitive << ( newIndex_fu_1303_p4 );

    SC_METHOD(thread_newIndex_fu_1303_p4);
    sensitive << ( local_dis_0_sum_fu_1298_p2 );

    SC_METHOD(thread_now_dis_fu_826_p3);
    sensitive << ( tmp_29_reg_1422 );
    sensitive << ( p_heap0_0_q0 );
    sensitive << ( p_heap0_1_q0 );

    SC_METHOD(thread_now_fu_783_p3);
    sensitive << ( tmp_27_fu_779_p1 );
    sensitive << ( p_heap0_0_q0 );
    sensitive << ( p_heap0_1_q0 );

    SC_METHOD(thread_offset_next_fu_1272_p3);
    sensitive << ( tmp_27_reg_1411 );
    sensitive << ( p_heap0_0_q0 );
    sensitive << ( p_heap0_1_q0 );

    SC_METHOD(thread_or_cond_fu_926_p2);
    sensitive << ( tmp_18_fu_914_p2 );
    sensitive << ( tmp_19_fu_920_p2 );

    SC_METHOD(thread_p_heap0_0_address0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( p_heap0_0_addr_reg_1358 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( p_heap0_0_addr_8_reg_1527 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( p_heap0_0_addr_9_reg_1599 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_45_reg_1624 );
    sensitive << ( p_heap0_0_addr_15_reg_1628 );
    sensitive << ( tmp_39_reg_1643 );
    sensitive << ( p_heap0_0_addr_11_reg_1647 );
    sensitive << ( tmp_42_reg_1665 );
    sensitive << ( p_heap0_0_addr_13_reg_1669 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_6_fu_656_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( newIndex3_cast_fu_690_p1 );
    sensitive << ( newIndex5_fu_724_p1 );
    sensitive << ( newIndex6_cast_fu_746_p1 );
    sensitive << ( newIndex8_fu_773_p1 );
    sensitive << ( newIndex9_cast_fu_814_p1 );
    sensitive << ( newIndex10_cast_fu_908_p1 );
    sensitive << ( newIndex11_cast_fu_964_p1 );
    sensitive << ( newIndex15_cast_fu_1117_p1 );
    sensitive << ( newIndex25_cast_fu_1152_p1 );
    sensitive << ( newIndex27_cast_fu_1172_p1 );
    sensitive << ( newIndex18_cast_fu_1200_p1 );
    sensitive << ( newIndex26_cast_fu_1221_p1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( newIndex22_cast_fu_1245_p1 );
    sensitive << ( newIndex19_cast_fu_1266_p1 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( newIndex_cast_fu_1313_p1 );
    sensitive << ( tmp_5_fu_671_p1 );
    sensitive << ( tmp_13_fu_720_p1 );

    SC_METHOD(thread_p_heap0_0_ce0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_done );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_45_reg_1624 );
    sensitive << ( tmp_39_reg_1643 );
    sensitive << ( tmp_42_reg_1665 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_6_fu_656_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_5_fu_671_p1 );
    sensitive << ( tmp_13_fu_720_p1 );

    SC_METHOD(thread_p_heap0_0_d0);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i0_reg_1477 );
    sensitive << ( i1_reg_1484 );
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( weight0_heap0_load_s_reg_1561 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_45_reg_1624 );
    sensitive << ( tmp_39_reg_1643 );
    sensitive << ( tmp_42_reg_1665 );
    sensitive << ( tmp_6_fu_656_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_5_fu_671_p1 );
    sensitive << ( tmp_13_fu_720_p1 );

    SC_METHOD(thread_p_heap0_0_we0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_done );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( tmp_37_reg_1580 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_36_reg_1595 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_45_reg_1624 );
    sensitive << ( tmp_39_reg_1643 );
    sensitive << ( tmp_42_reg_1665 );
    sensitive << ( tmp_6_fu_656_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_5_fu_671_p1 );
    sensitive << ( tmp_13_fu_720_p1 );
    sensitive << ( tmp_40_fu_1196_p1 );
    sensitive << ( tmp_43_fu_1241_p1 );

    SC_METHOD(thread_p_heap0_1_address0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( p_heap0_1_addr_7_reg_1532 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( p_heap0_1_addr_8_reg_1604 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_45_reg_1624 );
    sensitive << ( p_heap0_1_addr_14_reg_1633 );
    sensitive << ( tmp_39_reg_1643 );
    sensitive << ( p_heap0_1_addr_10_reg_1652 );
    sensitive << ( tmp_42_reg_1665 );
    sensitive << ( p_heap0_1_addr_12_reg_1674 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( newIndex3_cast_fu_690_p1 );
    sensitive << ( newIndex5_fu_724_p1 );
    sensitive << ( newIndex6_cast_fu_746_p1 );
    sensitive << ( newIndex8_fu_773_p1 );
    sensitive << ( newIndex9_cast_fu_814_p1 );
    sensitive << ( newIndex10_cast_fu_908_p1 );
    sensitive << ( newIndex12_cast_fu_990_p1 );
    sensitive << ( newIndex15_cast_fu_1117_p1 );
    sensitive << ( newIndex25_cast_fu_1152_p1 );
    sensitive << ( newIndex27_cast_fu_1172_p1 );
    sensitive << ( newIndex18_cast_fu_1200_p1 );
    sensitive << ( newIndex26_cast_fu_1221_p1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( newIndex22_cast_fu_1245_p1 );
    sensitive << ( newIndex19_cast_fu_1266_p1 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( newIndex_cast_fu_1313_p1 );
    sensitive << ( tmp_13_fu_720_p1 );

    SC_METHOD(thread_p_heap0_1_ce0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_done );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_45_reg_1624 );
    sensitive << ( tmp_39_reg_1643 );
    sensitive << ( tmp_42_reg_1665 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_13_fu_720_p1 );

    SC_METHOD(thread_p_heap0_1_d0);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i0_reg_1477 );
    sensitive << ( i1_reg_1484 );
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( weight1_1_reg_1566 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_45_reg_1624 );
    sensitive << ( tmp_39_reg_1643 );
    sensitive << ( tmp_42_reg_1665 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_13_fu_720_p1 );

    SC_METHOD(thread_p_heap0_1_we0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_done );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( or_cond_reg_1511 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( brmerge3_reg_1576 );
    sensitive << ( tmp_37_reg_1580 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_36_reg_1595 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_45_reg_1624 );
    sensitive << ( tmp_39_reg_1643 );
    sensitive << ( tmp_42_reg_1665 );
    sensitive << ( tmp_6_fu_656_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_5_fu_671_p1 );
    sensitive << ( tmp_13_fu_720_p1 );
    sensitive << ( tmp_40_fu_1196_p1 );
    sensitive << ( tmp_43_fu_1241_p1 );

    SC_METHOD(thread_p_sum2_fu_893_p2);
    sensitive << ( tmp_26_reg_1442 );

    SC_METHOD(thread_p_sum3_fu_1123_p2);
    sensitive << ( tmp_35_reg_1590 );

    SC_METHOD(thread_p_sum4_fu_1157_p2);
    sensitive << ( tmp_44_reg_1619 );

    SC_METHOD(thread_p_sum6_fu_1206_p2);
    sensitive << ( tmp_38_reg_1638 );

    SC_METHOD(thread_p_sum8_fu_1251_p2);
    sensitive << ( tmp_41_reg_1660 );

    SC_METHOD(thread_p_sum_fu_730_p2);
    sensitive << ( tmp_12_fu_716_p1 );

    SC_METHOD(thread_tmp6_fu_1043_p2);
    sensitive << ( tmp_21_reg_1537 );
    sensitive << ( tmp_22_fu_1031_p2 );

    SC_METHOD(thread_tmp7_fu_1048_p2);
    sensitive << ( tmp_24_reg_1549 );
    sensitive << ( tmp_25_fu_1037_p2 );

    SC_METHOD(thread_tmp8_fu_1065_p2);
    sensitive << ( in_list_q1 );
    sensitive << ( brmerge_demorgan_not_fu_1059_p2 );

    SC_METHOD(thread_tmp_10_fu_845_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_2_reg_498 );
    sensitive << ( extLd_fu_841_p1 );

    SC_METHOD(thread_tmp_11_fu_1319_p1);
    sensitive << ( i_3_reg_509 );

    SC_METHOD(thread_tmp_12_fu_716_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_13_fu_720_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_14_fu_873_p2);
    sensitive << ( tmp_7_reg_1458 );
    sensitive << ( i0_fu_861_p2 );

    SC_METHOD(thread_tmp_15_fu_878_p1);
    sensitive << ( tmp_14_fu_873_p2 );

    SC_METHOD(thread_tmp_16_fu_883_p2);
    sensitive << ( tmp_7_reg_1458 );
    sensitive << ( i1_fu_867_p2 );

    SC_METHOD(thread_tmp_17_fu_888_p1);
    sensitive << ( tmp_16_fu_883_p2 );

    SC_METHOD(thread_tmp_18_fu_914_p2);
    sensitive << ( map_r_q0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_19_fu_920_p2);
    sensitive << ( map_r_q1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_1_fu_1283_p1);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_tmp_1_fu_1283_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( i_3_cast_fu_1279_p1 );
    sensitive << ( tmp_1_fu_1283_p1 );

    SC_METHOD(thread_tmp_1_i_fu_591_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( n );

    SC_METHOD(thread_tmp_1_i_fu_591_p2);
    sensitive << ( tmp_1_i_fu_591_p0 );

    SC_METHOD(thread_tmp_20_fu_995_p1);
    sensitive << ( i0_reg_1477 );

    SC_METHOD(thread_tmp_21_fu_999_p2);
    sensitive << ( weight0_reg_1515 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( p_heap0_0_q0 );

    SC_METHOD(thread_tmp_22_fu_1031_p2);
    sensitive << ( in_list_q0 );

    SC_METHOD(thread_tmp_23_cast_fu_942_p3);
    sensitive << ( tmp_32_reg_1472 );

    SC_METHOD(thread_tmp_23_fu_1004_p1);
    sensitive << ( i1_reg_1484 );

    SC_METHOD(thread_tmp_24_fu_1008_p2);
    sensitive << ( weight1_reg_1521 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( p_heap0_1_q0 );

    SC_METHOD(thread_tmp_24_not_fu_1081_p2);
    sensitive << ( tmp_21_reg_1537 );

    SC_METHOD(thread_tmp_25_fu_1037_p2);
    sensitive << ( in_list_q1 );

    SC_METHOD(thread_tmp_26_cast_fu_969_p2);
    sensitive << ( tmp_23_cast_fu_942_p3 );

    SC_METHOD(thread_tmp_26_fu_819_p1);
    sensitive << ( offset_head_reg_488 );

    SC_METHOD(thread_tmp_27_fu_779_p1);
    sensitive << ( offset_head_reg_488 );

    SC_METHOD(thread_tmp_27_not_fu_1092_p2);
    sensitive << ( tmp_24_reg_1549 );

    SC_METHOD(thread_tmp_28_fu_791_p1);
    sensitive << ( now_fu_783_p3 );

    SC_METHOD(thread_tmp_29_fu_795_p1);
    sensitive << ( now_fu_783_p3 );

    SC_METHOD(thread_tmp_30_fu_1294_p1);
    sensitive << ( i_3_reg_509 );

    SC_METHOD(thread_tmp_31_fu_1324_p1);
    sensitive << ( i_3_reg_509 );

    SC_METHOD(thread_tmp_32_fu_857_p1);
    sensitive << ( i_2_reg_498 );

    SC_METHOD(thread_tmp_34_fu_1027_p1);
    sensitive << ( offset_tail_fu_90 );

    SC_METHOD(thread_tmp_35_fu_1103_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_36_fu_1107_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_37_fu_1077_p1);
    sensitive << ( offset_tail_fu_90 );

    SC_METHOD(thread_tmp_38_fu_1182_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_39_fu_1186_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_3_fu_667_p1);
    sensitive << ( i_reg_466 );

    SC_METHOD(thread_tmp_40_fu_1196_p1);
    sensitive << ( offset_tail_fu_90 );

    SC_METHOD(thread_tmp_41_fu_1227_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_42_fu_1231_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_43_fu_1241_p1);
    sensitive << ( offset_tail_fu_90 );

    SC_METHOD(thread_tmp_44_fu_1138_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_45_fu_1142_p1);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_4_fu_823_p1);
    sensitive << ( now_reg_1416 );

    SC_METHOD(thread_tmp_5_cast_fu_629_p3);
    sensitive << ( tmp_fu_619_p4 );

    SC_METHOD(thread_tmp_5_fu_671_p1);
    sensitive << ( i_reg_466 );

    SC_METHOD(thread_tmp_6_fu_656_p1);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_6_fu_656_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_cast_fu_652_p1 );
    sensitive << ( tmp_6_fu_656_p1 );

    SC_METHOD(thread_tmp_7_fu_833_p0);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_tmp_7_fu_833_p2);
    sensitive << ( now_reg_1416 );
    sensitive << ( tmp_7_fu_833_p0 );

    SC_METHOD(thread_tmp_8_fu_757_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( offset_head_reg_488 );

    SC_METHOD(thread_tmp_9_fu_700_p1);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_9_fu_700_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_cast_fu_696_p1 );
    sensitive << ( tmp_9_fu_700_p1 );

    SC_METHOD(thread_tmp_fu_619_p4);
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_return );

    SC_METHOD(thread_tmp_s_fu_711_p1);
    sensitive << ( i_1_reg_477 );

    SC_METHOD(thread_weight0_fu_932_p2);
    sensitive << ( map_r_q0 );
    sensitive << ( now_dis_reg_1452 );

    SC_METHOD(thread_weight0_heap0_load_s_fu_1013_p3);
    sensitive << ( weight0_reg_1515 );
    sensitive << ( tmp_21_fu_999_p2 );
    sensitive << ( p_heap0_0_q0 );

    SC_METHOD(thread_weight1_1_fu_1020_p3);
    sensitive << ( weight1_reg_1521 );
    sensitive << ( tmp_24_fu_1008_p2 );
    sensitive << ( p_heap0_1_q0 );

    SC_METHOD(thread_weight1_fu_937_p2);
    sensitive << ( map_r_q1 );
    sensitive << ( now_dis_reg_1452 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_HLS_malloc_1_s_fu_521_ap_done );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_8_fu_757_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_10_fu_845_p2 );
    sensitive << ( or_cond_fu_926_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( brmerge3_fu_1071_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_HLS_free_1_s_fu_538_ap_done );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_1_fu_1283_p2 );
    sensitive << ( tmp_6_fu_656_p2 );
    sensitive << ( tmp_9_fu_700_p2 );
    sensitive << ( brmerge4_fu_1086_p2 );
    sensitive << ( brmerge5_fu_1097_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000001";
    guard_variable_for_H = "0";
    N_2 = "0000000000000000000000000000000";
    grp_HLS_malloc_1_s_fu_521_ap_start_reg = SC_LOGIC_0;
    grp_HLS_free_1_s_fu_538_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "HLS_SPFA_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, map_r_address0, "(port)map_r_address0");
    sc_trace(mVcdFile, map_r_ce0, "(port)map_r_ce0");
    sc_trace(mVcdFile, map_r_q0, "(port)map_r_q0");
    sc_trace(mVcdFile, map_r_address1, "(port)map_r_address1");
    sc_trace(mVcdFile, map_r_ce1, "(port)map_r_ce1");
    sc_trace(mVcdFile, map_r_q1, "(port)map_r_q1");
    sc_trace(mVcdFile, dis_output_address0, "(port)dis_output_address0");
    sc_trace(mVcdFile, dis_output_ce0, "(port)dis_output_ce0");
    sc_trace(mVcdFile, dis_output_we0, "(port)dis_output_we0");
    sc_trace(mVcdFile, dis_output_d0, "(port)dis_output_d0");
    sc_trace(mVcdFile, alloc_1_size, "(port)alloc_1_size");
    sc_trace(mVcdFile, alloc_1_size_ap_vld, "(port)alloc_1_size_ap_vld");
    sc_trace(mVcdFile, alloc_1_size_ap_ack, "(port)alloc_1_size_ap_ack");
    sc_trace(mVcdFile, alloc_1_free_target, "(port)alloc_1_free_target");
    sc_trace(mVcdFile, alloc_1_free_target_ap_vld, "(port)alloc_1_free_target_ap_vld");
    sc_trace(mVcdFile, alloc_1_free_target_ap_ack, "(port)alloc_1_free_target_ap_ack");
    sc_trace(mVcdFile, alloc_1_addr, "(port)alloc_1_addr");
    sc_trace(mVcdFile, alloc_1_addr_ap_vld, "(port)alloc_1_addr_ap_vld");
    sc_trace(mVcdFile, alloc_1_addr_ap_ack, "(port)alloc_1_addr_ap_ack");
    sc_trace(mVcdFile, alloc_1_cmd, "(port)alloc_1_cmd");
    sc_trace(mVcdFile, alloc_1_cmd_ap_vld, "(port)alloc_1_cmd_ap_vld");
    sc_trace(mVcdFile, alloc_1_cmd_ap_ack, "(port)alloc_1_cmd_ap_ack");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, guard_variable_for_H, "guard_variable_for_H");
    sc_trace(mVcdFile, N_2, "N_2");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_ap_return, "grp_HLS_malloc_1_s_fu_521_ap_return");
    sc_trace(mVcdFile, reg_578, "reg_578");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_ap_idle, "grp_HLS_malloc_1_s_fu_521_ap_idle");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_ap_ready, "grp_HLS_malloc_1_s_fu_521_ap_ready");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_ap_done, "grp_HLS_malloc_1_s_fu_521_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_5_cast_fu_629_p3, "tmp_5_cast_fu_629_p3");
    sc_trace(mVcdFile, tmp_5_cast_reg_1349, "tmp_5_cast_reg_1349");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, p_heap0_0_addr_reg_1358, "p_heap0_0_addr_reg_1358");
    sc_trace(mVcdFile, i_4_fu_661_p2, "i_4_fu_661_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_5_fu_705_p2, "i_5_fu_705_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_8_fu_757_p2, "tmp_8_fu_757_p2");
    sc_trace(mVcdFile, tmp_27_fu_779_p1, "tmp_27_fu_779_p1");
    sc_trace(mVcdFile, tmp_27_reg_1411, "tmp_27_reg_1411");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, now_fu_783_p3, "now_fu_783_p3");
    sc_trace(mVcdFile, now_reg_1416, "now_reg_1416");
    sc_trace(mVcdFile, tmp_29_fu_795_p1, "tmp_29_fu_795_p1");
    sc_trace(mVcdFile, tmp_29_reg_1422, "tmp_29_reg_1422");
    sc_trace(mVcdFile, newIndex9_reg_1427, "newIndex9_reg_1427");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_26_fu_819_p1, "tmp_26_fu_819_p1");
    sc_trace(mVcdFile, tmp_26_reg_1442, "tmp_26_reg_1442");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_4_fu_823_p1, "tmp_4_fu_823_p1");
    sc_trace(mVcdFile, tmp_4_reg_1447, "tmp_4_reg_1447");
    sc_trace(mVcdFile, now_dis_fu_826_p3, "now_dis_fu_826_p3");
    sc_trace(mVcdFile, now_dis_reg_1452, "now_dis_reg_1452");
    sc_trace(mVcdFile, tmp_7_fu_833_p2, "tmp_7_fu_833_p2");
    sc_trace(mVcdFile, tmp_7_reg_1458, "tmp_7_reg_1458");
    sc_trace(mVcdFile, i_7_fu_851_p2, "i_7_fu_851_p2");
    sc_trace(mVcdFile, i_7_reg_1467, "i_7_reg_1467");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_32_fu_857_p1, "tmp_32_fu_857_p1");
    sc_trace(mVcdFile, tmp_32_reg_1472, "tmp_32_reg_1472");
    sc_trace(mVcdFile, tmp_10_fu_845_p2, "tmp_10_fu_845_p2");
    sc_trace(mVcdFile, i0_fu_861_p2, "i0_fu_861_p2");
    sc_trace(mVcdFile, i0_reg_1477, "i0_reg_1477");
    sc_trace(mVcdFile, i1_fu_867_p2, "i1_fu_867_p2");
    sc_trace(mVcdFile, i1_reg_1484, "i1_reg_1484");
    sc_trace(mVcdFile, or_cond_fu_926_p2, "or_cond_fu_926_p2");
    sc_trace(mVcdFile, or_cond_reg_1511, "or_cond_reg_1511");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, weight0_fu_932_p2, "weight0_fu_932_p2");
    sc_trace(mVcdFile, weight0_reg_1515, "weight0_reg_1515");
    sc_trace(mVcdFile, weight1_fu_937_p2, "weight1_fu_937_p2");
    sc_trace(mVcdFile, weight1_reg_1521, "weight1_reg_1521");
    sc_trace(mVcdFile, p_heap0_0_addr_8_reg_1527, "p_heap0_0_addr_8_reg_1527");
    sc_trace(mVcdFile, p_heap0_1_addr_7_reg_1532, "p_heap0_1_addr_7_reg_1532");
    sc_trace(mVcdFile, tmp_21_fu_999_p2, "tmp_21_fu_999_p2");
    sc_trace(mVcdFile, tmp_21_reg_1537, "tmp_21_reg_1537");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, in_list_addr_3_reg_1543, "in_list_addr_3_reg_1543");
    sc_trace(mVcdFile, tmp_24_fu_1008_p2, "tmp_24_fu_1008_p2");
    sc_trace(mVcdFile, tmp_24_reg_1549, "tmp_24_reg_1549");
    sc_trace(mVcdFile, in_list_addr_4_reg_1555, "in_list_addr_4_reg_1555");
    sc_trace(mVcdFile, weight0_heap0_load_s_fu_1013_p3, "weight0_heap0_load_s_fu_1013_p3");
    sc_trace(mVcdFile, weight0_heap0_load_s_reg_1561, "weight0_heap0_load_s_reg_1561");
    sc_trace(mVcdFile, weight1_1_fu_1020_p3, "weight1_1_fu_1020_p3");
    sc_trace(mVcdFile, weight1_1_reg_1566, "weight1_1_reg_1566");
    sc_trace(mVcdFile, tmp_34_fu_1027_p1, "tmp_34_fu_1027_p1");
    sc_trace(mVcdFile, tmp_34_reg_1571, "tmp_34_reg_1571");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, brmerge3_fu_1071_p2, "brmerge3_fu_1071_p2");
    sc_trace(mVcdFile, brmerge3_reg_1576, "brmerge3_reg_1576");
    sc_trace(mVcdFile, tmp_37_fu_1077_p1, "tmp_37_fu_1077_p1");
    sc_trace(mVcdFile, tmp_37_reg_1580, "tmp_37_reg_1580");
    sc_trace(mVcdFile, tmp_35_fu_1103_p1, "tmp_35_fu_1103_p1");
    sc_trace(mVcdFile, tmp_35_reg_1590, "tmp_35_reg_1590");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_36_fu_1107_p1, "tmp_36_fu_1107_p1");
    sc_trace(mVcdFile, tmp_36_reg_1595, "tmp_36_reg_1595");
    sc_trace(mVcdFile, p_heap0_0_addr_9_reg_1599, "p_heap0_0_addr_9_reg_1599");
    sc_trace(mVcdFile, p_heap0_1_addr_8_reg_1604, "p_heap0_1_addr_8_reg_1604");
    sc_trace(mVcdFile, newIndex25_reg_1609, "newIndex25_reg_1609");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, offset_new_node1_reg_1614, "offset_new_node1_reg_1614");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_44_fu_1138_p1, "tmp_44_fu_1138_p1");
    sc_trace(mVcdFile, tmp_44_reg_1619, "tmp_44_reg_1619");
    sc_trace(mVcdFile, tmp_45_fu_1142_p1, "tmp_45_fu_1142_p1");
    sc_trace(mVcdFile, tmp_45_reg_1624, "tmp_45_reg_1624");
    sc_trace(mVcdFile, p_heap0_0_addr_15_reg_1628, "p_heap0_0_addr_15_reg_1628");
    sc_trace(mVcdFile, p_heap0_1_addr_14_reg_1633, "p_heap0_1_addr_14_reg_1633");
    sc_trace(mVcdFile, tmp_38_fu_1182_p1, "tmp_38_fu_1182_p1");
    sc_trace(mVcdFile, tmp_38_reg_1638, "tmp_38_reg_1638");
    sc_trace(mVcdFile, tmp_39_fu_1186_p1, "tmp_39_fu_1186_p1");
    sc_trace(mVcdFile, tmp_39_reg_1643, "tmp_39_reg_1643");
    sc_trace(mVcdFile, p_heap0_0_addr_11_reg_1647, "p_heap0_0_addr_11_reg_1647");
    sc_trace(mVcdFile, p_heap0_1_addr_10_reg_1652, "p_heap0_1_addr_10_reg_1652");
    sc_trace(mVcdFile, tmp_41_fu_1227_p1, "tmp_41_fu_1227_p1");
    sc_trace(mVcdFile, tmp_41_reg_1660, "tmp_41_reg_1660");
    sc_trace(mVcdFile, tmp_42_fu_1231_p1, "tmp_42_fu_1231_p1");
    sc_trace(mVcdFile, tmp_42_reg_1665, "tmp_42_reg_1665");
    sc_trace(mVcdFile, p_heap0_0_addr_13_reg_1669, "p_heap0_0_addr_13_reg_1669");
    sc_trace(mVcdFile, p_heap0_1_addr_12_reg_1674, "p_heap0_1_addr_12_reg_1674");
    sc_trace(mVcdFile, offset_next_fu_1272_p3, "offset_next_fu_1272_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_ap_idle, "grp_HLS_free_1_s_fu_538_ap_idle");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_ap_ready, "grp_HLS_free_1_s_fu_538_ap_ready");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_ap_done, "grp_HLS_free_1_s_fu_538_ap_done");
    sc_trace(mVcdFile, i_6_fu_1288_p2, "i_6_fu_1288_p2");
    sc_trace(mVcdFile, i_6_reg_1690, "i_6_reg_1690");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_1_fu_1283_p2, "tmp_1_fu_1283_p2");
    sc_trace(mVcdFile, p_heap0_0_address0, "p_heap0_0_address0");
    sc_trace(mVcdFile, p_heap0_0_ce0, "p_heap0_0_ce0");
    sc_trace(mVcdFile, p_heap0_0_we0, "p_heap0_0_we0");
    sc_trace(mVcdFile, p_heap0_0_d0, "p_heap0_0_d0");
    sc_trace(mVcdFile, p_heap0_0_q0, "p_heap0_0_q0");
    sc_trace(mVcdFile, p_heap0_1_address0, "p_heap0_1_address0");
    sc_trace(mVcdFile, p_heap0_1_ce0, "p_heap0_1_ce0");
    sc_trace(mVcdFile, p_heap0_1_we0, "p_heap0_1_we0");
    sc_trace(mVcdFile, p_heap0_1_d0, "p_heap0_1_d0");
    sc_trace(mVcdFile, p_heap0_1_q0, "p_heap0_1_q0");
    sc_trace(mVcdFile, in_list_address0, "in_list_address0");
    sc_trace(mVcdFile, in_list_ce0, "in_list_ce0");
    sc_trace(mVcdFile, in_list_we0, "in_list_we0");
    sc_trace(mVcdFile, in_list_d0, "in_list_d0");
    sc_trace(mVcdFile, in_list_q0, "in_list_q0");
    sc_trace(mVcdFile, in_list_address1, "in_list_address1");
    sc_trace(mVcdFile, in_list_ce1, "in_list_ce1");
    sc_trace(mVcdFile, in_list_we1, "in_list_we1");
    sc_trace(mVcdFile, in_list_q1, "in_list_q1");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_ap_start, "grp_HLS_malloc_1_s_fu_521_ap_start");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_size, "grp_HLS_malloc_1_s_fu_521_size");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_allocator_size, "grp_HLS_malloc_1_s_fu_521_allocator_size");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld, "grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_allocator_free_targe, "grp_HLS_malloc_1_s_fu_521_allocator_free_targe");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld, "grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_allocator_addr_ap_ack, "grp_HLS_malloc_1_s_fu_521_allocator_addr_ap_ack");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_allocator_cmd, "grp_HLS_malloc_1_s_fu_521_allocator_cmd");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld, "grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_ap_start, "grp_HLS_free_1_s_fu_538_ap_start");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_allocator_size, "grp_HLS_free_1_s_fu_538_allocator_size");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_allocator_size_ap_vld, "grp_HLS_free_1_s_fu_538_allocator_size_ap_vld");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_allocator_free_targe, "grp_HLS_free_1_s_fu_538_allocator_free_targe");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld, "grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_allocator_cmd, "grp_HLS_free_1_s_fu_538_allocator_cmd");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld, "grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld");
    sc_trace(mVcdFile, i_reg_466, "i_reg_466");
    sc_trace(mVcdFile, tmp_6_fu_656_p2, "tmp_6_fu_656_p2");
    sc_trace(mVcdFile, i_1_reg_477, "i_1_reg_477");
    sc_trace(mVcdFile, tmp_9_fu_700_p2, "tmp_9_fu_700_p2");
    sc_trace(mVcdFile, offset_head_reg_488, "offset_head_reg_488");
    sc_trace(mVcdFile, i_2_reg_498, "i_2_reg_498");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_3_reg_509, "i_3_reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_521_ap_start_reg, "grp_HLS_malloc_1_s_fu_521_ap_start_reg");
    sc_trace(mVcdFile, brmerge4_fu_1086_p2, "brmerge4_fu_1086_p2");
    sc_trace(mVcdFile, brmerge5_fu_1097_p2, "brmerge5_fu_1097_p2");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_538_ap_start_reg, "grp_HLS_free_1_s_fu_538_ap_start_reg");
    sc_trace(mVcdFile, newIndex2_fu_647_p1, "newIndex2_fu_647_p1");
    sc_trace(mVcdFile, newIndex3_cast_fu_690_p1, "newIndex3_cast_fu_690_p1");
    sc_trace(mVcdFile, tmp_s_fu_711_p1, "tmp_s_fu_711_p1");
    sc_trace(mVcdFile, newIndex5_fu_724_p1, "newIndex5_fu_724_p1");
    sc_trace(mVcdFile, newIndex6_cast_fu_746_p1, "newIndex6_cast_fu_746_p1");
    sc_trace(mVcdFile, newIndex8_fu_773_p1, "newIndex8_fu_773_p1");
    sc_trace(mVcdFile, newIndex9_cast_fu_814_p1, "newIndex9_cast_fu_814_p1");
    sc_trace(mVcdFile, tmp_15_fu_878_p1, "tmp_15_fu_878_p1");
    sc_trace(mVcdFile, tmp_17_fu_888_p1, "tmp_17_fu_888_p1");
    sc_trace(mVcdFile, newIndex10_cast_fu_908_p1, "newIndex10_cast_fu_908_p1");
    sc_trace(mVcdFile, newIndex11_cast_fu_964_p1, "newIndex11_cast_fu_964_p1");
    sc_trace(mVcdFile, newIndex12_cast_fu_990_p1, "newIndex12_cast_fu_990_p1");
    sc_trace(mVcdFile, tmp_20_fu_995_p1, "tmp_20_fu_995_p1");
    sc_trace(mVcdFile, tmp_23_fu_1004_p1, "tmp_23_fu_1004_p1");
    sc_trace(mVcdFile, newIndex14_fu_1111_p1, "newIndex14_fu_1111_p1");
    sc_trace(mVcdFile, newIndex15_cast_fu_1117_p1, "newIndex15_cast_fu_1117_p1");
    sc_trace(mVcdFile, newIndex24_fu_1146_p1, "newIndex24_fu_1146_p1");
    sc_trace(mVcdFile, newIndex25_cast_fu_1152_p1, "newIndex25_cast_fu_1152_p1");
    sc_trace(mVcdFile, newIndex27_cast_fu_1172_p1, "newIndex27_cast_fu_1172_p1");
    sc_trace(mVcdFile, newIndex17_fu_1190_p1, "newIndex17_fu_1190_p1");
    sc_trace(mVcdFile, newIndex18_cast_fu_1200_p1, "newIndex18_cast_fu_1200_p1");
    sc_trace(mVcdFile, newIndex26_cast_fu_1221_p1, "newIndex26_cast_fu_1221_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, newIndex21_fu_1235_p1, "newIndex21_fu_1235_p1");
    sc_trace(mVcdFile, newIndex22_cast_fu_1245_p1, "newIndex22_cast_fu_1245_p1");
    sc_trace(mVcdFile, newIndex19_cast_fu_1266_p1, "newIndex19_cast_fu_1266_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, newIndex_cast_fu_1313_p1, "newIndex_cast_fu_1313_p1");
    sc_trace(mVcdFile, tmp_11_fu_1319_p1, "tmp_11_fu_1319_p1");
    sc_trace(mVcdFile, guard_variable_for_H_1_load_fu_587_p1, "guard_variable_for_H_1_load_fu_587_p1");
    sc_trace(mVcdFile, offset_tail_fu_90, "offset_tail_fu_90");
    sc_trace(mVcdFile, tmp_5_fu_671_p1, "tmp_5_fu_671_p1");
    sc_trace(mVcdFile, tmp_13_fu_720_p1, "tmp_13_fu_720_p1");
    sc_trace(mVcdFile, tmp_40_fu_1196_p1, "tmp_40_fu_1196_p1");
    sc_trace(mVcdFile, tmp_43_fu_1241_p1, "tmp_43_fu_1241_p1");
    sc_trace(mVcdFile, grp_fu_563_p2, "grp_fu_563_p2");
    sc_trace(mVcdFile, tmp_1_i_fu_591_p0, "tmp_1_i_fu_591_p0");
    sc_trace(mVcdFile, tmp_1_i_fu_591_p2, "tmp_1_i_fu_591_p2");
    sc_trace(mVcdFile, tmp_fu_619_p4, "tmp_fu_619_p4");
    sc_trace(mVcdFile, newIndex1_fu_637_p4, "newIndex1_fu_637_p4");
    sc_trace(mVcdFile, i_cast_fu_652_p1, "i_cast_fu_652_p1");
    sc_trace(mVcdFile, tmp_6_fu_656_p1, "tmp_6_fu_656_p1");
    sc_trace(mVcdFile, tmp_3_fu_667_p1, "tmp_3_fu_667_p1");
    sc_trace(mVcdFile, local_dis_0_sum2_fu_675_p2, "local_dis_0_sum2_fu_675_p2");
    sc_trace(mVcdFile, newIndex3_fu_680_p4, "newIndex3_fu_680_p4");
    sc_trace(mVcdFile, i_1_cast_fu_696_p1, "i_1_cast_fu_696_p1");
    sc_trace(mVcdFile, tmp_9_fu_700_p1, "tmp_9_fu_700_p1");
    sc_trace(mVcdFile, grp_fu_550_p4, "grp_fu_550_p4");
    sc_trace(mVcdFile, tmp_12_fu_716_p1, "tmp_12_fu_716_p1");
    sc_trace(mVcdFile, p_sum_fu_730_p2, "p_sum_fu_730_p2");
    sc_trace(mVcdFile, newIndex6_fu_736_p4, "newIndex6_fu_736_p4");
    sc_trace(mVcdFile, newIndex7_fu_763_p4, "newIndex7_fu_763_p4");
    sc_trace(mVcdFile, tmp_28_fu_791_p1, "tmp_28_fu_791_p1");
    sc_trace(mVcdFile, local_dis_0_sum1_fu_799_p2, "local_dis_0_sum1_fu_799_p2");
    sc_trace(mVcdFile, tmp_7_fu_833_p0, "tmp_7_fu_833_p0");
    sc_trace(mVcdFile, extLd_fu_841_p1, "extLd_fu_841_p1");
    sc_trace(mVcdFile, tmp_14_fu_873_p2, "tmp_14_fu_873_p2");
    sc_trace(mVcdFile, tmp_16_fu_883_p2, "tmp_16_fu_883_p2");
    sc_trace(mVcdFile, p_sum2_fu_893_p2, "p_sum2_fu_893_p2");
    sc_trace(mVcdFile, newIndex10_fu_898_p4, "newIndex10_fu_898_p4");
    sc_trace(mVcdFile, tmp_18_fu_914_p2, "tmp_18_fu_914_p2");
    sc_trace(mVcdFile, tmp_19_fu_920_p2, "tmp_19_fu_920_p2");
    sc_trace(mVcdFile, tmp_23_cast_fu_942_p3, "tmp_23_cast_fu_942_p3");
    sc_trace(mVcdFile, local_dis_0_sum4_fu_949_p2, "local_dis_0_sum4_fu_949_p2");
    sc_trace(mVcdFile, newIndex11_fu_954_p4, "newIndex11_fu_954_p4");
    sc_trace(mVcdFile, tmp_26_cast_fu_969_p2, "tmp_26_cast_fu_969_p2");
    sc_trace(mVcdFile, local_dis_0_sum5_fu_975_p2, "local_dis_0_sum5_fu_975_p2");
    sc_trace(mVcdFile, newIndex12_fu_980_p4, "newIndex12_fu_980_p4");
    sc_trace(mVcdFile, tmp_22_fu_1031_p2, "tmp_22_fu_1031_p2");
    sc_trace(mVcdFile, tmp_25_fu_1037_p2, "tmp_25_fu_1037_p2");
    sc_trace(mVcdFile, tmp7_fu_1048_p2, "tmp7_fu_1048_p2");
    sc_trace(mVcdFile, tmp6_fu_1043_p2, "tmp6_fu_1043_p2");
    sc_trace(mVcdFile, brmerge_demorgan_fu_1053_p2, "brmerge_demorgan_fu_1053_p2");
    sc_trace(mVcdFile, brmerge_demorgan_not_fu_1059_p2, "brmerge_demorgan_not_fu_1059_p2");
    sc_trace(mVcdFile, tmp8_fu_1065_p2, "tmp8_fu_1065_p2");
    sc_trace(mVcdFile, tmp_24_not_fu_1081_p2, "tmp_24_not_fu_1081_p2");
    sc_trace(mVcdFile, tmp_27_not_fu_1092_p2, "tmp_27_not_fu_1092_p2");
    sc_trace(mVcdFile, grp_fu_568_p4, "grp_fu_568_p4");
    sc_trace(mVcdFile, p_sum3_fu_1123_p2, "p_sum3_fu_1123_p2");
    sc_trace(mVcdFile, p_sum4_fu_1157_p2, "p_sum4_fu_1157_p2");
    sc_trace(mVcdFile, newIndex27_fu_1162_p4, "newIndex27_fu_1162_p4");
    sc_trace(mVcdFile, p_sum6_fu_1206_p2, "p_sum6_fu_1206_p2");
    sc_trace(mVcdFile, newIndex26_fu_1211_p4, "newIndex26_fu_1211_p4");
    sc_trace(mVcdFile, p_sum8_fu_1251_p2, "p_sum8_fu_1251_p2");
    sc_trace(mVcdFile, newIndex19_fu_1256_p4, "newIndex19_fu_1256_p4");
    sc_trace(mVcdFile, i_3_cast_fu_1279_p1, "i_3_cast_fu_1279_p1");
    sc_trace(mVcdFile, tmp_1_fu_1283_p1, "tmp_1_fu_1283_p1");
    sc_trace(mVcdFile, tmp_30_fu_1294_p1, "tmp_30_fu_1294_p1");
    sc_trace(mVcdFile, local_dis_0_sum_fu_1298_p2, "local_dis_0_sum_fu_1298_p2");
    sc_trace(mVcdFile, newIndex_fu_1303_p4, "newIndex_fu_1303_p4");
    sc_trace(mVcdFile, tmp_31_fu_1324_p1, "tmp_31_fu_1324_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("HLS_SPFA.hdltvin.dat");
    mHdltvoutHandle.open("HLS_SPFA.hdltvout.dat");
}

HLS_SPFA::~HLS_SPFA() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete p_heap0_0_U;
    delete p_heap0_1_U;
    delete in_list_U;
    delete grp_HLS_malloc_1_s_fu_521;
    delete grp_HLS_free_1_s_fu_538;
}

void HLS_SPFA::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv1_1;
}

void HLS_SPFA::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_HLS_free_1_s_fu_538_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(tmp_10_fu_845_p2.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
            grp_HLS_free_1_s_fu_538_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_free_1_s_fu_538_ap_ready.read())) {
            grp_HLS_free_1_s_fu_538_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_HLS_malloc_1_s_fu_521_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
             (esl_seteq<1,1,1>(brmerge3_fu_1071_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
             (esl_seteq<1,1,1>(tmp_9_fu_700_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
             (esl_seteq<1,1,1>(brmerge4_fu_1086_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
              esl_seteq<1,1,1>(brmerge3_fu_1071_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(brmerge5_fu_1097_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
              esl_seteq<1,1,1>(brmerge4_fu_1086_p2.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(brmerge3_fu_1071_p2.read(), ap_const_lv1_1)))) {
            grp_HLS_malloc_1_s_fu_521_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_ap_ready.read())) {
            grp_HLS_malloc_1_s_fu_521_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_9_fu_700_p2.read(), ap_const_lv1_1))) {
        i_1_reg_477 = i_5_fu_705_p2.read();
    } else if ((esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_1_reg_477 = ap_const_lv31_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i_2_reg_498 = i_7_reg_1467.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_2_reg_498 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_8_fu_757_p2.read(), ap_const_lv1_1))) {
        i_3_reg_509 = ap_const_lv31_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        i_3_reg_509 = i_6_reg_1690.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_1))) {
        i_reg_466 = i_4_fu_661_p2.read();
    } else if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_reg_466 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(grp_HLS_free_1_s_fu_538_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        offset_head_reg_488 = offset_next_fu_1272_p3.read();
    } else if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        offset_head_reg_488 = grp_HLS_malloc_1_s_fu_521_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        offset_tail_fu_90 = reg_578.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()))) {
        offset_tail_fu_90 = offset_new_node1_reg_1614.read();
    } else if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        offset_tail_fu_90 = grp_HLS_malloc_1_s_fu_521_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_H_1_load_fu_587_p1.read()))) {
        N_2 = tmp_1_i_fu_591_p2.read().range(31, 1);
        guard_variable_for_H = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        brmerge3_reg_1576 = brmerge3_fu_1071_p2.read();
        tmp_34_reg_1571 = tmp_34_fu_1027_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(tmp_10_fu_845_p2.read(), ap_const_lv1_1))) {
        i0_reg_1477 = i0_fu_861_p2.read();
        i1_reg_1484 = i1_fu_867_p2.read();
        tmp_32_reg_1472 = tmp_32_fu_857_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        i_6_reg_1690 = i_6_fu_1288_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_7_reg_1467 = i_7_fu_851_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        in_list_addr_3_reg_1543 =  (sc_lv<8>) (tmp_20_fu_995_p1.read());
        in_list_addr_4_reg_1555 =  (sc_lv<8>) (tmp_23_fu_1004_p1.read());
        tmp_21_reg_1537 = tmp_21_fu_999_p2.read();
        tmp_24_reg_1549 = tmp_24_fu_1008_p2.read();
        weight0_heap0_load_s_reg_1561 = weight0_heap0_load_s_fu_1013_p3.read();
        weight1_1_reg_1566 = weight1_1_fu_1020_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        newIndex25_reg_1609 = p_sum3_fu_1123_p2.read().range(12, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        newIndex9_reg_1427 = local_dis_0_sum1_fu_799_p2.read().range(12, 1);
        now_reg_1416 = now_fu_783_p3.read();
        tmp_27_reg_1411 = tmp_27_fu_779_p1.read();
        tmp_29_reg_1422 = tmp_29_fu_795_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        now_dis_reg_1452 = now_dis_fu_826_p3.read();
        tmp_26_reg_1442 = tmp_26_fu_819_p1.read();
        tmp_4_reg_1447 = tmp_4_fu_823_p1.read();
        tmp_7_reg_1458 = tmp_7_fu_833_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        offset_new_node1_reg_1614 = grp_HLS_malloc_1_s_fu_521_ap_return.read();
        p_heap0_0_addr_15_reg_1628 =  (sc_lv<11>) (newIndex24_fu_1146_p1.read());
        p_heap0_1_addr_14_reg_1633 =  (sc_lv<11>) (newIndex24_fu_1146_p1.read());
        tmp_44_reg_1619 = tmp_44_fu_1138_p1.read();
        tmp_45_reg_1624 = tmp_45_fu_1142_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        or_cond_reg_1511 = or_cond_fu_926_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        p_heap0_0_addr_11_reg_1647 =  (sc_lv<11>) (newIndex17_fu_1190_p1.read());
        p_heap0_1_addr_10_reg_1652 =  (sc_lv<11>) (newIndex17_fu_1190_p1.read());
        tmp_38_reg_1638 = tmp_38_fu_1182_p1.read();
        tmp_39_reg_1643 = tmp_39_fu_1186_p1.read();
    }
    if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        p_heap0_0_addr_13_reg_1669 =  (sc_lv<11>) (newIndex21_fu_1235_p1.read());
        p_heap0_1_addr_12_reg_1674 =  (sc_lv<11>) (newIndex21_fu_1235_p1.read());
        tmp_41_reg_1660 = tmp_41_fu_1227_p1.read();
        tmp_42_reg_1665 = tmp_42_fu_1231_p1.read();
    }
    if ((esl_seteq<1,1,1>(or_cond_fu_926_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        p_heap0_0_addr_8_reg_1527 =  (sc_lv<11>) (newIndex11_cast_fu_964_p1.read());
        p_heap0_1_addr_7_reg_1532 =  (sc_lv<11>) (newIndex12_cast_fu_990_p1.read());
        weight0_reg_1515 = weight0_fu_932_p2.read();
        weight1_reg_1521 = weight1_fu_937_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        p_heap0_0_addr_9_reg_1599 =  (sc_lv<11>) (newIndex14_fu_1111_p1.read());
        p_heap0_1_addr_8_reg_1604 =  (sc_lv<11>) (newIndex14_fu_1111_p1.read());
        tmp_35_reg_1590 = tmp_35_fu_1103_p1.read();
        tmp_36_reg_1595 = tmp_36_fu_1107_p1.read();
    }
    if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        p_heap0_0_addr_reg_1358 =  (sc_lv<11>) (newIndex2_fu_647_p1.read());
        tmp_5_cast_reg_1349 = tmp_5_cast_fu_629_p3.read();
    }
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())))) {
        reg_578 = grp_HLS_malloc_1_s_fu_521_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(brmerge3_fu_1071_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        tmp_37_reg_1580 = tmp_37_fu_1077_p1.read();
    }
}

void HLS_SPFA::thread_alloc_1_addr_ap_ack() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        alloc_1_addr_ap_ack = grp_HLS_malloc_1_s_fu_521_allocator_addr_ap_ack.read();
    } else {
        alloc_1_addr_ap_ack = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_alloc_1_cmd() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld.read()))) {
        alloc_1_cmd = grp_HLS_free_1_s_fu_538_allocator_cmd.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld.read())))) {
        alloc_1_cmd = grp_HLS_malloc_1_s_fu_521_allocator_cmd.read();
    } else {
        alloc_1_cmd = "XXXXXXXX";
    }
}

void HLS_SPFA::thread_alloc_1_cmd_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        alloc_1_cmd_ap_vld = grp_HLS_free_1_s_fu_538_allocator_cmd_ap_vld.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        alloc_1_cmd_ap_vld = grp_HLS_malloc_1_s_fu_521_allocator_cmd_ap_vld.read();
    } else {
        alloc_1_cmd_ap_vld = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_alloc_1_free_target() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld.read()))) {
        alloc_1_free_target = grp_HLS_free_1_s_fu_538_allocator_free_targe.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld.read())))) {
        alloc_1_free_target = grp_HLS_malloc_1_s_fu_521_allocator_free_targe.read();
    } else {
        alloc_1_free_target =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_SPFA::thread_alloc_1_free_target_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        alloc_1_free_target_ap_vld = grp_HLS_free_1_s_fu_538_allocator_free_targe_ap_vld.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        alloc_1_free_target_ap_vld = grp_HLS_malloc_1_s_fu_521_allocator_free_targe_ap_vld.read();
    } else {
        alloc_1_free_target_ap_vld = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_alloc_1_size() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_free_1_s_fu_538_allocator_size_ap_vld.read()))) {
        alloc_1_size = grp_HLS_free_1_s_fu_538_allocator_size.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld.read())))) {
        alloc_1_size = grp_HLS_malloc_1_s_fu_521_allocator_size.read();
    } else {
        alloc_1_size =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_SPFA::thread_alloc_1_size_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        alloc_1_size_ap_vld = grp_HLS_free_1_s_fu_538_allocator_size_ap_vld.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        alloc_1_size_ap_vld = grp_HLS_malloc_1_s_fu_521_allocator_size_ap_vld.read();
    } else {
        alloc_1_size_ap_vld = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void HLS_SPFA::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void HLS_SPFA::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void HLS_SPFA::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void HLS_SPFA::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void HLS_SPFA::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void HLS_SPFA::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void HLS_SPFA::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void HLS_SPFA::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void HLS_SPFA::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void HLS_SPFA::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void HLS_SPFA::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void HLS_SPFA::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void HLS_SPFA::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void HLS_SPFA::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void HLS_SPFA::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void HLS_SPFA::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void HLS_SPFA::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void HLS_SPFA::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void HLS_SPFA::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void HLS_SPFA::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void HLS_SPFA::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void HLS_SPFA::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void HLS_SPFA::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void HLS_SPFA::thread_ap_done() {
    if ((esl_seteq<1,1,1>(tmp_1_fu_1283_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(tmp_1_fu_1283_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_brmerge3_fu_1071_p2() {
    brmerge3_fu_1071_p2 = (tmp8_fu_1065_p2.read() | in_list_q0.read());
}

void HLS_SPFA::thread_brmerge4_fu_1086_p2() {
    brmerge4_fu_1086_p2 = (in_list_q0.read() | tmp_24_not_fu_1081_p2.read());
}

void HLS_SPFA::thread_brmerge5_fu_1097_p2() {
    brmerge5_fu_1097_p2 = (in_list_q1.read() | tmp_27_not_fu_1092_p2.read());
}

void HLS_SPFA::thread_brmerge_demorgan_fu_1053_p2() {
    brmerge_demorgan_fu_1053_p2 = (tmp7_fu_1048_p2.read() & tmp6_fu_1043_p2.read());
}

void HLS_SPFA::thread_brmerge_demorgan_not_fu_1059_p2() {
    brmerge_demorgan_not_fu_1059_p2 = (brmerge_demorgan_fu_1053_p2.read() ^ ap_const_lv1_1);
}

void HLS_SPFA::thread_dis_output_address0() {
    dis_output_address0 =  (sc_lv<8>) (tmp_11_fu_1319_p1.read());
}

void HLS_SPFA::thread_dis_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        dis_output_ce0 = ap_const_logic_1;
    } else {
        dis_output_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_dis_output_d0() {
    dis_output_d0 = (!tmp_31_fu_1324_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_31_fu_1324_p1.read()[0].to_bool())? p_heap0_1_q0.read(): p_heap0_0_q0.read());
}

void HLS_SPFA::thread_dis_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        dis_output_we0 = ap_const_logic_1;
    } else {
        dis_output_we0 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_extLd_fu_841_p1() {
    extLd_fu_841_p1 = esl_sext<32,31>(N_2.read());
}

void HLS_SPFA::thread_grp_HLS_free_1_s_fu_538_ap_start() {
    grp_HLS_free_1_s_fu_538_ap_start = grp_HLS_free_1_s_fu_538_ap_start_reg.read();
}

void HLS_SPFA::thread_grp_HLS_malloc_1_s_fu_521_ap_start() {
    grp_HLS_malloc_1_s_fu_521_ap_start = grp_HLS_malloc_1_s_fu_521_ap_start_reg.read();
}

void HLS_SPFA::thread_grp_HLS_malloc_1_s_fu_521_size() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        grp_HLS_malloc_1_s_fu_521_size = ap_const_lv32_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_HLS_malloc_1_s_fu_521_size = n.read();
    } else {
        grp_HLS_malloc_1_s_fu_521_size =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_SPFA::thread_grp_fu_550_p4() {
    grp_fu_550_p4 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(31, 1);
}

void HLS_SPFA::thread_grp_fu_563_p2() {
    grp_fu_563_p2 = (!ap_const_lv13_1.is_01() || !tmp_34_reg_1571.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_1) + sc_biguint<13>(tmp_34_reg_1571.read()));
}

void HLS_SPFA::thread_grp_fu_568_p4() {
    grp_fu_568_p4 = grp_fu_563_p2.read().range(12, 1);
}

void HLS_SPFA::thread_guard_variable_for_H_1_load_fu_587_p1() {
    guard_variable_for_H_1_load_fu_587_p1 = guard_variable_for_H.read();
}

void HLS_SPFA::thread_i0_fu_861_p2() {
    i0_fu_861_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): i_2_reg_498.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void HLS_SPFA::thread_i1_fu_867_p2() {
    i1_fu_867_p2 = (i0_fu_861_p2.read() | ap_const_lv32_1);
}

void HLS_SPFA::thread_i_1_cast_fu_696_p1() {
    i_1_cast_fu_696_p1 = esl_zext<32,31>(i_1_reg_477.read());
}

void HLS_SPFA::thread_i_3_cast_fu_1279_p1() {
    i_3_cast_fu_1279_p1 = esl_zext<32,31>(i_3_reg_509.read());
}

void HLS_SPFA::thread_i_4_fu_661_p2() {
    i_4_fu_661_p2 = (!i_reg_466.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_reg_466.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void HLS_SPFA::thread_i_5_fu_705_p2() {
    i_5_fu_705_p2 = (!i_1_reg_477.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_1_reg_477.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void HLS_SPFA::thread_i_6_fu_1288_p2() {
    i_6_fu_1288_p2 = (!i_3_reg_509.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_3_reg_509.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void HLS_SPFA::thread_i_7_fu_851_p2() {
    i_7_fu_851_p2 = (!i_2_reg_498.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_2_reg_498.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void HLS_SPFA::thread_i_cast_fu_652_p1() {
    i_cast_fu_652_p1 = esl_zext<32,31>(i_reg_466.read());
}

void HLS_SPFA::thread_in_list_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        in_list_address0 = in_list_addr_4_reg_1555.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        in_list_address0 =  (sc_lv<8>) (tmp_20_fu_995_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        in_list_address0 =  (sc_lv<8>) (tmp_4_reg_1447.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in_list_address0 =  (sc_lv<8>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in_list_address0 =  (sc_lv<8>) (tmp_s_fu_711_p1.read());
    } else {
        in_list_address0 = "XXXXXXXX";
    }
}

void HLS_SPFA::thread_in_list_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        in_list_address1 = in_list_addr_4_reg_1555.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        in_list_address1 = in_list_addr_3_reg_1543.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        in_list_address1 =  (sc_lv<8>) (tmp_23_fu_1004_p1.read());
    } else {
        in_list_address1 = "XXXXXXXX";
    }
}

void HLS_SPFA::thread_in_list_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        in_list_ce0 = ap_const_logic_1;
    } else {
        in_list_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_in_list_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        in_list_ce1 = ap_const_logic_1;
    } else {
        in_list_ce1 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_in_list_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        in_list_d0 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        in_list_d0 = ap_const_lv1_0;
    } else {
        in_list_d0 =  (sc_lv<1>) ("X");
    }
}

void HLS_SPFA::thread_in_list_we0() {
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_9_fu_700_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(tmp_10_fu_845_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read())))) {
        in_list_we0 = ap_const_logic_1;
    } else {
        in_list_we0 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_in_list_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        in_list_we1 = ap_const_logic_1;
    } else {
        in_list_we1 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_local_dis_0_sum1_fu_799_p2() {
    local_dis_0_sum1_fu_799_p2 = (!tmp_5_cast_reg_1349.read().is_01() || !tmp_28_fu_791_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_5_cast_reg_1349.read()) + sc_biguint<13>(tmp_28_fu_791_p1.read()));
}

void HLS_SPFA::thread_local_dis_0_sum2_fu_675_p2() {
    local_dis_0_sum2_fu_675_p2 = (!tmp_3_fu_667_p1.read().is_01() || !tmp_5_cast_reg_1349.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_3_fu_667_p1.read()) + sc_biguint<13>(tmp_5_cast_reg_1349.read()));
}

void HLS_SPFA::thread_local_dis_0_sum4_fu_949_p2() {
    local_dis_0_sum4_fu_949_p2 = (!tmp_5_cast_reg_1349.read().is_01() || !tmp_23_cast_fu_942_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_5_cast_reg_1349.read()) + sc_biguint<13>(tmp_23_cast_fu_942_p3.read()));
}

void HLS_SPFA::thread_local_dis_0_sum5_fu_975_p2() {
    local_dis_0_sum5_fu_975_p2 = (!tmp_5_cast_reg_1349.read().is_01() || !tmp_26_cast_fu_969_p2.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_5_cast_reg_1349.read()) + sc_biguint<13>(tmp_26_cast_fu_969_p2.read()));
}

void HLS_SPFA::thread_local_dis_0_sum_fu_1298_p2() {
    local_dis_0_sum_fu_1298_p2 = (!tmp_30_fu_1294_p1.read().is_01() || !tmp_5_cast_reg_1349.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_30_fu_1294_p1.read()) + sc_biguint<13>(tmp_5_cast_reg_1349.read()));
}

void HLS_SPFA::thread_map_r_address0() {
    map_r_address0 =  (sc_lv<15>) (tmp_15_fu_878_p1.read());
}

void HLS_SPFA::thread_map_r_address1() {
    map_r_address1 =  (sc_lv<15>) (tmp_17_fu_888_p1.read());
}

void HLS_SPFA::thread_map_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        map_r_ce0 = ap_const_logic_1;
    } else {
        map_r_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_map_r_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        map_r_ce1 = ap_const_logic_1;
    } else {
        map_r_ce1 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_newIndex10_cast_fu_908_p1() {
    newIndex10_cast_fu_908_p1 = esl_zext<64,12>(newIndex10_fu_898_p4.read());
}

void HLS_SPFA::thread_newIndex10_fu_898_p4() {
    newIndex10_fu_898_p4 = p_sum2_fu_893_p2.read().range(12, 1);
}

void HLS_SPFA::thread_newIndex11_cast_fu_964_p1() {
    newIndex11_cast_fu_964_p1 = esl_zext<64,12>(newIndex11_fu_954_p4.read());
}

void HLS_SPFA::thread_newIndex11_fu_954_p4() {
    newIndex11_fu_954_p4 = local_dis_0_sum4_fu_949_p2.read().range(12, 1);
}

void HLS_SPFA::thread_newIndex12_cast_fu_990_p1() {
    newIndex12_cast_fu_990_p1 = esl_zext<64,12>(newIndex12_fu_980_p4.read());
}

void HLS_SPFA::thread_newIndex12_fu_980_p4() {
    newIndex12_fu_980_p4 = local_dis_0_sum5_fu_975_p2.read().range(12, 1);
}

void HLS_SPFA::thread_newIndex14_fu_1111_p1() {
    newIndex14_fu_1111_p1 = esl_zext<64,31>(grp_fu_550_p4.read());
}

void HLS_SPFA::thread_newIndex15_cast_fu_1117_p1() {
    newIndex15_cast_fu_1117_p1 = esl_zext<64,12>(grp_fu_568_p4.read());
}

void HLS_SPFA::thread_newIndex17_fu_1190_p1() {
    newIndex17_fu_1190_p1 = esl_zext<64,31>(grp_fu_550_p4.read());
}

void HLS_SPFA::thread_newIndex18_cast_fu_1200_p1() {
    newIndex18_cast_fu_1200_p1 = esl_zext<64,12>(grp_fu_568_p4.read());
}

void HLS_SPFA::thread_newIndex19_cast_fu_1266_p1() {
    newIndex19_cast_fu_1266_p1 = esl_zext<64,12>(newIndex19_fu_1256_p4.read());
}

void HLS_SPFA::thread_newIndex19_fu_1256_p4() {
    newIndex19_fu_1256_p4 = p_sum8_fu_1251_p2.read().range(12, 1);
}

void HLS_SPFA::thread_newIndex1_fu_637_p4() {
    newIndex1_fu_637_p4 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(19, 1);
}

void HLS_SPFA::thread_newIndex21_fu_1235_p1() {
    newIndex21_fu_1235_p1 = esl_zext<64,31>(grp_fu_550_p4.read());
}

void HLS_SPFA::thread_newIndex22_cast_fu_1245_p1() {
    newIndex22_cast_fu_1245_p1 = esl_zext<64,12>(grp_fu_568_p4.read());
}

void HLS_SPFA::thread_newIndex24_fu_1146_p1() {
    newIndex24_fu_1146_p1 = esl_zext<64,31>(grp_fu_550_p4.read());
}

void HLS_SPFA::thread_newIndex25_cast_fu_1152_p1() {
    newIndex25_cast_fu_1152_p1 = esl_zext<64,12>(newIndex25_reg_1609.read());
}

void HLS_SPFA::thread_newIndex26_cast_fu_1221_p1() {
    newIndex26_cast_fu_1221_p1 = esl_zext<64,12>(newIndex26_fu_1211_p4.read());
}

void HLS_SPFA::thread_newIndex26_fu_1211_p4() {
    newIndex26_fu_1211_p4 = p_sum6_fu_1206_p2.read().range(12, 1);
}

void HLS_SPFA::thread_newIndex27_cast_fu_1172_p1() {
    newIndex27_cast_fu_1172_p1 = esl_zext<64,12>(newIndex27_fu_1162_p4.read());
}

void HLS_SPFA::thread_newIndex27_fu_1162_p4() {
    newIndex27_fu_1162_p4 = p_sum4_fu_1157_p2.read().range(12, 1);
}

void HLS_SPFA::thread_newIndex2_fu_647_p1() {
    newIndex2_fu_647_p1 = esl_zext<64,19>(newIndex1_fu_637_p4.read());
}

void HLS_SPFA::thread_newIndex3_cast_fu_690_p1() {
    newIndex3_cast_fu_690_p1 = esl_zext<64,12>(newIndex3_fu_680_p4.read());
}

void HLS_SPFA::thread_newIndex3_fu_680_p4() {
    newIndex3_fu_680_p4 = local_dis_0_sum2_fu_675_p2.read().range(12, 1);
}

void HLS_SPFA::thread_newIndex5_fu_724_p1() {
    newIndex5_fu_724_p1 = esl_zext<64,31>(grp_fu_550_p4.read());
}

void HLS_SPFA::thread_newIndex6_cast_fu_746_p1() {
    newIndex6_cast_fu_746_p1 = esl_zext<64,12>(newIndex6_fu_736_p4.read());
}

void HLS_SPFA::thread_newIndex6_fu_736_p4() {
    newIndex6_fu_736_p4 = p_sum_fu_730_p2.read().range(12, 1);
}

void HLS_SPFA::thread_newIndex7_fu_763_p4() {
    newIndex7_fu_763_p4 = offset_head_reg_488.read().range(31, 1);
}

void HLS_SPFA::thread_newIndex8_fu_773_p1() {
    newIndex8_fu_773_p1 = esl_zext<64,31>(newIndex7_fu_763_p4.read());
}

void HLS_SPFA::thread_newIndex9_cast_fu_814_p1() {
    newIndex9_cast_fu_814_p1 = esl_zext<64,12>(newIndex9_reg_1427.read());
}

void HLS_SPFA::thread_newIndex_cast_fu_1313_p1() {
    newIndex_cast_fu_1313_p1 = esl_zext<64,12>(newIndex_fu_1303_p4.read());
}

void HLS_SPFA::thread_newIndex_fu_1303_p4() {
    newIndex_fu_1303_p4 = local_dis_0_sum_fu_1298_p2.read().range(12, 1);
}

void HLS_SPFA::thread_now_dis_fu_826_p3() {
    now_dis_fu_826_p3 = (!tmp_29_reg_1422.read()[0].is_01())? sc_lv<32>(): ((tmp_29_reg_1422.read()[0].to_bool())? p_heap0_1_q0.read(): p_heap0_0_q0.read());
}

void HLS_SPFA::thread_now_fu_783_p3() {
    now_fu_783_p3 = (!tmp_27_fu_779_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_27_fu_779_p1.read()[0].to_bool())? p_heap0_1_q0.read(): p_heap0_0_q0.read());
}

void HLS_SPFA::thread_offset_next_fu_1272_p3() {
    offset_next_fu_1272_p3 = (!tmp_27_reg_1411.read()[0].is_01())? sc_lv<32>(): ((tmp_27_reg_1411.read()[0].to_bool())? p_heap0_0_q0.read(): p_heap0_1_q0.read());
}

void HLS_SPFA::thread_or_cond_fu_926_p2() {
    or_cond_fu_926_p2 = (tmp_18_fu_914_p2.read() & tmp_19_fu_920_p2.read());
}

void HLS_SPFA::thread_p_heap0_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex_cast_fu_1313_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_1665.read()))) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex19_cast_fu_1266_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_42_reg_1665.read()))) {
        p_heap0_0_address0 = p_heap0_0_addr_13_reg_1669.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex22_cast_fu_1245_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_1643.read()))) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex26_cast_fu_1221_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_39_reg_1643.read()))) {
        p_heap0_0_address0 = p_heap0_0_addr_11_reg_1647.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex18_cast_fu_1200_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_1624.read()))) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex27_cast_fu_1172_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_45_reg_1624.read()))) {
        p_heap0_0_address0 = p_heap0_0_addr_15_reg_1628.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex25_cast_fu_1152_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        p_heap0_0_address0 = p_heap0_0_addr_9_reg_1599.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex15_cast_fu_1117_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_heap0_0_address0 = p_heap0_0_addr_8_reg_1527.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex11_cast_fu_964_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex10_cast_fu_908_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex9_cast_fu_814_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex8_fu_773_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_720_p1.read()))) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex6_cast_fu_746_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_720_p1.read()))) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex5_fu_724_p1.read());
    } else if ((esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        p_heap0_0_address0 = p_heap0_0_addr_reg_1358.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_671_p1.read()))) {
        p_heap0_0_address0 =  (sc_lv<11>) (newIndex3_cast_fu_690_p1.read());
    } else {
        p_heap0_0_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void HLS_SPFA::thread_p_heap0_0_ce0() {
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         (esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_671_p1.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_720_p1.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_720_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_39_reg_1643.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_1643.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_42_reg_1665.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_1665.read())))) {
        p_heap0_0_ce0 = ap_const_logic_1;
    } else {
        p_heap0_0_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_p_heap0_0_d0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_42_reg_1665.read())))) {
        p_heap0_0_d0 = i1_reg_1484.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_39_reg_1643.read())))) {
        p_heap0_0_d0 = i0_reg_1477.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        p_heap0_0_d0 = grp_HLS_malloc_1_s_fu_521_ap_return.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_heap0_0_d0 = weight0_heap0_load_s_reg_1561.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_720_p1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_1624.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_1643.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_1665.read())))) {
        p_heap0_0_d0 = ap_const_lv32_FFFFFFFF;
    } else if (((esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_720_p1.read())))) {
        p_heap0_0_d0 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_671_p1.read()))) {
        p_heap0_0_d0 = ap_const_lv32_2710;
    } else {
        p_heap0_0_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_SPFA::thread_p_heap0_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_671_p1.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_720_p1.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_720_p1.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_37_reg_1580.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_1595.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_reg_1595.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_fu_1196_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_39_reg_1643.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_1643.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_fu_1241_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_42_reg_1665.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_1665.read())))) {
        p_heap0_0_we0 = ap_const_logic_1;
    } else {
        p_heap0_0_we0 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_p_heap0_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex_cast_fu_1313_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_42_reg_1665.read()))) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex19_cast_fu_1266_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_1665.read()))) {
        p_heap0_1_address0 = p_heap0_1_addr_12_reg_1674.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex22_cast_fu_1245_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_39_reg_1643.read()))) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex26_cast_fu_1221_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_1643.read()))) {
        p_heap0_1_address0 = p_heap0_1_addr_10_reg_1652.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex18_cast_fu_1200_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_45_reg_1624.read()))) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex27_cast_fu_1172_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_1624.read()))) {
        p_heap0_1_address0 = p_heap0_1_addr_14_reg_1633.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex25_cast_fu_1152_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        p_heap0_1_address0 = p_heap0_1_addr_8_reg_1604.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex15_cast_fu_1117_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_heap0_1_address0 = p_heap0_1_addr_7_reg_1532.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex12_cast_fu_990_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex10_cast_fu_908_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex9_cast_fu_814_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex8_fu_773_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_720_p1.read()))) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex6_cast_fu_746_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_720_p1.read()))) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex5_fu_724_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_heap0_1_address0 =  (sc_lv<11>) (newIndex3_cast_fu_690_p1.read());
    } else {
        p_heap0_1_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void HLS_SPFA::thread_p_heap0_1_ce0() {
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_720_p1.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_720_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_39_reg_1643.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_1643.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_42_reg_1665.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_1665.read())))) {
        p_heap0_1_ce0 = ap_const_logic_1;
    } else {
        p_heap0_1_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_p_heap0_1_d0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_1665.read())))) {
        p_heap0_1_d0 = i1_reg_1484.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_1643.read())))) {
        p_heap0_1_d0 = i0_reg_1477.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        p_heap0_1_d0 = grp_HLS_malloc_1_s_fu_521_ap_return.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_heap0_1_d0 = weight1_1_reg_1566.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_720_p1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_45_reg_1624.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_39_reg_1643.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_42_reg_1665.read())))) {
        p_heap0_1_d0 = ap_const_lv32_FFFFFFFF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_720_p1.read()))) {
        p_heap0_1_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_heap0_1_d0 = ap_const_lv32_2710;
    } else {
        p_heap0_1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_SPFA::thread_p_heap0_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_720_p1.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_fu_720_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1511.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge3_reg_1576.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_1624.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_39_reg_1643.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_1643.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_42_reg_1665.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_1665.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_671_p1.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_37_reg_1580.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_reg_1595.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_1595.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_40_fu_1196_p1.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_43_fu_1241_p1.read())))) {
        p_heap0_1_we0 = ap_const_logic_1;
    } else {
        p_heap0_1_we0 = ap_const_logic_0;
    }
}

void HLS_SPFA::thread_p_sum2_fu_893_p2() {
    p_sum2_fu_893_p2 = (!tmp_26_reg_1442.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_26_reg_1442.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void HLS_SPFA::thread_p_sum3_fu_1123_p2() {
    p_sum3_fu_1123_p2 = (!ap_const_lv13_1.is_01() || !tmp_35_reg_1590.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_1) + sc_biguint<13>(tmp_35_reg_1590.read()));
}

void HLS_SPFA::thread_p_sum4_fu_1157_p2() {
    p_sum4_fu_1157_p2 = (!tmp_44_reg_1619.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_44_reg_1619.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void HLS_SPFA::thread_p_sum6_fu_1206_p2() {
    p_sum6_fu_1206_p2 = (!tmp_38_reg_1638.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_38_reg_1638.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void HLS_SPFA::thread_p_sum8_fu_1251_p2() {
    p_sum8_fu_1251_p2 = (!tmp_41_reg_1660.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_41_reg_1660.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void HLS_SPFA::thread_p_sum_fu_730_p2() {
    p_sum_fu_730_p2 = (!tmp_12_fu_716_p1.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_12_fu_716_p1.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void HLS_SPFA::thread_tmp6_fu_1043_p2() {
    tmp6_fu_1043_p2 = (tmp_21_reg_1537.read() & tmp_22_fu_1031_p2.read());
}

void HLS_SPFA::thread_tmp7_fu_1048_p2() {
    tmp7_fu_1048_p2 = (tmp_24_reg_1549.read() & tmp_25_fu_1037_p2.read());
}

void HLS_SPFA::thread_tmp8_fu_1065_p2() {
    tmp8_fu_1065_p2 = (in_list_q1.read() | brmerge_demorgan_not_fu_1059_p2.read());
}

void HLS_SPFA::thread_tmp_10_fu_845_p2() {
    tmp_10_fu_845_p2 = (!i_2_reg_498.read().is_01() || !extLd_fu_841_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_2_reg_498.read()) < sc_bigint<32>(extLd_fu_841_p1.read()));
}

void HLS_SPFA::thread_tmp_11_fu_1319_p1() {
    tmp_11_fu_1319_p1 = esl_zext<64,31>(i_3_reg_509.read());
}

void HLS_SPFA::thread_tmp_12_fu_716_p1() {
    tmp_12_fu_716_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_13_fu_720_p1() {
    tmp_13_fu_720_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_14_fu_873_p2() {
    tmp_14_fu_873_p2 = (!tmp_7_reg_1458.read().is_01() || !i0_fu_861_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_reg_1458.read()) + sc_bigint<32>(i0_fu_861_p2.read()));
}

void HLS_SPFA::thread_tmp_15_fu_878_p1() {
    tmp_15_fu_878_p1 = esl_sext<64,32>(tmp_14_fu_873_p2.read());
}

void HLS_SPFA::thread_tmp_16_fu_883_p2() {
    tmp_16_fu_883_p2 = (!tmp_7_reg_1458.read().is_01() || !i1_fu_867_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_reg_1458.read()) + sc_bigint<32>(i1_fu_867_p2.read()));
}

void HLS_SPFA::thread_tmp_17_fu_888_p1() {
    tmp_17_fu_888_p1 = esl_sext<64,32>(tmp_16_fu_883_p2.read());
}

void HLS_SPFA::thread_tmp_18_fu_914_p2() {
    tmp_18_fu_914_p2 = (!map_r_q0.read().is_01() || !ap_const_lv32_270F.is_01())? sc_lv<1>(): (sc_bigint<32>(map_r_q0.read()) > sc_bigint<32>(ap_const_lv32_270F));
}

void HLS_SPFA::thread_tmp_19_fu_920_p2() {
    tmp_19_fu_920_p2 = (!map_r_q1.read().is_01() || !ap_const_lv32_270F.is_01())? sc_lv<1>(): (sc_bigint<32>(map_r_q1.read()) > sc_bigint<32>(ap_const_lv32_270F));
}

void HLS_SPFA::thread_tmp_1_fu_1283_p1() {
    tmp_1_fu_1283_p1 = n.read();
}

void HLS_SPFA::thread_tmp_1_fu_1283_p2() {
    tmp_1_fu_1283_p2 = (!i_3_cast_fu_1279_p1.read().is_01() || !tmp_1_fu_1283_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_3_cast_fu_1279_p1.read()) < sc_bigint<32>(tmp_1_fu_1283_p1.read()));
}

void HLS_SPFA::thread_tmp_1_i_fu_591_p0() {
    tmp_1_i_fu_591_p0 = n.read();
}

void HLS_SPFA::thread_tmp_1_i_fu_591_p2() {
    tmp_1_i_fu_591_p2 = (!tmp_1_i_fu_591_p0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_1_i_fu_591_p0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void HLS_SPFA::thread_tmp_20_fu_995_p1() {
    tmp_20_fu_995_p1 = esl_sext<64,32>(i0_reg_1477.read());
}

void HLS_SPFA::thread_tmp_21_fu_999_p2() {
    tmp_21_fu_999_p2 = (!weight0_reg_1515.read().is_01() || !p_heap0_0_q0.read().is_01())? sc_lv<1>(): (sc_bigint<32>(weight0_reg_1515.read()) < sc_bigint<32>(p_heap0_0_q0.read()));
}

void HLS_SPFA::thread_tmp_22_fu_1031_p2() {
    tmp_22_fu_1031_p2 = (in_list_q0.read() ^ ap_const_lv1_1);
}

void HLS_SPFA::thread_tmp_23_cast_fu_942_p3() {
    tmp_23_cast_fu_942_p3 = esl_concat<12,1>(tmp_32_reg_1472.read(), ap_const_lv1_0);
}

void HLS_SPFA::thread_tmp_23_fu_1004_p1() {
    tmp_23_fu_1004_p1 = esl_sext<64,32>(i1_reg_1484.read());
}

void HLS_SPFA::thread_tmp_24_fu_1008_p2() {
    tmp_24_fu_1008_p2 = (!weight1_reg_1521.read().is_01() || !p_heap0_1_q0.read().is_01())? sc_lv<1>(): (sc_bigint<32>(weight1_reg_1521.read()) < sc_bigint<32>(p_heap0_1_q0.read()));
}

void HLS_SPFA::thread_tmp_24_not_fu_1081_p2() {
    tmp_24_not_fu_1081_p2 = (tmp_21_reg_1537.read() ^ ap_const_lv1_1);
}

void HLS_SPFA::thread_tmp_25_fu_1037_p2() {
    tmp_25_fu_1037_p2 = (in_list_q1.read() ^ ap_const_lv1_1);
}

void HLS_SPFA::thread_tmp_26_cast_fu_969_p2() {
    tmp_26_cast_fu_969_p2 = (tmp_23_cast_fu_942_p3.read() | ap_const_lv13_1);
}

void HLS_SPFA::thread_tmp_26_fu_819_p1() {
    tmp_26_fu_819_p1 = offset_head_reg_488.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_27_fu_779_p1() {
    tmp_27_fu_779_p1 = offset_head_reg_488.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_27_not_fu_1092_p2() {
    tmp_27_not_fu_1092_p2 = (tmp_24_reg_1549.read() ^ ap_const_lv1_1);
}

void HLS_SPFA::thread_tmp_28_fu_791_p1() {
    tmp_28_fu_791_p1 = now_fu_783_p3.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_29_fu_795_p1() {
    tmp_29_fu_795_p1 = now_fu_783_p3.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_30_fu_1294_p1() {
    tmp_30_fu_1294_p1 = i_3_reg_509.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_31_fu_1324_p1() {
    tmp_31_fu_1324_p1 = i_3_reg_509.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_32_fu_857_p1() {
    tmp_32_fu_857_p1 = i_2_reg_498.read().range(12-1, 0);
}

void HLS_SPFA::thread_tmp_34_fu_1027_p1() {
    tmp_34_fu_1027_p1 = offset_tail_fu_90.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_35_fu_1103_p1() {
    tmp_35_fu_1103_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_36_fu_1107_p1() {
    tmp_36_fu_1107_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_37_fu_1077_p1() {
    tmp_37_fu_1077_p1 = offset_tail_fu_90.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_38_fu_1182_p1() {
    tmp_38_fu_1182_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_39_fu_1186_p1() {
    tmp_39_fu_1186_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_3_fu_667_p1() {
    tmp_3_fu_667_p1 = i_reg_466.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_40_fu_1196_p1() {
    tmp_40_fu_1196_p1 = offset_tail_fu_90.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_41_fu_1227_p1() {
    tmp_41_fu_1227_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_42_fu_1231_p1() {
    tmp_42_fu_1231_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_43_fu_1241_p1() {
    tmp_43_fu_1241_p1 = offset_tail_fu_90.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_44_fu_1138_p1() {
    tmp_44_fu_1138_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(13-1, 0);
}

void HLS_SPFA::thread_tmp_45_fu_1142_p1() {
    tmp_45_fu_1142_p1 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_4_fu_823_p1() {
    tmp_4_fu_823_p1 = esl_sext<64,32>(now_reg_1416.read());
}

void HLS_SPFA::thread_tmp_5_cast_fu_629_p3() {
    tmp_5_cast_fu_629_p3 = esl_concat<12,1>(tmp_fu_619_p4.read(), ap_const_lv1_0);
}

void HLS_SPFA::thread_tmp_5_fu_671_p1() {
    tmp_5_fu_671_p1 = i_reg_466.read().range(1-1, 0);
}

void HLS_SPFA::thread_tmp_6_fu_656_p1() {
    tmp_6_fu_656_p1 = n.read();
}

void HLS_SPFA::thread_tmp_6_fu_656_p2() {
    tmp_6_fu_656_p2 = (!i_cast_fu_652_p1.read().is_01() || !tmp_6_fu_656_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_fu_652_p1.read()) < sc_bigint<32>(tmp_6_fu_656_p1.read()));
}

void HLS_SPFA::thread_tmp_7_fu_833_p0() {
    tmp_7_fu_833_p0 = n.read();
}

void HLS_SPFA::thread_tmp_7_fu_833_p2() {
    tmp_7_fu_833_p2 = (!tmp_7_fu_833_p0.read().is_01() || !now_reg_1416.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_7_fu_833_p0.read()) * sc_bigint<32>(now_reg_1416.read());
}

void HLS_SPFA::thread_tmp_8_fu_757_p2() {
    tmp_8_fu_757_p2 = (!offset_head_reg_488.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(offset_head_reg_488.read() == ap_const_lv32_FFFFFFFF);
}

void HLS_SPFA::thread_tmp_9_fu_700_p1() {
    tmp_9_fu_700_p1 = n.read();
}

void HLS_SPFA::thread_tmp_9_fu_700_p2() {
    tmp_9_fu_700_p2 = (!i_1_cast_fu_696_p1.read().is_01() || !tmp_9_fu_700_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_1_cast_fu_696_p1.read()) < sc_bigint<32>(tmp_9_fu_700_p1.read()));
}

void HLS_SPFA::thread_tmp_fu_619_p4() {
    tmp_fu_619_p4 = grp_HLS_malloc_1_s_fu_521_ap_return.read().range(12, 1);
}

void HLS_SPFA::thread_tmp_s_fu_711_p1() {
    tmp_s_fu_711_p1 = esl_zext<64,31>(i_1_reg_477.read());
}

void HLS_SPFA::thread_weight0_fu_932_p2() {
    weight0_fu_932_p2 = (!now_dis_reg_1452.read().is_01() || !map_r_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(now_dis_reg_1452.read()) + sc_biguint<32>(map_r_q0.read()));
}

void HLS_SPFA::thread_weight0_heap0_load_s_fu_1013_p3() {
    weight0_heap0_load_s_fu_1013_p3 = (!tmp_21_fu_999_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_21_fu_999_p2.read()[0].to_bool())? weight0_reg_1515.read(): p_heap0_0_q0.read());
}

void HLS_SPFA::thread_weight1_1_fu_1020_p3() {
    weight1_1_fu_1020_p3 = (!tmp_24_fu_1008_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_24_fu_1008_p2.read()[0].to_bool())? weight1_reg_1521.read(): p_heap0_1_q0.read());
}

void HLS_SPFA::thread_weight1_fu_937_p2() {
    weight1_fu_937_p2 = (!now_dis_reg_1452.read().is_01() || !map_r_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(now_dis_reg_1452.read()) + sc_biguint<32>(map_r_q1.read()));
}

void HLS_SPFA::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(tmp_6_fu_656_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_9_fu_700_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_8_fu_757_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(tmp_10_fu_845_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(or_cond_fu_926_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(brmerge5_fu_1097_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(brmerge4_fu_1086_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(brmerge3_fu_1071_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(brmerge5_fu_1097_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(brmerge4_fu_1086_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(brmerge3_fu_1071_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else if ((esl_seteq<1,1,1>(brmerge4_fu_1086_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(brmerge3_fu_1071_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_521_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(grp_HLS_free_1_s_fu_538_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(tmp_1_fu_1283_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void HLS_SPFA::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"map_r_address0\" :  \"" << map_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"map_r_ce0\" :  \"" << map_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"map_r_q0\" :  \"" << map_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"map_r_address1\" :  \"" << map_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"map_r_ce1\" :  \"" << map_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"map_r_q1\" :  \"" << map_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_address0\" :  \"" << dis_output_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_ce0\" :  \"" << dis_output_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_we0\" :  \"" << dis_output_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_d0\" :  \"" << dis_output_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_1_size\" :  \"" << alloc_1_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_1_size_ap_vld\" :  \"" << alloc_1_size_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_1_size_ap_ack\" :  \"" << alloc_1_size_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_1_free_target\" :  \"" << alloc_1_free_target.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_1_free_target_ap_vld\" :  \"" << alloc_1_free_target_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_1_free_target_ap_ack\" :  \"" << alloc_1_free_target_ap_ack.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_1_addr\" :  \"" << alloc_1_addr.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_1_addr_ap_vld\" :  \"" << alloc_1_addr_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_1_addr_ap_ack\" :  \"" << alloc_1_addr_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_1_cmd\" :  \"" << alloc_1_cmd.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_1_cmd_ap_vld\" :  \"" << alloc_1_cmd_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_1_cmd_ap_ack\" :  \"" << alloc_1_cmd_ap_ack.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

