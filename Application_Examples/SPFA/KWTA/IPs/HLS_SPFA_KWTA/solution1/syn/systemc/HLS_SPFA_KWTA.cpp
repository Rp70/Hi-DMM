// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "HLS_SPFA_KWTA.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic HLS_SPFA_KWTA::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic HLS_SPFA_KWTA::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state1 = "1";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state2 = "10";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state3 = "100";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state4 = "1000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state5 = "10000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state6 = "100000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state7 = "1000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state8 = "10000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state9 = "100000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state10 = "1000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state11 = "10000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state12 = "100000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<36> HLS_SPFA_KWTA::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool HLS_SPFA_KWTA::ap_const_boolean_1 = true;
const sc_lv<1> HLS_SPFA_KWTA::ap_const_lv1_0 = "0";
const sc_lv<31> HLS_SPFA_KWTA::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_1 = "1";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_5 = "101";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_F = "1111";
const sc_lv<1> HLS_SPFA_KWTA::ap_const_lv1_1 = "1";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_14 = "10100";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_10 = "10000";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_20 = "100000";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_1B = "11011";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_6 = "110";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_18 = "11000";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_15 = "10101";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_11 = "10001";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_1C = "11100";
const bool HLS_SPFA_KWTA::ap_const_boolean_0 = false;
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_2 = "10";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_3 = "11";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_4 = "100";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_7 = "111";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_8 = "1000";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_9 = "1001";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_A = "1010";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_B = "1011";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_C = "1100";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_D = "1101";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_E = "1110";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_12 = "10010";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_16 = "10110";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_19 = "11001";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_1D = "11101";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_1F = "11111";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_22 = "100010";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_21 = "100001";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_1E = "11110";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_23 = "100011";
const sc_lv<64> HLS_SPFA_KWTA::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_13 = "10011";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_17 = "10111";
const sc_lv<8> HLS_SPFA_KWTA::ap_const_lv8_2 = "10";
const sc_lv<8> HLS_SPFA_KWTA::ap_const_lv8_3 = "11";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_2710 = "10011100010000";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_1A = "11010";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<13> HLS_SPFA_KWTA::ap_const_lv13_7D1 = "11111010001";
const sc_lv<31> HLS_SPFA_KWTA::ap_const_lv31_1 = "1";
const sc_lv<13> HLS_SPFA_KWTA::ap_const_lv13_7D0 = "11111010000";
const sc_lv<32> HLS_SPFA_KWTA::ap_const_lv32_270F = "10011100001111";
const sc_lv<13> HLS_SPFA_KWTA::ap_const_lv13_1 = "1";

HLS_SPFA_KWTA::HLS_SPFA_KWTA(sc_module_name name) : sc_module(name), mVcdFile(0) {
    HTA_heap_0_U = new HLS_SPFA_KWTA_HTAbkb("HTA_heap_0_U");
    HTA_heap_0_U->clk(ap_clk);
    HTA_heap_0_U->reset(ap_rst);
    HTA_heap_0_U->address0(HTA_heap_0_address0);
    HTA_heap_0_U->ce0(HTA_heap_0_ce0);
    HTA_heap_0_U->we0(HTA_heap_0_we0);
    HTA_heap_0_U->d0(HTA_heap_0_d0);
    HTA_heap_0_U->q0(HTA_heap_0_q0);
    HTA_heap_1_U = new HLS_SPFA_KWTA_HTAbkb("HTA_heap_1_U");
    HTA_heap_1_U->clk(ap_clk);
    HTA_heap_1_U->reset(ap_rst);
    HTA_heap_1_U->address0(HTA_heap_1_address0);
    HTA_heap_1_U->ce0(HTA_heap_1_ce0);
    HTA_heap_1_U->we0(HTA_heap_1_we0);
    HTA_heap_1_U->d0(HTA_heap_1_d0);
    HTA_heap_1_U->q0(HTA_heap_1_q0);
    in_list_U = new HLS_SPFA_KWTA_in_dEe("in_list_U");
    in_list_U->clk(ap_clk);
    in_list_U->reset(ap_rst);
    in_list_U->address0(in_list_address0);
    in_list_U->ce0(in_list_ce0);
    in_list_U->we0(in_list_we0);
    in_list_U->d0(in_list_d0);
    in_list_U->q0(in_list_q0);
    in_list_U->address1(in_list_address1);
    in_list_U->ce1(in_list_ce1);
    in_list_U->we1(in_list_we1);
    in_list_U->d1(ap_var_for_const0);
    in_list_U->q1(in_list_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_HTA_heap_0_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( HTA_heap_0_addr_reg_1513 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( HTA_heap_0_addr_7_reg_1679 );
    sensitive << ( HTA_heap_0_addr_13_reg_1740 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( HTA_heap_0_addr_10_reg_1753 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( HTA_heap_0_addr_8_reg_1771 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_5_fu_643_p2 );
    sensitive << ( newIndex3_cast_fu_677_p1 );
    sensitive << ( newIndex4_cast_fu_737_p1 );
    sensitive << ( newIndex6_cast_fu_794_p1 );
    sensitive << ( newIndex7_cast_fu_835_p1 );
    sensitive << ( newIndex8_cast_fu_925_p1 );
    sensitive << ( newIndex9_cast_fu_981_p1 );
    sensitive << ( newIndex20_cast_fu_1124_p1 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( newIndex14_cast_fu_1200_p1 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( newIndex12_cast_fu_1275_p1 );
    sensitive << ( newIndex15_cast_fu_1316_p1 );
    sensitive << ( newIndex_cast_fu_1463_p1 );
    sensitive << ( tmp_4_fu_658_p1 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_HTA_heap_0_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_5_fu_643_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_4_fu_658_p1 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_HTA_heap_0_d0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i0_reg_1631 );
    sensitive << ( i1_reg_1637 );
    sensitive << ( weight0_HTA_heap_loa_reg_1710 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_5_fu_643_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( offset_new_node1_fu_1079_p2 );
    sensitive << ( offset_new_node0_2_fu_1155_p2 );
    sensitive << ( tmp_4_fu_658_p1 );
    sensitive << ( offset_new_node0_fu_1231_p2 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_HTA_heap_0_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_5_fu_643_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_4_fu_658_p1 );
    sensitive << ( tmp_49_fu_1120_p1 );
    sensitive << ( tmp_44_fu_1196_p1 );
    sensitive << ( tmp_41_fu_1272_p1 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_HTA_heap_1_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( HTA_heap_1_addr_6_reg_1684 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( newIndex3_cast_fu_677_p1 );
    sensitive << ( newIndex5_cast_fu_758_p1 );
    sensitive << ( newIndex6_cast_fu_794_p1 );
    sensitive << ( newIndex7_cast_fu_835_p1 );
    sensitive << ( newIndex8_cast_fu_925_p1 );
    sensitive << ( newIndex10_cast_fu_1007_p1 );
    sensitive << ( newIndex20_cast_fu_1124_p1 );
    sensitive << ( newIndex19_cast_fu_1151_p1 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( newIndex14_cast_fu_1200_p1 );
    sensitive << ( newIndex21_cast_fu_1227_p1 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( newIndex12_cast_fu_1275_p1 );
    sensitive << ( newIndex16_cast_fu_1336_p1 );
    sensitive << ( newIndex17_cast_fu_1362_p1 );
    sensitive << ( newIndex_cast_fu_1463_p1 );

    SC_METHOD(thread_HTA_heap_1_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_HTA_heap_1_d0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( weight1_1_reg_1715 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( offset_new_node1_fu_1079_p2 );
    sensitive << ( offset_new_node0_2_fu_1155_p2 );
    sensitive << ( offset_new_node1_1_fu_1281_p2 );
    sensitive << ( offset_new_node0_fu_1231_p2 );

    SC_METHOD(thread_HTA_heap_1_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( or_cond_reg_1663 );
    sensitive << ( brmerge_demorgan_reg_1736 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_5_fu_643_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_4_fu_658_p1 );
    sensitive << ( tmp_49_fu_1120_p1 );
    sensitive << ( tmp_44_fu_1196_p1 );
    sensitive << ( tmp_41_fu_1272_p1 );

    SC_METHOD(thread_KWTA_heap_0_sum1_fu_778_p2);
    sensitive << ( tmp_27_fu_774_p1 );

    SC_METHOD(thread_KWTA_heap_0_sum2_fu_1251_p2);
    sensitive << ( tmp_32_cast_fu_1243_p3 );

    SC_METHOD(thread_KWTA_heap_0_sum3_fu_1300_p2);
    sensitive << ( tmp_33_cast_fu_1292_p3 );

    SC_METHOD(thread_KWTA_heap_0_sum4_fu_1175_p2);
    sensitive << ( tmp_34_cast_fu_1167_p3 );

    SC_METHOD(thread_KWTA_heap_0_sum5_fu_1099_p2);
    sensitive << ( tmp_35_cast_fu_1091_p3 );

    SC_METHOD(thread_KWTA_heap_0_sum_fu_721_p2);
    sensitive << ( tmp_cast_fu_713_p3 );

    SC_METHOD(thread_alloc_HTA_addr_ap_ack);
    sensitive << ( alloc_HTA_addr_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_alloc_HTA_addr_blk_n);
    sensitive << ( alloc_HTA_addr_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_alloc_HTA_cmd);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_alloc_HTA_cmd_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_reg_ioackin_alloc_HTA_cmd_ap_ack );

    SC_METHOD(thread_alloc_HTA_cmd_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( alloc_HTA_cmd_ap_ack );

    SC_METHOD(thread_alloc_HTA_free_target);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_alloc_HTA_free_target_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_reg_ioackin_alloc_HTA_free_target_ap_ack );

    SC_METHOD(thread_alloc_HTA_free_target_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( alloc_HTA_free_target_ap_ack );

    SC_METHOD(thread_alloc_HTA_size);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( n );

    SC_METHOD(thread_alloc_HTA_size_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_reg_ioackin_alloc_HTA_size_ap_ack );

    SC_METHOD(thread_alloc_HTA_size_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( alloc_HTA_size_ap_ack );

    SC_METHOD(thread_alloc_KWTA_addr_ap_ack);
    sensitive << ( alloc_KWTA_addr_ap_vld );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_alloc_KWTA_addr_blk_n);
    sensitive << ( alloc_KWTA_addr_ap_vld );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_alloc_KWTA_cmd);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_alloc_KWTA_cmd_ap_vld);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_reg_ioackin_alloc_KWTA_cmd_ap_ack );

    SC_METHOD(thread_alloc_KWTA_cmd_blk_n);
    sensitive << ( alloc_KWTA_cmd_ap_ack );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_alloc_KWTA_free_target);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( free_target_assign_reg_1789 );

    SC_METHOD(thread_alloc_KWTA_free_target_ap_vld);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_reg_ioackin_alloc_KWTA_free_target_ap_ack );

    SC_METHOD(thread_alloc_KWTA_free_target_blk_n);
    sensitive << ( alloc_KWTA_free_target_ap_ack );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_alloc_KWTA_size);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_alloc_KWTA_size_ap_vld);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_reg_ioackin_alloc_KWTA_size_ap_ack );

    SC_METHOD(thread_alloc_KWTA_size_blk_n);
    sensitive << ( alloc_KWTA_size_ap_ack );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state16_io);
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_cmd_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_size_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_free_target_ap_ack );

    SC_METHOD(thread_ap_block_state17_io);
    sensitive << ( ap_sig_ioackin_alloc_KWTA_cmd_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_size_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_free_target_ap_ack );

    SC_METHOD(thread_ap_block_state1_io);
    sensitive << ( ap_sig_ioackin_alloc_HTA_cmd_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_HTA_size_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_HTA_free_target_ap_ack );

    SC_METHOD(thread_ap_block_state21_io);
    sensitive << ( ap_sig_ioackin_alloc_KWTA_cmd_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_size_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_free_target_ap_ack );

    SC_METHOD(thread_ap_block_state28_io);
    sensitive << ( ap_sig_ioackin_alloc_KWTA_cmd_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_size_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_free_target_ap_ack );

    SC_METHOD(thread_ap_block_state33_io);
    sensitive << ( ap_sig_ioackin_alloc_KWTA_cmd_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_size_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_free_target_ap_ack );

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( ap_sig_ioackin_alloc_KWTA_cmd_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_size_ap_ack );
    sensitive << ( ap_sig_ioackin_alloc_KWTA_free_target_ap_ack );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_s_fu_1433_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_s_fu_1433_p2 );

    SC_METHOD(thread_ap_sig_ioackin_alloc_HTA_cmd_ap_ack);
    sensitive << ( alloc_HTA_cmd_ap_ack );
    sensitive << ( ap_reg_ioackin_alloc_HTA_cmd_ap_ack );

    SC_METHOD(thread_ap_sig_ioackin_alloc_HTA_free_target_ap_ack);
    sensitive << ( alloc_HTA_free_target_ap_ack );
    sensitive << ( ap_reg_ioackin_alloc_HTA_free_target_ap_ack );

    SC_METHOD(thread_ap_sig_ioackin_alloc_HTA_size_ap_ack);
    sensitive << ( alloc_HTA_size_ap_ack );
    sensitive << ( ap_reg_ioackin_alloc_HTA_size_ap_ack );

    SC_METHOD(thread_ap_sig_ioackin_alloc_KWTA_cmd_ap_ack);
    sensitive << ( alloc_KWTA_cmd_ap_ack );
    sensitive << ( ap_reg_ioackin_alloc_KWTA_cmd_ap_ack );

    SC_METHOD(thread_ap_sig_ioackin_alloc_KWTA_free_target_ap_ack);
    sensitive << ( alloc_KWTA_free_target_ap_ack );
    sensitive << ( ap_reg_ioackin_alloc_KWTA_free_target_ap_ack );

    SC_METHOD(thread_ap_sig_ioackin_alloc_KWTA_size_ap_ack);
    sensitive << ( alloc_KWTA_size_ap_ack );
    sensitive << ( ap_reg_ioackin_alloc_KWTA_size_ap_ack );

    SC_METHOD(thread_brmerge_demorgan_fu_1073_p2);
    sensitive << ( update0_fu_1057_p2 );
    sensitive << ( update1_fu_1068_p2 );

    SC_METHOD(thread_dis_output_address0);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( tmp_11_fu_1469_p1 );

    SC_METHOD(thread_dis_output_ce0);
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_dis_output_d0);
    sensitive << ( HTA_heap_0_q0 );
    sensitive << ( HTA_heap_1_q0 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( tmp_34_fu_1474_p1 );

    SC_METHOD(thread_dis_output_we0);
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_extLd_fu_858_p1);
    sensitive << ( N_2 );

    SC_METHOD(thread_free_target_assign_fu_1421_p3);
    sensitive << ( tmp_37_fu_1373_p3 );
    sensitive << ( p_neg_t_fu_1401_p2 );
    sensitive << ( tmp_19_fu_1417_p1 );

    SC_METHOD(thread_grp_fu_553_p2);
    sensitive << ( tmp_38_reg_1725 );

    SC_METHOD(thread_grp_fu_558_p4);
    sensitive << ( grp_fu_553_p2 );

    SC_METHOD(thread_guard_variable_for_H_1_load_fu_576_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_H );

    SC_METHOD(thread_i0_fu_878_p2);
    sensitive << ( i_2_reg_527 );

    SC_METHOD(thread_i1_fu_884_p2);
    sensitive << ( i0_fu_878_p2 );

    SC_METHOD(thread_i_1_cast_fu_683_p1);
    sensitive << ( i_1_reg_506 );

    SC_METHOD(thread_i_3_cast_fu_1429_p1);
    sensitive << ( i_3_reg_538 );

    SC_METHOD(thread_i_4_fu_648_p2);
    sensitive << ( i_reg_495 );

    SC_METHOD(thread_i_5_fu_692_p2);
    sensitive << ( i_1_reg_506 );

    SC_METHOD(thread_i_6_fu_1438_p2);
    sensitive << ( i_3_reg_538 );

    SC_METHOD(thread_i_7_fu_868_p2);
    sensitive << ( i_2_reg_527 );

    SC_METHOD(thread_i_cast_fu_639_p1);
    sensitive << ( i_reg_495 );

    SC_METHOD(thread_in_list_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_3_reg_1601 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( in_list_addr_3_reg_1694 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_8_fu_687_p2 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( tmp_9_fu_698_p1 );
    sensitive << ( tmp_20_fu_1012_p1 );

    SC_METHOD(thread_in_list_address1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( in_list_addr_3_reg_1694 );
    sensitive << ( in_list_addr_4_reg_1705 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_23_fu_1021_p1 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_in_list_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_8_fu_687_p2 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_in_list_ce1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_in_list_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_8_fu_687_p2 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_in_list_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_8_fu_687_p2 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_in_list_we1);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_local_dis_0_sum1_fu_662_p2);
    sensitive << ( tmp_4_cast_reg_1504 );
    sensitive << ( tmp_1_fu_654_p1 );

    SC_METHOD(thread_local_dis_0_sum2_fu_820_p2);
    sensitive << ( tmp_4_cast_reg_1504 );
    sensitive << ( tmp_31_fu_812_p1 );

    SC_METHOD(thread_local_dis_0_sum6_fu_966_p2);
    sensitive << ( tmp_4_cast_reg_1504 );
    sensitive << ( tmp_23_cast_fu_959_p3 );

    SC_METHOD(thread_local_dis_0_sum7_fu_992_p2);
    sensitive << ( tmp_4_cast_reg_1504 );
    sensitive << ( tmp_26_cast_fu_986_p2 );

    SC_METHOD(thread_local_dis_0_sum_fu_1448_p2);
    sensitive << ( tmp_4_cast_reg_1504 );
    sensitive << ( tmp_33_fu_1444_p1 );

    SC_METHOD(thread_map_r_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_13_fu_895_p1 );

    SC_METHOD(thread_map_r_address1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_15_fu_905_p1 );

    SC_METHOD(thread_map_r_ce0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_map_r_ce1);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_newIndex10_cast_fu_1007_p1);
    sensitive << ( newIndex10_fu_997_p4 );

    SC_METHOD(thread_newIndex10_fu_997_p4);
    sensitive << ( local_dis_0_sum7_fu_992_p2 );

    SC_METHOD(thread_newIndex11_cast_fu_1267_p1);
    sensitive << ( newIndex11_fu_1257_p4 );

    SC_METHOD(thread_newIndex11_fu_1257_p4);
    sensitive << ( KWTA_heap_0_sum2_fu_1251_p2 );

    SC_METHOD(thread_newIndex12_cast_fu_1275_p1);
    sensitive << ( grp_fu_558_p4 );

    SC_METHOD(thread_newIndex13_cast_fu_1191_p1);
    sensitive << ( newIndex13_fu_1181_p4 );

    SC_METHOD(thread_newIndex13_fu_1181_p4);
    sensitive << ( KWTA_heap_0_sum4_fu_1175_p2 );

    SC_METHOD(thread_newIndex14_cast_fu_1200_p1);
    sensitive << ( grp_fu_558_p4 );

    SC_METHOD(thread_newIndex15_cast_fu_1316_p1);
    sensitive << ( newIndex15_fu_1306_p4 );

    SC_METHOD(thread_newIndex15_fu_1306_p4);
    sensitive << ( KWTA_heap_0_sum3_fu_1300_p2 );

    SC_METHOD(thread_newIndex16_cast_fu_1336_p1);
    sensitive << ( newIndex16_fu_1326_p4 );

    SC_METHOD(thread_newIndex16_fu_1326_p4);
    sensitive << ( p_sum2_fu_1321_p2 );

    SC_METHOD(thread_newIndex17_cast_fu_1362_p1);
    sensitive << ( newIndex17_reg_1779 );

    SC_METHOD(thread_newIndex18_cast_fu_1115_p1);
    sensitive << ( newIndex18_fu_1105_p4 );

    SC_METHOD(thread_newIndex18_fu_1105_p4);
    sensitive << ( KWTA_heap_0_sum5_fu_1099_p2 );

    SC_METHOD(thread_newIndex19_cast_fu_1151_p1);
    sensitive << ( newIndex19_reg_1748 );

    SC_METHOD(thread_newIndex1_fu_625_p4);
    sensitive << ( status_6_reg_1498 );

    SC_METHOD(thread_newIndex20_cast_fu_1124_p1);
    sensitive << ( grp_fu_558_p4 );

    SC_METHOD(thread_newIndex21_cast_fu_1227_p1);
    sensitive << ( newIndex21_reg_1761 );

    SC_METHOD(thread_newIndex2_fu_634_p1);
    sensitive << ( newIndex1_fu_625_p4 );

    SC_METHOD(thread_newIndex3_cast_fu_677_p1);
    sensitive << ( newIndex3_fu_667_p4 );

    SC_METHOD(thread_newIndex3_fu_667_p4);
    sensitive << ( local_dis_0_sum1_fu_662_p2 );

    SC_METHOD(thread_newIndex4_cast_fu_737_p1);
    sensitive << ( newIndex4_fu_727_p4 );

    SC_METHOD(thread_newIndex4_fu_727_p4);
    sensitive << ( KWTA_heap_0_sum_fu_721_p2 );

    SC_METHOD(thread_newIndex5_cast_fu_758_p1);
    sensitive << ( newIndex5_fu_748_p4 );

    SC_METHOD(thread_newIndex5_fu_748_p4);
    sensitive << ( p_sum_fu_742_p2 );

    SC_METHOD(thread_newIndex6_cast_fu_794_p1);
    sensitive << ( newIndex6_fu_784_p4 );

    SC_METHOD(thread_newIndex6_fu_784_p4);
    sensitive << ( KWTA_heap_0_sum1_fu_778_p2 );

    SC_METHOD(thread_newIndex7_cast_fu_835_p1);
    sensitive << ( newIndex7_reg_1586 );

    SC_METHOD(thread_newIndex8_cast_fu_925_p1);
    sensitive << ( newIndex8_fu_915_p4 );

    SC_METHOD(thread_newIndex8_fu_915_p4);
    sensitive << ( p_sum3_fu_910_p2 );

    SC_METHOD(thread_newIndex9_cast_fu_981_p1);
    sensitive << ( newIndex9_fu_971_p4 );

    SC_METHOD(thread_newIndex9_fu_971_p4);
    sensitive << ( local_dis_0_sum6_fu_966_p2 );

    SC_METHOD(thread_newIndex_cast_fu_1463_p1);
    sensitive << ( newIndex_fu_1453_p4 );

    SC_METHOD(thread_newIndex_fu_1453_p4);
    sensitive << ( local_dis_0_sum_fu_1448_p2 );

    SC_METHOD(thread_now_dis_fu_843_p3);
    sensitive << ( tmp_32_reg_1581 );
    sensitive << ( HTA_heap_0_q0 );
    sensitive << ( HTA_heap_1_q0 );

    SC_METHOD(thread_now_fu_804_p3);
    sensitive << ( tmp_28_fu_800_p1 );
    sensitive << ( HTA_heap_0_q0 );
    sensitive << ( HTA_heap_1_q0 );

    SC_METHOD(thread_offset_head_3_fu_703_p2);
    sensitive << ( reg_568 );

    SC_METHOD(thread_offset_new_node0_2_fu_1155_p2);
    sensitive << ( reg_568 );

    SC_METHOD(thread_offset_new_node0_fu_1231_p2);
    sensitive << ( reg_568 );

    SC_METHOD(thread_offset_new_node1_1_fu_1281_p2);
    sensitive << ( reg_568 );

    SC_METHOD(thread_offset_new_node1_fu_1079_p2);
    sensitive << ( reg_568 );

    SC_METHOD(thread_offset_next_fu_1366_p3);
    sensitive << ( tmp_28_reg_1570 );
    sensitive << ( HTA_heap_0_q0 );
    sensitive << ( HTA_heap_1_q0 );

    SC_METHOD(thread_or_cond_fu_943_p2);
    sensitive << ( tmp_16_fu_931_p2 );
    sensitive << ( tmp_17_fu_937_p2 );

    SC_METHOD(thread_p_lshr_f_fu_1407_p4);
    sensitive << ( offset_head_reg_517 );

    SC_METHOD(thread_p_lshr_fu_1387_p4);
    sensitive << ( p_neg_fu_1381_p2 );

    SC_METHOD(thread_p_neg_fu_1381_p2);
    sensitive << ( offset_head_reg_517 );

    SC_METHOD(thread_p_neg_t_fu_1401_p2);
    sensitive << ( tmp_18_fu_1397_p1 );

    SC_METHOD(thread_p_sum2_fu_1321_p2);
    sensitive << ( tmp_32_cast_reg_1766 );

    SC_METHOD(thread_p_sum3_fu_910_p2);
    sensitive << ( tmp_27_reg_1555 );

    SC_METHOD(thread_p_sum4_fu_1341_p2);
    sensitive << ( tmp_33_cast_fu_1292_p3 );

    SC_METHOD(thread_p_sum6_fu_1206_p2);
    sensitive << ( tmp_34_cast_fu_1167_p3 );

    SC_METHOD(thread_p_sum8_fu_1130_p2);
    sensitive << ( tmp_35_cast_fu_1091_p3 );

    SC_METHOD(thread_p_sum_fu_742_p2);
    sensitive << ( tmp_cast_fu_713_p3 );

    SC_METHOD(thread_tmp_10_fu_862_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i_2_reg_527 );
    sensitive << ( extLd_fu_858_p1 );

    SC_METHOD(thread_tmp_11_fu_1469_p1);
    sensitive << ( i_3_reg_538 );

    SC_METHOD(thread_tmp_12_fu_890_p2);
    sensitive << ( tmp_6_reg_1612 );
    sensitive << ( i0_fu_878_p2 );

    SC_METHOD(thread_tmp_13_fu_895_p1);
    sensitive << ( tmp_12_fu_890_p2 );

    SC_METHOD(thread_tmp_14_fu_900_p2);
    sensitive << ( tmp_6_reg_1612 );
    sensitive << ( i1_fu_884_p2 );

    SC_METHOD(thread_tmp_15_fu_905_p1);
    sensitive << ( tmp_14_fu_900_p2 );

    SC_METHOD(thread_tmp_16_fu_931_p2);
    sensitive << ( map_r_q0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_tmp_17_fu_937_p2);
    sensitive << ( map_r_q1 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_tmp_18_fu_1397_p1);
    sensitive << ( p_lshr_fu_1387_p4 );

    SC_METHOD(thread_tmp_19_fu_1417_p1);
    sensitive << ( p_lshr_f_fu_1407_p4 );

    SC_METHOD(thread_tmp_1_fu_654_p1);
    sensitive << ( i_reg_495 );

    SC_METHOD(thread_tmp_1_i_fu_580_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( n );

    SC_METHOD(thread_tmp_1_i_fu_580_p2);
    sensitive << ( tmp_1_i_fu_580_p0 );

    SC_METHOD(thread_tmp_20_fu_1012_p1);
    sensitive << ( i0_reg_1631 );

    SC_METHOD(thread_tmp_21_fu_1016_p2);
    sensitive << ( weight0_reg_1667 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( HTA_heap_0_q0 );

    SC_METHOD(thread_tmp_22_fu_1051_p2);
    sensitive << ( in_list_q0 );

    SC_METHOD(thread_tmp_23_cast_fu_959_p3);
    sensitive << ( tmp_35_reg_1626 );

    SC_METHOD(thread_tmp_23_fu_1021_p1);
    sensitive << ( i1_reg_1637 );

    SC_METHOD(thread_tmp_24_fu_1025_p2);
    sensitive << ( weight1_reg_1673 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( HTA_heap_1_q0 );

    SC_METHOD(thread_tmp_25_fu_1062_p2);
    sensitive << ( in_list_q1 );

    SC_METHOD(thread_tmp_26_cast_fu_986_p2);
    sensitive << ( tmp_23_cast_fu_959_p3 );

    SC_METHOD(thread_tmp_26_fu_709_p1);
    sensitive << ( reg_568 );

    SC_METHOD(thread_tmp_27_fu_774_p1);
    sensitive << ( offset_head_reg_517 );

    SC_METHOD(thread_tmp_28_fu_800_p1);
    sensitive << ( offset_head_reg_517 );

    SC_METHOD(thread_tmp_31_fu_812_p1);
    sensitive << ( now_fu_804_p3 );

    SC_METHOD(thread_tmp_32_cast_fu_1243_p3);
    sensitive << ( tmp_40_fu_1239_p1 );

    SC_METHOD(thread_tmp_32_fu_816_p1);
    sensitive << ( now_fu_804_p3 );

    SC_METHOD(thread_tmp_33_cast_fu_1292_p3);
    sensitive << ( tmp_46_fu_1288_p1 );

    SC_METHOD(thread_tmp_33_fu_1444_p1);
    sensitive << ( i_3_reg_538 );

    SC_METHOD(thread_tmp_34_cast_fu_1167_p3);
    sensitive << ( tmp_43_fu_1163_p1 );

    SC_METHOD(thread_tmp_34_fu_1474_p1);
    sensitive << ( i_3_reg_538 );

    SC_METHOD(thread_tmp_35_cast_fu_1091_p3);
    sensitive << ( tmp_48_fu_1087_p1 );

    SC_METHOD(thread_tmp_35_fu_874_p1);
    sensitive << ( i_2_reg_527 );

    SC_METHOD(thread_tmp_37_fu_1373_p3);
    sensitive << ( offset_head_reg_517 );

    SC_METHOD(thread_tmp_38_fu_1047_p1);
    sensitive << ( offset_tail_fu_124 );

    SC_METHOD(thread_tmp_3_fu_840_p1);
    sensitive << ( now_reg_1575 );

    SC_METHOD(thread_tmp_40_fu_1239_p1);
    sensitive << ( reg_568 );

    SC_METHOD(thread_tmp_41_fu_1272_p1);
    sensitive << ( offset_tail_load_reg_1720 );

    SC_METHOD(thread_tmp_43_fu_1163_p1);
    sensitive << ( reg_568 );

    SC_METHOD(thread_tmp_44_fu_1196_p1);
    sensitive << ( reg_572 );

    SC_METHOD(thread_tmp_46_fu_1288_p1);
    sensitive << ( reg_568 );

    SC_METHOD(thread_tmp_48_fu_1087_p1);
    sensitive << ( reg_568 );

    SC_METHOD(thread_tmp_49_fu_1120_p1);
    sensitive << ( reg_572 );

    SC_METHOD(thread_tmp_4_cast_fu_617_p3);
    sensitive << ( tmp_fu_608_p4 );

    SC_METHOD(thread_tmp_4_fu_658_p1);
    sensitive << ( i_reg_495 );

    SC_METHOD(thread_tmp_5_fu_643_p1);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_5_fu_643_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_cast_fu_639_p1 );
    sensitive << ( tmp_5_fu_643_p1 );

    SC_METHOD(thread_tmp_6_fu_850_p0);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tmp_6_fu_850_p2);
    sensitive << ( now_reg_1575 );
    sensitive << ( tmp_6_fu_850_p0 );

    SC_METHOD(thread_tmp_7_fu_768_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( offset_head_reg_517 );

    SC_METHOD(thread_tmp_8_fu_687_p1);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_8_fu_687_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_1_cast_fu_683_p1 );
    sensitive << ( tmp_8_fu_687_p1 );

    SC_METHOD(thread_tmp_9_fu_698_p1);
    sensitive << ( i_1_reg_506 );

    SC_METHOD(thread_tmp_cast_fu_713_p3);
    sensitive << ( tmp_26_fu_709_p1 );

    SC_METHOD(thread_tmp_fu_608_p4);
    sensitive << ( status_6_reg_1498 );

    SC_METHOD(thread_tmp_s_fu_1433_p1);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_tmp_s_fu_1433_p2);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( i_3_cast_fu_1429_p1 );
    sensitive << ( tmp_s_fu_1433_p1 );

    SC_METHOD(thread_update0_fu_1057_p2);
    sensitive << ( tmp_21_reg_1689 );
    sensitive << ( tmp_22_fu_1051_p2 );

    SC_METHOD(thread_update1_fu_1068_p2);
    sensitive << ( tmp_24_reg_1700 );
    sensitive << ( tmp_25_fu_1062_p2 );

    SC_METHOD(thread_weight0_HTA_heap_loa_fu_1030_p3);
    sensitive << ( weight0_reg_1667 );
    sensitive << ( tmp_21_fu_1016_p2 );
    sensitive << ( HTA_heap_0_q0 );

    SC_METHOD(thread_weight0_fu_949_p2);
    sensitive << ( map_r_q0 );
    sensitive << ( now_dis_reg_1606 );

    SC_METHOD(thread_weight1_1_fu_1037_p3);
    sensitive << ( weight1_reg_1673 );
    sensitive << ( tmp_24_fu_1025_p2 );
    sensitive << ( HTA_heap_1_q0 );

    SC_METHOD(thread_weight1_fu_954_p2);
    sensitive << ( map_r_q1 );
    sensitive << ( now_dis_reg_1606 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( alloc_HTA_addr_ap_vld );
    sensitive << ( alloc_KWTA_addr_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( brmerge_demorgan_fu_1073_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( update0_fu_1057_p2 );
    sensitive << ( update1_fu_1068_p2 );
    sensitive << ( ap_block_state1_io );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_7_fu_768_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_10_fu_862_p2 );
    sensitive << ( or_cond_fu_943_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_s_fu_1433_p2 );
    sensitive << ( tmp_5_fu_643_p2 );
    sensitive << ( tmp_8_fu_687_p2 );
    sensitive << ( ap_block_state6_io );
    sensitive << ( ap_block_state17_io );
    sensitive << ( ap_block_state21_io );
    sensitive << ( ap_block_state28_io );
    sensitive << ( ap_block_state33_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000000001";
    guard_variable_for_H = "0";
    N_2 = "0000000000000000000000000000000";
    ap_reg_ioackin_alloc_HTA_cmd_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_alloc_HTA_size_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_alloc_HTA_free_target_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_alloc_KWTA_cmd_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_alloc_KWTA_size_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_alloc_KWTA_free_target_ap_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "HLS_SPFA_KWTA_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, map_r_address0, "(port)map_r_address0");
    sc_trace(mVcdFile, map_r_ce0, "(port)map_r_ce0");
    sc_trace(mVcdFile, map_r_q0, "(port)map_r_q0");
    sc_trace(mVcdFile, map_r_address1, "(port)map_r_address1");
    sc_trace(mVcdFile, map_r_ce1, "(port)map_r_ce1");
    sc_trace(mVcdFile, map_r_q1, "(port)map_r_q1");
    sc_trace(mVcdFile, dis_output_address0, "(port)dis_output_address0");
    sc_trace(mVcdFile, dis_output_ce0, "(port)dis_output_ce0");
    sc_trace(mVcdFile, dis_output_we0, "(port)dis_output_we0");
    sc_trace(mVcdFile, dis_output_d0, "(port)dis_output_d0");
    sc_trace(mVcdFile, alloc_HTA_size, "(port)alloc_HTA_size");
    sc_trace(mVcdFile, alloc_HTA_size_ap_vld, "(port)alloc_HTA_size_ap_vld");
    sc_trace(mVcdFile, alloc_HTA_size_ap_ack, "(port)alloc_HTA_size_ap_ack");
    sc_trace(mVcdFile, alloc_HTA_free_target, "(port)alloc_HTA_free_target");
    sc_trace(mVcdFile, alloc_HTA_free_target_ap_vld, "(port)alloc_HTA_free_target_ap_vld");
    sc_trace(mVcdFile, alloc_HTA_free_target_ap_ack, "(port)alloc_HTA_free_target_ap_ack");
    sc_trace(mVcdFile, alloc_HTA_addr, "(port)alloc_HTA_addr");
    sc_trace(mVcdFile, alloc_HTA_addr_ap_vld, "(port)alloc_HTA_addr_ap_vld");
    sc_trace(mVcdFile, alloc_HTA_addr_ap_ack, "(port)alloc_HTA_addr_ap_ack");
    sc_trace(mVcdFile, alloc_HTA_cmd, "(port)alloc_HTA_cmd");
    sc_trace(mVcdFile, alloc_HTA_cmd_ap_vld, "(port)alloc_HTA_cmd_ap_vld");
    sc_trace(mVcdFile, alloc_HTA_cmd_ap_ack, "(port)alloc_HTA_cmd_ap_ack");
    sc_trace(mVcdFile, alloc_KWTA_size, "(port)alloc_KWTA_size");
    sc_trace(mVcdFile, alloc_KWTA_size_ap_vld, "(port)alloc_KWTA_size_ap_vld");
    sc_trace(mVcdFile, alloc_KWTA_size_ap_ack, "(port)alloc_KWTA_size_ap_ack");
    sc_trace(mVcdFile, alloc_KWTA_free_target, "(port)alloc_KWTA_free_target");
    sc_trace(mVcdFile, alloc_KWTA_free_target_ap_vld, "(port)alloc_KWTA_free_target_ap_vld");
    sc_trace(mVcdFile, alloc_KWTA_free_target_ap_ack, "(port)alloc_KWTA_free_target_ap_ack");
    sc_trace(mVcdFile, alloc_KWTA_addr, "(port)alloc_KWTA_addr");
    sc_trace(mVcdFile, alloc_KWTA_addr_ap_vld, "(port)alloc_KWTA_addr_ap_vld");
    sc_trace(mVcdFile, alloc_KWTA_addr_ap_ack, "(port)alloc_KWTA_addr_ap_ack");
    sc_trace(mVcdFile, alloc_KWTA_cmd, "(port)alloc_KWTA_cmd");
    sc_trace(mVcdFile, alloc_KWTA_cmd_ap_vld, "(port)alloc_KWTA_cmd_ap_vld");
    sc_trace(mVcdFile, alloc_KWTA_cmd_ap_ack, "(port)alloc_KWTA_cmd_ap_ack");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, guard_variable_for_H, "guard_variable_for_H");
    sc_trace(mVcdFile, N_2, "N_2");
    sc_trace(mVcdFile, alloc_HTA_size_blk_n, "alloc_HTA_size_blk_n");
    sc_trace(mVcdFile, alloc_HTA_free_target_blk_n, "alloc_HTA_free_target_blk_n");
    sc_trace(mVcdFile, alloc_HTA_addr_blk_n, "alloc_HTA_addr_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, alloc_HTA_cmd_blk_n, "alloc_HTA_cmd_blk_n");
    sc_trace(mVcdFile, alloc_KWTA_size_blk_n, "alloc_KWTA_size_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, brmerge_demorgan_fu_1073_p2, "brmerge_demorgan_fu_1073_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, alloc_KWTA_free_target_blk_n, "alloc_KWTA_free_target_blk_n");
    sc_trace(mVcdFile, alloc_KWTA_addr_blk_n, "alloc_KWTA_addr_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, alloc_KWTA_cmd_blk_n, "alloc_KWTA_cmd_blk_n");
    sc_trace(mVcdFile, reg_568, "reg_568");
    sc_trace(mVcdFile, reg_572, "reg_572");
    sc_trace(mVcdFile, ap_sig_ioackin_alloc_KWTA_cmd_ap_ack, "ap_sig_ioackin_alloc_KWTA_cmd_ap_ack");
    sc_trace(mVcdFile, ap_sig_ioackin_alloc_KWTA_size_ap_ack, "ap_sig_ioackin_alloc_KWTA_size_ap_ack");
    sc_trace(mVcdFile, ap_sig_ioackin_alloc_KWTA_free_target_ap_ack, "ap_sig_ioackin_alloc_KWTA_free_target_ap_ack");
    sc_trace(mVcdFile, ap_block_state16_io, "ap_block_state16_io");
    sc_trace(mVcdFile, update0_fu_1057_p2, "update0_fu_1057_p2");
    sc_trace(mVcdFile, update1_fu_1068_p2, "update1_fu_1068_p2");
    sc_trace(mVcdFile, ap_sig_ioackin_alloc_HTA_cmd_ap_ack, "ap_sig_ioackin_alloc_HTA_cmd_ap_ack");
    sc_trace(mVcdFile, ap_sig_ioackin_alloc_HTA_size_ap_ack, "ap_sig_ioackin_alloc_HTA_size_ap_ack");
    sc_trace(mVcdFile, ap_sig_ioackin_alloc_HTA_free_target_ap_ack, "ap_sig_ioackin_alloc_HTA_free_target_ap_ack");
    sc_trace(mVcdFile, ap_block_state1_io, "ap_block_state1_io");
    sc_trace(mVcdFile, status_6_reg_1498, "status_6_reg_1498");
    sc_trace(mVcdFile, tmp_4_cast_fu_617_p3, "tmp_4_cast_fu_617_p3");
    sc_trace(mVcdFile, tmp_4_cast_reg_1504, "tmp_4_cast_reg_1504");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, HTA_heap_0_addr_reg_1513, "HTA_heap_0_addr_reg_1513");
    sc_trace(mVcdFile, i_4_fu_648_p2, "i_4_fu_648_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_5_fu_692_p2, "i_5_fu_692_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, offset_head_3_fu_703_p2, "offset_head_3_fu_703_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_27_fu_774_p1, "tmp_27_fu_774_p1");
    sc_trace(mVcdFile, tmp_27_reg_1555, "tmp_27_reg_1555");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_7_fu_768_p2, "tmp_7_fu_768_p2");
    sc_trace(mVcdFile, tmp_28_fu_800_p1, "tmp_28_fu_800_p1");
    sc_trace(mVcdFile, tmp_28_reg_1570, "tmp_28_reg_1570");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, now_fu_804_p3, "now_fu_804_p3");
    sc_trace(mVcdFile, now_reg_1575, "now_reg_1575");
    sc_trace(mVcdFile, tmp_32_fu_816_p1, "tmp_32_fu_816_p1");
    sc_trace(mVcdFile, tmp_32_reg_1581, "tmp_32_reg_1581");
    sc_trace(mVcdFile, newIndex7_reg_1586, "newIndex7_reg_1586");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_3_fu_840_p1, "tmp_3_fu_840_p1");
    sc_trace(mVcdFile, tmp_3_reg_1601, "tmp_3_reg_1601");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, now_dis_fu_843_p3, "now_dis_fu_843_p3");
    sc_trace(mVcdFile, now_dis_reg_1606, "now_dis_reg_1606");
    sc_trace(mVcdFile, tmp_6_fu_850_p2, "tmp_6_fu_850_p2");
    sc_trace(mVcdFile, tmp_6_reg_1612, "tmp_6_reg_1612");
    sc_trace(mVcdFile, i_7_fu_868_p2, "i_7_fu_868_p2");
    sc_trace(mVcdFile, i_7_reg_1621, "i_7_reg_1621");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_35_fu_874_p1, "tmp_35_fu_874_p1");
    sc_trace(mVcdFile, tmp_35_reg_1626, "tmp_35_reg_1626");
    sc_trace(mVcdFile, tmp_10_fu_862_p2, "tmp_10_fu_862_p2");
    sc_trace(mVcdFile, i0_fu_878_p2, "i0_fu_878_p2");
    sc_trace(mVcdFile, i0_reg_1631, "i0_reg_1631");
    sc_trace(mVcdFile, i1_fu_884_p2, "i1_fu_884_p2");
    sc_trace(mVcdFile, i1_reg_1637, "i1_reg_1637");
    sc_trace(mVcdFile, or_cond_fu_943_p2, "or_cond_fu_943_p2");
    sc_trace(mVcdFile, or_cond_reg_1663, "or_cond_reg_1663");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, weight0_fu_949_p2, "weight0_fu_949_p2");
    sc_trace(mVcdFile, weight0_reg_1667, "weight0_reg_1667");
    sc_trace(mVcdFile, weight1_fu_954_p2, "weight1_fu_954_p2");
    sc_trace(mVcdFile, weight1_reg_1673, "weight1_reg_1673");
    sc_trace(mVcdFile, HTA_heap_0_addr_7_reg_1679, "HTA_heap_0_addr_7_reg_1679");
    sc_trace(mVcdFile, HTA_heap_1_addr_6_reg_1684, "HTA_heap_1_addr_6_reg_1684");
    sc_trace(mVcdFile, tmp_21_fu_1016_p2, "tmp_21_fu_1016_p2");
    sc_trace(mVcdFile, tmp_21_reg_1689, "tmp_21_reg_1689");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, in_list_addr_3_reg_1694, "in_list_addr_3_reg_1694");
    sc_trace(mVcdFile, tmp_24_fu_1025_p2, "tmp_24_fu_1025_p2");
    sc_trace(mVcdFile, tmp_24_reg_1700, "tmp_24_reg_1700");
    sc_trace(mVcdFile, in_list_addr_4_reg_1705, "in_list_addr_4_reg_1705");
    sc_trace(mVcdFile, weight0_HTA_heap_loa_fu_1030_p3, "weight0_HTA_heap_loa_fu_1030_p3");
    sc_trace(mVcdFile, weight0_HTA_heap_loa_reg_1710, "weight0_HTA_heap_loa_reg_1710");
    sc_trace(mVcdFile, weight1_1_fu_1037_p3, "weight1_1_fu_1037_p3");
    sc_trace(mVcdFile, weight1_1_reg_1715, "weight1_1_reg_1715");
    sc_trace(mVcdFile, offset_tail_load_reg_1720, "offset_tail_load_reg_1720");
    sc_trace(mVcdFile, tmp_38_fu_1047_p1, "tmp_38_fu_1047_p1");
    sc_trace(mVcdFile, tmp_38_reg_1725, "tmp_38_reg_1725");
    sc_trace(mVcdFile, brmerge_demorgan_reg_1736, "brmerge_demorgan_reg_1736");
    sc_trace(mVcdFile, HTA_heap_0_addr_13_reg_1740, "HTA_heap_0_addr_13_reg_1740");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, newIndex19_reg_1748, "newIndex19_reg_1748");
    sc_trace(mVcdFile, HTA_heap_0_addr_10_reg_1753, "HTA_heap_0_addr_10_reg_1753");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, newIndex21_reg_1761, "newIndex21_reg_1761");
    sc_trace(mVcdFile, tmp_32_cast_fu_1243_p3, "tmp_32_cast_fu_1243_p3");
    sc_trace(mVcdFile, tmp_32_cast_reg_1766, "tmp_32_cast_reg_1766");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, HTA_heap_0_addr_8_reg_1771, "HTA_heap_0_addr_8_reg_1771");
    sc_trace(mVcdFile, newIndex17_reg_1779, "newIndex17_reg_1779");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, offset_next_fu_1366_p3, "offset_next_fu_1366_p3");
    sc_trace(mVcdFile, offset_next_reg_1784, "offset_next_reg_1784");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, free_target_assign_fu_1421_p3, "free_target_assign_fu_1421_p3");
    sc_trace(mVcdFile, free_target_assign_reg_1789, "free_target_assign_reg_1789");
    sc_trace(mVcdFile, i_6_fu_1438_p2, "i_6_fu_1438_p2");
    sc_trace(mVcdFile, i_6_reg_1797, "i_6_reg_1797");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, tmp_s_fu_1433_p2, "tmp_s_fu_1433_p2");
    sc_trace(mVcdFile, HTA_heap_0_address0, "HTA_heap_0_address0");
    sc_trace(mVcdFile, HTA_heap_0_ce0, "HTA_heap_0_ce0");
    sc_trace(mVcdFile, HTA_heap_0_we0, "HTA_heap_0_we0");
    sc_trace(mVcdFile, HTA_heap_0_d0, "HTA_heap_0_d0");
    sc_trace(mVcdFile, HTA_heap_0_q0, "HTA_heap_0_q0");
    sc_trace(mVcdFile, HTA_heap_1_address0, "HTA_heap_1_address0");
    sc_trace(mVcdFile, HTA_heap_1_ce0, "HTA_heap_1_ce0");
    sc_trace(mVcdFile, HTA_heap_1_we0, "HTA_heap_1_we0");
    sc_trace(mVcdFile, HTA_heap_1_d0, "HTA_heap_1_d0");
    sc_trace(mVcdFile, HTA_heap_1_q0, "HTA_heap_1_q0");
    sc_trace(mVcdFile, in_list_address0, "in_list_address0");
    sc_trace(mVcdFile, in_list_ce0, "in_list_ce0");
    sc_trace(mVcdFile, in_list_we0, "in_list_we0");
    sc_trace(mVcdFile, in_list_d0, "in_list_d0");
    sc_trace(mVcdFile, in_list_q0, "in_list_q0");
    sc_trace(mVcdFile, in_list_address1, "in_list_address1");
    sc_trace(mVcdFile, in_list_ce1, "in_list_ce1");
    sc_trace(mVcdFile, in_list_we1, "in_list_we1");
    sc_trace(mVcdFile, in_list_q1, "in_list_q1");
    sc_trace(mVcdFile, i_reg_495, "i_reg_495");
    sc_trace(mVcdFile, tmp_5_fu_643_p2, "tmp_5_fu_643_p2");
    sc_trace(mVcdFile, i_1_reg_506, "i_1_reg_506");
    sc_trace(mVcdFile, tmp_8_fu_687_p2, "tmp_8_fu_687_p2");
    sc_trace(mVcdFile, offset_head_reg_517, "offset_head_reg_517");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, i_2_reg_527, "i_2_reg_527");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, i_3_reg_538, "i_3_reg_538");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, newIndex2_fu_634_p1, "newIndex2_fu_634_p1");
    sc_trace(mVcdFile, newIndex3_cast_fu_677_p1, "newIndex3_cast_fu_677_p1");
    sc_trace(mVcdFile, tmp_9_fu_698_p1, "tmp_9_fu_698_p1");
    sc_trace(mVcdFile, newIndex4_cast_fu_737_p1, "newIndex4_cast_fu_737_p1");
    sc_trace(mVcdFile, newIndex5_cast_fu_758_p1, "newIndex5_cast_fu_758_p1");
    sc_trace(mVcdFile, newIndex6_cast_fu_794_p1, "newIndex6_cast_fu_794_p1");
    sc_trace(mVcdFile, newIndex7_cast_fu_835_p1, "newIndex7_cast_fu_835_p1");
    sc_trace(mVcdFile, tmp_13_fu_895_p1, "tmp_13_fu_895_p1");
    sc_trace(mVcdFile, tmp_15_fu_905_p1, "tmp_15_fu_905_p1");
    sc_trace(mVcdFile, newIndex8_cast_fu_925_p1, "newIndex8_cast_fu_925_p1");
    sc_trace(mVcdFile, newIndex9_cast_fu_981_p1, "newIndex9_cast_fu_981_p1");
    sc_trace(mVcdFile, newIndex10_cast_fu_1007_p1, "newIndex10_cast_fu_1007_p1");
    sc_trace(mVcdFile, tmp_20_fu_1012_p1, "tmp_20_fu_1012_p1");
    sc_trace(mVcdFile, tmp_23_fu_1021_p1, "tmp_23_fu_1021_p1");
    sc_trace(mVcdFile, newIndex18_cast_fu_1115_p1, "newIndex18_cast_fu_1115_p1");
    sc_trace(mVcdFile, newIndex20_cast_fu_1124_p1, "newIndex20_cast_fu_1124_p1");
    sc_trace(mVcdFile, newIndex19_cast_fu_1151_p1, "newIndex19_cast_fu_1151_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, newIndex13_cast_fu_1191_p1, "newIndex13_cast_fu_1191_p1");
    sc_trace(mVcdFile, newIndex14_cast_fu_1200_p1, "newIndex14_cast_fu_1200_p1");
    sc_trace(mVcdFile, newIndex21_cast_fu_1227_p1, "newIndex21_cast_fu_1227_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, newIndex11_cast_fu_1267_p1, "newIndex11_cast_fu_1267_p1");
    sc_trace(mVcdFile, newIndex12_cast_fu_1275_p1, "newIndex12_cast_fu_1275_p1");
    sc_trace(mVcdFile, newIndex15_cast_fu_1316_p1, "newIndex15_cast_fu_1316_p1");
    sc_trace(mVcdFile, newIndex16_cast_fu_1336_p1, "newIndex16_cast_fu_1336_p1");
    sc_trace(mVcdFile, newIndex17_cast_fu_1362_p1, "newIndex17_cast_fu_1362_p1");
    sc_trace(mVcdFile, newIndex_cast_fu_1463_p1, "newIndex_cast_fu_1463_p1");
    sc_trace(mVcdFile, tmp_11_fu_1469_p1, "tmp_11_fu_1469_p1");
    sc_trace(mVcdFile, guard_variable_for_H_1_load_fu_576_p1, "guard_variable_for_H_1_load_fu_576_p1");
    sc_trace(mVcdFile, offset_tail_fu_124, "offset_tail_fu_124");
    sc_trace(mVcdFile, offset_new_node1_fu_1079_p2, "offset_new_node1_fu_1079_p2");
    sc_trace(mVcdFile, offset_new_node0_2_fu_1155_p2, "offset_new_node0_2_fu_1155_p2");
    sc_trace(mVcdFile, offset_new_node1_1_fu_1281_p2, "offset_new_node1_1_fu_1281_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_alloc_HTA_cmd_ap_ack, "ap_reg_ioackin_alloc_HTA_cmd_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_alloc_HTA_size_ap_ack, "ap_reg_ioackin_alloc_HTA_size_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_alloc_HTA_free_target_ap_ack, "ap_reg_ioackin_alloc_HTA_free_target_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_alloc_KWTA_cmd_ap_ack, "ap_reg_ioackin_alloc_KWTA_cmd_ap_ack");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_state17_io, "ap_block_state17_io");
    sc_trace(mVcdFile, ap_block_state21_io, "ap_block_state21_io");
    sc_trace(mVcdFile, ap_block_state28_io, "ap_block_state28_io");
    sc_trace(mVcdFile, ap_block_state33_io, "ap_block_state33_io");
    sc_trace(mVcdFile, ap_reg_ioackin_alloc_KWTA_size_ap_ack, "ap_reg_ioackin_alloc_KWTA_size_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_alloc_KWTA_free_target_ap_ack, "ap_reg_ioackin_alloc_KWTA_free_target_ap_ack");
    sc_trace(mVcdFile, tmp_4_fu_658_p1, "tmp_4_fu_658_p1");
    sc_trace(mVcdFile, tmp_49_fu_1120_p1, "tmp_49_fu_1120_p1");
    sc_trace(mVcdFile, tmp_44_fu_1196_p1, "tmp_44_fu_1196_p1");
    sc_trace(mVcdFile, tmp_41_fu_1272_p1, "tmp_41_fu_1272_p1");
    sc_trace(mVcdFile, offset_new_node0_fu_1231_p2, "offset_new_node0_fu_1231_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, grp_fu_553_p2, "grp_fu_553_p2");
    sc_trace(mVcdFile, tmp_1_i_fu_580_p0, "tmp_1_i_fu_580_p0");
    sc_trace(mVcdFile, tmp_1_i_fu_580_p2, "tmp_1_i_fu_580_p2");
    sc_trace(mVcdFile, tmp_fu_608_p4, "tmp_fu_608_p4");
    sc_trace(mVcdFile, newIndex1_fu_625_p4, "newIndex1_fu_625_p4");
    sc_trace(mVcdFile, i_cast_fu_639_p1, "i_cast_fu_639_p1");
    sc_trace(mVcdFile, tmp_5_fu_643_p1, "tmp_5_fu_643_p1");
    sc_trace(mVcdFile, tmp_1_fu_654_p1, "tmp_1_fu_654_p1");
    sc_trace(mVcdFile, local_dis_0_sum1_fu_662_p2, "local_dis_0_sum1_fu_662_p2");
    sc_trace(mVcdFile, newIndex3_fu_667_p4, "newIndex3_fu_667_p4");
    sc_trace(mVcdFile, i_1_cast_fu_683_p1, "i_1_cast_fu_683_p1");
    sc_trace(mVcdFile, tmp_8_fu_687_p1, "tmp_8_fu_687_p1");
    sc_trace(mVcdFile, tmp_26_fu_709_p1, "tmp_26_fu_709_p1");
    sc_trace(mVcdFile, tmp_cast_fu_713_p3, "tmp_cast_fu_713_p3");
    sc_trace(mVcdFile, KWTA_heap_0_sum_fu_721_p2, "KWTA_heap_0_sum_fu_721_p2");
    sc_trace(mVcdFile, newIndex4_fu_727_p4, "newIndex4_fu_727_p4");
    sc_trace(mVcdFile, p_sum_fu_742_p2, "p_sum_fu_742_p2");
    sc_trace(mVcdFile, newIndex5_fu_748_p4, "newIndex5_fu_748_p4");
    sc_trace(mVcdFile, KWTA_heap_0_sum1_fu_778_p2, "KWTA_heap_0_sum1_fu_778_p2");
    sc_trace(mVcdFile, newIndex6_fu_784_p4, "newIndex6_fu_784_p4");
    sc_trace(mVcdFile, tmp_31_fu_812_p1, "tmp_31_fu_812_p1");
    sc_trace(mVcdFile, local_dis_0_sum2_fu_820_p2, "local_dis_0_sum2_fu_820_p2");
    sc_trace(mVcdFile, tmp_6_fu_850_p0, "tmp_6_fu_850_p0");
    sc_trace(mVcdFile, extLd_fu_858_p1, "extLd_fu_858_p1");
    sc_trace(mVcdFile, tmp_12_fu_890_p2, "tmp_12_fu_890_p2");
    sc_trace(mVcdFile, tmp_14_fu_900_p2, "tmp_14_fu_900_p2");
    sc_trace(mVcdFile, p_sum3_fu_910_p2, "p_sum3_fu_910_p2");
    sc_trace(mVcdFile, newIndex8_fu_915_p4, "newIndex8_fu_915_p4");
    sc_trace(mVcdFile, tmp_16_fu_931_p2, "tmp_16_fu_931_p2");
    sc_trace(mVcdFile, tmp_17_fu_937_p2, "tmp_17_fu_937_p2");
    sc_trace(mVcdFile, tmp_23_cast_fu_959_p3, "tmp_23_cast_fu_959_p3");
    sc_trace(mVcdFile, local_dis_0_sum6_fu_966_p2, "local_dis_0_sum6_fu_966_p2");
    sc_trace(mVcdFile, newIndex9_fu_971_p4, "newIndex9_fu_971_p4");
    sc_trace(mVcdFile, tmp_26_cast_fu_986_p2, "tmp_26_cast_fu_986_p2");
    sc_trace(mVcdFile, local_dis_0_sum7_fu_992_p2, "local_dis_0_sum7_fu_992_p2");
    sc_trace(mVcdFile, newIndex10_fu_997_p4, "newIndex10_fu_997_p4");
    sc_trace(mVcdFile, tmp_22_fu_1051_p2, "tmp_22_fu_1051_p2");
    sc_trace(mVcdFile, tmp_25_fu_1062_p2, "tmp_25_fu_1062_p2");
    sc_trace(mVcdFile, tmp_48_fu_1087_p1, "tmp_48_fu_1087_p1");
    sc_trace(mVcdFile, tmp_35_cast_fu_1091_p3, "tmp_35_cast_fu_1091_p3");
    sc_trace(mVcdFile, KWTA_heap_0_sum5_fu_1099_p2, "KWTA_heap_0_sum5_fu_1099_p2");
    sc_trace(mVcdFile, newIndex18_fu_1105_p4, "newIndex18_fu_1105_p4");
    sc_trace(mVcdFile, grp_fu_558_p4, "grp_fu_558_p4");
    sc_trace(mVcdFile, p_sum8_fu_1130_p2, "p_sum8_fu_1130_p2");
    sc_trace(mVcdFile, tmp_43_fu_1163_p1, "tmp_43_fu_1163_p1");
    sc_trace(mVcdFile, tmp_34_cast_fu_1167_p3, "tmp_34_cast_fu_1167_p3");
    sc_trace(mVcdFile, KWTA_heap_0_sum4_fu_1175_p2, "KWTA_heap_0_sum4_fu_1175_p2");
    sc_trace(mVcdFile, newIndex13_fu_1181_p4, "newIndex13_fu_1181_p4");
    sc_trace(mVcdFile, p_sum6_fu_1206_p2, "p_sum6_fu_1206_p2");
    sc_trace(mVcdFile, tmp_40_fu_1239_p1, "tmp_40_fu_1239_p1");
    sc_trace(mVcdFile, KWTA_heap_0_sum2_fu_1251_p2, "KWTA_heap_0_sum2_fu_1251_p2");
    sc_trace(mVcdFile, newIndex11_fu_1257_p4, "newIndex11_fu_1257_p4");
    sc_trace(mVcdFile, tmp_46_fu_1288_p1, "tmp_46_fu_1288_p1");
    sc_trace(mVcdFile, tmp_33_cast_fu_1292_p3, "tmp_33_cast_fu_1292_p3");
    sc_trace(mVcdFile, KWTA_heap_0_sum3_fu_1300_p2, "KWTA_heap_0_sum3_fu_1300_p2");
    sc_trace(mVcdFile, newIndex15_fu_1306_p4, "newIndex15_fu_1306_p4");
    sc_trace(mVcdFile, p_sum2_fu_1321_p2, "p_sum2_fu_1321_p2");
    sc_trace(mVcdFile, newIndex16_fu_1326_p4, "newIndex16_fu_1326_p4");
    sc_trace(mVcdFile, p_sum4_fu_1341_p2, "p_sum4_fu_1341_p2");
    sc_trace(mVcdFile, p_neg_fu_1381_p2, "p_neg_fu_1381_p2");
    sc_trace(mVcdFile, p_lshr_fu_1387_p4, "p_lshr_fu_1387_p4");
    sc_trace(mVcdFile, tmp_18_fu_1397_p1, "tmp_18_fu_1397_p1");
    sc_trace(mVcdFile, p_lshr_f_fu_1407_p4, "p_lshr_f_fu_1407_p4");
    sc_trace(mVcdFile, tmp_37_fu_1373_p3, "tmp_37_fu_1373_p3");
    sc_trace(mVcdFile, p_neg_t_fu_1401_p2, "p_neg_t_fu_1401_p2");
    sc_trace(mVcdFile, tmp_19_fu_1417_p1, "tmp_19_fu_1417_p1");
    sc_trace(mVcdFile, i_3_cast_fu_1429_p1, "i_3_cast_fu_1429_p1");
    sc_trace(mVcdFile, tmp_s_fu_1433_p1, "tmp_s_fu_1433_p1");
    sc_trace(mVcdFile, tmp_33_fu_1444_p1, "tmp_33_fu_1444_p1");
    sc_trace(mVcdFile, local_dis_0_sum_fu_1448_p2, "local_dis_0_sum_fu_1448_p2");
    sc_trace(mVcdFile, newIndex_fu_1453_p4, "newIndex_fu_1453_p4");
    sc_trace(mVcdFile, tmp_34_fu_1474_p1, "tmp_34_fu_1474_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("HLS_SPFA_KWTA.hdltvin.dat");
    mHdltvoutHandle.open("HLS_SPFA_KWTA.hdltvout.dat");
}

HLS_SPFA_KWTA::~HLS_SPFA_KWTA() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete HTA_heap_0_U;
    delete HTA_heap_1_U;
    delete in_list_U;
}

void HLS_SPFA_KWTA::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv1_1;
}

void HLS_SPFA_KWTA::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_alloc_HTA_cmd_ap_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            if (!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state1_io.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
                ap_reg_ioackin_alloc_HTA_cmd_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, alloc_HTA_cmd_ap_ack.read()))) {
                ap_reg_ioackin_alloc_HTA_cmd_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_alloc_HTA_free_target_ap_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            if (!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state1_io.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
                ap_reg_ioackin_alloc_HTA_free_target_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, alloc_HTA_free_target_ap_ack.read()))) {
                ap_reg_ioackin_alloc_HTA_free_target_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_alloc_HTA_size_ap_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            if (!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state1_io.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
                ap_reg_ioackin_alloc_HTA_size_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, alloc_HTA_size_ap_ack.read()))) {
                ap_reg_ioackin_alloc_HTA_size_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_alloc_KWTA_cmd_ap_ack = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state6_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
              esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state17_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state28_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state33_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())))) {
            ap_reg_ioackin_alloc_KWTA_cmd_ap_ack = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_cmd_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                     esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_cmd_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_cmd_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_cmd_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_cmd_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_cmd_ap_ack.read())))) {
            ap_reg_ioackin_alloc_KWTA_cmd_ap_ack = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_alloc_KWTA_free_target_ap_ack = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state6_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
              esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state17_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state28_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state33_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())))) {
            ap_reg_ioackin_alloc_KWTA_free_target_ap_ack = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_free_target_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                     esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_free_target_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_free_target_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_free_target_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_free_target_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_free_target_ap_ack.read())))) {
            ap_reg_ioackin_alloc_KWTA_free_target_ap_ack = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_alloc_KWTA_size_ap_ack = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state6_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
              esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state17_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state28_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state33_io.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())))) {
            ap_reg_ioackin_alloc_KWTA_size_ap_ack = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_size_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                     esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_size_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_size_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_size_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_size_ap_ack.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_size_ap_ack.read())))) {
            ap_reg_ioackin_alloc_KWTA_size_ap_ack = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_1))) {
        i_1_reg_506 = i_5_fu_692_p2.read();
    } else if ((esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        i_1_reg_506 = ap_const_lv31_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        i_2_reg_527 = i_7_reg_1621.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_2_reg_527 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(tmp_7_fu_768_p2.read(), ap_const_lv1_1))) {
        i_3_reg_538 = ap_const_lv31_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        i_3_reg_538 = i_6_reg_1797.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_1))) {
        i_reg_495 = i_4_fu_648_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_495 = ap_const_lv31_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        offset_head_reg_517 = offset_next_reg_1784.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        offset_head_reg_517 = offset_head_3_fu_703_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        offset_tail_fu_124 = offset_new_node1_1_fu_1281_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        offset_tail_fu_124 = offset_new_node0_2_fu_1155_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        offset_tail_fu_124 = offset_new_node1_fu_1079_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        offset_tail_fu_124 = offset_head_3_fu_703_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        HTA_heap_0_addr_10_reg_1753 =  (sc_lv<11>) (newIndex13_cast_fu_1191_p1.read());
        newIndex21_reg_1761 = p_sum6_fu_1206_p2.read().range(12, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        HTA_heap_0_addr_13_reg_1740 =  (sc_lv<11>) (newIndex18_cast_fu_1115_p1.read());
        newIndex19_reg_1748 = p_sum8_fu_1130_p2.read().range(12, 1);
    }
    if ((esl_seteq<1,1,1>(or_cond_fu_943_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        HTA_heap_0_addr_7_reg_1679 =  (sc_lv<11>) (newIndex9_cast_fu_981_p1.read());
        HTA_heap_1_addr_6_reg_1684 =  (sc_lv<11>) (newIndex10_cast_fu_1007_p1.read());
        weight0_reg_1667 = weight0_fu_949_p2.read();
        weight1_reg_1673 = weight1_fu_954_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        HTA_heap_0_addr_8_reg_1771 =  (sc_lv<11>) (newIndex11_cast_fu_1267_p1.read());
        tmp_32_cast_reg_1766 = tmp_32_cast_fu_1243_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        HTA_heap_0_addr_reg_1513 =  (sc_lv<11>) (newIndex2_fu_634_p1.read());
        tmp_4_cast_reg_1504 = tmp_4_cast_fu_617_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state1_io.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_H_1_load_fu_576_p1.read()))) {
        N_2 = tmp_1_i_fu_580_p2.read().range(31, 1);
        guard_variable_for_H = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()))) {
        brmerge_demorgan_reg_1736 = brmerge_demorgan_fu_1073_p2.read();
        offset_tail_load_reg_1720 = offset_tail_fu_124.read();
        tmp_38_reg_1725 = tmp_38_fu_1047_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        free_target_assign_reg_1789 = free_target_assign_fu_1421_p3.read();
        offset_next_reg_1784 = offset_next_fu_1366_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(tmp_10_fu_862_p2.read(), ap_const_lv1_1))) {
        i0_reg_1631 = i0_fu_878_p2.read();
        i1_reg_1637 = i1_fu_884_p2.read();
        tmp_35_reg_1626 = tmp_35_fu_874_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        i_6_reg_1797 = i_6_fu_1438_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_7_reg_1621 = i_7_fu_868_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        in_list_addr_3_reg_1694 =  (sc_lv<8>) (tmp_20_fu_1012_p1.read());
        in_list_addr_4_reg_1705 =  (sc_lv<8>) (tmp_23_fu_1021_p1.read());
        tmp_21_reg_1689 = tmp_21_fu_1016_p2.read();
        tmp_24_reg_1700 = tmp_24_fu_1025_p2.read();
        weight0_HTA_heap_loa_reg_1710 = weight0_HTA_heap_loa_fu_1030_p3.read();
        weight1_1_reg_1715 = weight1_1_fu_1037_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        newIndex17_reg_1779 = p_sum4_fu_1341_p2.read().range(12, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        newIndex7_reg_1586 = local_dis_0_sum2_fu_820_p2.read().range(12, 1);
        now_reg_1575 = now_fu_804_p3.read();
        tmp_28_reg_1570 = tmp_28_fu_800_p1.read();
        tmp_32_reg_1581 = tmp_32_fu_816_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        now_dis_reg_1606 = now_dis_fu_843_p3.read();
        tmp_3_reg_1601 = tmp_3_fu_840_p1.read();
        tmp_6_reg_1612 = tmp_6_fu_850_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        or_cond_reg_1663 = or_cond_fu_943_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())))) {
        reg_568 = alloc_KWTA_addr.read();
    }
    if (((esl_seteq<1,1,1>(update0_fu_1057_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
  esl_seteq<1,1,1>(update1_fu_1068_p2.read(), ap_const_lv1_1)) || (esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
  esl_seteq<1,1,1>(update0_fu_1057_p2.read(), ap_const_lv1_1)))) {
        reg_572 = offset_tail_fu_124.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, alloc_HTA_addr_ap_vld.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        status_6_reg_1498 = alloc_HTA_addr.read();
    }
    if ((esl_seteq<1,1,1>(tmp_7_fu_768_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        tmp_27_reg_1555 = tmp_27_fu_774_p1.read();
    }
}

void HLS_SPFA_KWTA::thread_HTA_heap_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex_cast_fu_1463_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex15_cast_fu_1316_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        HTA_heap_0_address0 = HTA_heap_0_addr_8_reg_1771.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex12_cast_fu_1275_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        HTA_heap_0_address0 = HTA_heap_0_addr_10_reg_1753.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex14_cast_fu_1200_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        HTA_heap_0_address0 = HTA_heap_0_addr_13_reg_1740.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex20_cast_fu_1124_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        HTA_heap_0_address0 = HTA_heap_0_addr_7_reg_1679.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex9_cast_fu_981_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex8_cast_fu_925_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex7_cast_fu_835_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex6_cast_fu_794_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex4_cast_fu_737_p1.read());
    } else if ((esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        HTA_heap_0_address0 = HTA_heap_0_addr_reg_1513.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_658_p1.read()))) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex3_cast_fu_677_p1.read());
    } else {
        HTA_heap_0_address0 = "XXXXXXXXXXX";
    }
}

void HLS_SPFA_KWTA::thread_HTA_heap_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         (esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_658_p1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        HTA_heap_0_ce0 = ap_const_logic_1;
    } else {
        HTA_heap_0_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_HTA_heap_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        HTA_heap_0_d0 = offset_new_node0_fu_1231_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        HTA_heap_0_d0 = i0_reg_1631.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        HTA_heap_0_d0 = offset_new_node0_2_fu_1155_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        HTA_heap_0_d0 = i1_reg_1637.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        HTA_heap_0_d0 = offset_new_node1_fu_1079_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        HTA_heap_0_d0 = weight0_HTA_heap_loa_reg_1710.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())))) {
        HTA_heap_0_d0 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_658_p1.read()))) {
        HTA_heap_0_d0 = ap_const_lv32_2710;
    } else {
        HTA_heap_0_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_SPFA_KWTA::thread_HTA_heap_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         (esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_658_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_49_fu_1120_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_fu_1196_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_fu_1272_p1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        HTA_heap_0_we0 = ap_const_logic_1;
    } else {
        HTA_heap_0_we0 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_HTA_heap_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex_cast_fu_1463_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex17_cast_fu_1362_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex16_cast_fu_1336_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex12_cast_fu_1275_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex21_cast_fu_1227_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex14_cast_fu_1200_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex19_cast_fu_1151_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex20_cast_fu_1124_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        HTA_heap_1_address0 = HTA_heap_1_addr_6_reg_1684.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex10_cast_fu_1007_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex8_cast_fu_925_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex7_cast_fu_835_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex6_cast_fu_794_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex5_cast_fu_758_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex3_cast_fu_677_p1.read());
    } else {
        HTA_heap_1_address0 = "XXXXXXXXXXX";
    }
}

void HLS_SPFA_KWTA::thread_HTA_heap_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        HTA_heap_1_ce0 = ap_const_logic_1;
    } else {
        HTA_heap_1_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_HTA_heap_1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        HTA_heap_1_d0 = offset_new_node1_1_fu_1281_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        HTA_heap_1_d0 = offset_new_node0_fu_1231_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        HTA_heap_1_d0 = offset_new_node0_2_fu_1155_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        HTA_heap_1_d0 = offset_new_node1_fu_1079_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        HTA_heap_1_d0 = weight1_1_reg_1715.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        HTA_heap_1_d0 = ap_const_lv32_FFFFFFFF;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        HTA_heap_1_d0 = ap_const_lv32_2710;
    } else {
        HTA_heap_1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_SPFA_KWTA::thread_HTA_heap_1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1663.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, brmerge_demorgan_reg_1736.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_658_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_49_fu_1120_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_44_fu_1196_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_41_fu_1272_p1.read())))) {
        HTA_heap_1_we0 = ap_const_logic_1;
    } else {
        HTA_heap_1_we0 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_KWTA_heap_0_sum1_fu_778_p2() {
    KWTA_heap_0_sum1_fu_778_p2 = (!ap_const_lv13_7D0.is_01() || !tmp_27_fu_774_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D0) + sc_biguint<13>(tmp_27_fu_774_p1.read()));
}

void HLS_SPFA_KWTA::thread_KWTA_heap_0_sum2_fu_1251_p2() {
    KWTA_heap_0_sum2_fu_1251_p2 = (!ap_const_lv13_7D0.is_01() || !tmp_32_cast_fu_1243_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D0) + sc_biguint<13>(tmp_32_cast_fu_1243_p3.read()));
}

void HLS_SPFA_KWTA::thread_KWTA_heap_0_sum3_fu_1300_p2() {
    KWTA_heap_0_sum3_fu_1300_p2 = (!ap_const_lv13_7D0.is_01() || !tmp_33_cast_fu_1292_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D0) + sc_biguint<13>(tmp_33_cast_fu_1292_p3.read()));
}

void HLS_SPFA_KWTA::thread_KWTA_heap_0_sum4_fu_1175_p2() {
    KWTA_heap_0_sum4_fu_1175_p2 = (!ap_const_lv13_7D0.is_01() || !tmp_34_cast_fu_1167_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D0) + sc_biguint<13>(tmp_34_cast_fu_1167_p3.read()));
}

void HLS_SPFA_KWTA::thread_KWTA_heap_0_sum5_fu_1099_p2() {
    KWTA_heap_0_sum5_fu_1099_p2 = (!ap_const_lv13_7D0.is_01() || !tmp_35_cast_fu_1091_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D0) + sc_biguint<13>(tmp_35_cast_fu_1091_p3.read()));
}

void HLS_SPFA_KWTA::thread_KWTA_heap_0_sum_fu_721_p2() {
    KWTA_heap_0_sum_fu_721_p2 = (!ap_const_lv13_7D0.is_01() || !tmp_cast_fu_713_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D0) + sc_biguint<13>(tmp_cast_fu_713_p3.read()));
}

void HLS_SPFA_KWTA::thread_alloc_HTA_addr_ap_ack() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, alloc_HTA_addr_ap_vld.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        alloc_HTA_addr_ap_ack = ap_const_logic_1;
    } else {
        alloc_HTA_addr_ap_ack = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_alloc_HTA_addr_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        alloc_HTA_addr_blk_n = alloc_HTA_addr_ap_vld.read();
    } else {
        alloc_HTA_addr_blk_n = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_alloc_HTA_cmd() {
    alloc_HTA_cmd = ap_const_lv8_2;
}

void HLS_SPFA_KWTA::thread_alloc_HTA_cmd_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_HTA_cmd_ap_ack.read()))) {
        alloc_HTA_cmd_ap_vld = ap_const_logic_1;
    } else {
        alloc_HTA_cmd_ap_vld = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_alloc_HTA_cmd_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        alloc_HTA_cmd_blk_n = alloc_HTA_cmd_ap_ack.read();
    } else {
        alloc_HTA_cmd_blk_n = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_alloc_HTA_free_target() {
    alloc_HTA_free_target = ap_const_lv32_0;
}

void HLS_SPFA_KWTA::thread_alloc_HTA_free_target_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_HTA_free_target_ap_ack.read()))) {
        alloc_HTA_free_target_ap_vld = ap_const_logic_1;
    } else {
        alloc_HTA_free_target_ap_vld = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_alloc_HTA_free_target_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        alloc_HTA_free_target_blk_n = alloc_HTA_free_target_ap_ack.read();
    } else {
        alloc_HTA_free_target_blk_n = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_alloc_HTA_size() {
    alloc_HTA_size = n.read();
}

void HLS_SPFA_KWTA::thread_alloc_HTA_size_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_HTA_size_ap_ack.read()))) {
        alloc_HTA_size_ap_vld = ap_const_logic_1;
    } else {
        alloc_HTA_size_ap_vld = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_alloc_HTA_size_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        alloc_HTA_size_blk_n = alloc_HTA_size_ap_ack.read();
    } else {
        alloc_HTA_size_blk_n = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_addr_ap_ack() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())))) {
        alloc_KWTA_addr_ap_ack = ap_const_logic_1;
    } else {
        alloc_KWTA_addr_ap_ack = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_addr_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        alloc_KWTA_addr_blk_n = alloc_KWTA_addr_ap_vld.read();
    } else {
        alloc_KWTA_addr_blk_n = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_cmd() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        alloc_KWTA_cmd = ap_const_lv8_3;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        alloc_KWTA_cmd = ap_const_lv8_2;
    } else {
        alloc_KWTA_cmd =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_cmd_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_cmd_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_cmd_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_cmd_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_cmd_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_cmd_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_cmd_ap_ack.read())))) {
        alloc_KWTA_cmd_ap_vld = ap_const_logic_1;
    } else {
        alloc_KWTA_cmd_ap_vld = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_cmd_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        alloc_KWTA_cmd_blk_n = alloc_KWTA_cmd_ap_ack.read();
    } else {
        alloc_KWTA_cmd_blk_n = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_free_target() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        alloc_KWTA_free_target = free_target_assign_reg_1789.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        alloc_KWTA_free_target = ap_const_lv32_0;
    } else {
        alloc_KWTA_free_target =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_free_target_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_free_target_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_free_target_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_free_target_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_free_target_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_free_target_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_free_target_ap_ack.read())))) {
        alloc_KWTA_free_target_ap_vld = ap_const_logic_1;
    } else {
        alloc_KWTA_free_target_ap_vld = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_free_target_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        alloc_KWTA_free_target_blk_n = alloc_KWTA_free_target_ap_ack.read();
    } else {
        alloc_KWTA_free_target_blk_n = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_size() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        alloc_KWTA_size = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        alloc_KWTA_size = ap_const_lv32_1;
    } else {
        alloc_KWTA_size =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_size_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_size_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_size_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_size_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_size_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_size_ap_ack.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_size_ap_ack.read())))) {
        alloc_KWTA_size_ap_vld = ap_const_logic_1;
    } else {
        alloc_KWTA_size_ap_vld = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_alloc_KWTA_size_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        alloc_KWTA_size_blk_n = alloc_KWTA_size_ap_ack.read();
    } else {
        alloc_KWTA_size_blk_n = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void HLS_SPFA_KWTA::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void HLS_SPFA_KWTA::thread_ap_block_state16_io() {
    ap_block_state16_io = ((esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_cmd_ap_ack.read())) || (esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_size_ap_ack.read())) || (esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_free_target_ap_ack.read())));
}

void HLS_SPFA_KWTA::thread_ap_block_state17_io() {
    ap_block_state17_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_cmd_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_size_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_free_target_ap_ack.read()));
}

void HLS_SPFA_KWTA::thread_ap_block_state1_io() {
    ap_block_state1_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_HTA_cmd_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_HTA_size_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_HTA_free_target_ap_ack.read()));
}

void HLS_SPFA_KWTA::thread_ap_block_state21_io() {
    ap_block_state21_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_cmd_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_size_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_free_target_ap_ack.read()));
}

void HLS_SPFA_KWTA::thread_ap_block_state28_io() {
    ap_block_state28_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_cmd_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_size_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_free_target_ap_ack.read()));
}

void HLS_SPFA_KWTA::thread_ap_block_state33_io() {
    ap_block_state33_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_cmd_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_size_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_free_target_ap_ack.read()));
}

void HLS_SPFA_KWTA::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_cmd_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_size_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_alloc_KWTA_free_target_ap_ack.read()));
}

void HLS_SPFA_KWTA::thread_ap_done() {
    if ((esl_seteq<1,1,1>(tmp_s_fu_1433_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(tmp_s_fu_1433_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_ap_sig_ioackin_alloc_HTA_cmd_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_HTA_cmd_ap_ack.read())) {
        ap_sig_ioackin_alloc_HTA_cmd_ap_ack = alloc_HTA_cmd_ap_ack.read();
    } else {
        ap_sig_ioackin_alloc_HTA_cmd_ap_ack = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_ap_sig_ioackin_alloc_HTA_free_target_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_HTA_free_target_ap_ack.read())) {
        ap_sig_ioackin_alloc_HTA_free_target_ap_ack = alloc_HTA_free_target_ap_ack.read();
    } else {
        ap_sig_ioackin_alloc_HTA_free_target_ap_ack = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_ap_sig_ioackin_alloc_HTA_size_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_HTA_size_ap_ack.read())) {
        ap_sig_ioackin_alloc_HTA_size_ap_ack = alloc_HTA_size_ap_ack.read();
    } else {
        ap_sig_ioackin_alloc_HTA_size_ap_ack = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_ap_sig_ioackin_alloc_KWTA_cmd_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_cmd_ap_ack.read())) {
        ap_sig_ioackin_alloc_KWTA_cmd_ap_ack = alloc_KWTA_cmd_ap_ack.read();
    } else {
        ap_sig_ioackin_alloc_KWTA_cmd_ap_ack = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_ap_sig_ioackin_alloc_KWTA_free_target_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_free_target_ap_ack.read())) {
        ap_sig_ioackin_alloc_KWTA_free_target_ap_ack = alloc_KWTA_free_target_ap_ack.read();
    } else {
        ap_sig_ioackin_alloc_KWTA_free_target_ap_ack = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_ap_sig_ioackin_alloc_KWTA_size_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_alloc_KWTA_size_ap_ack.read())) {
        ap_sig_ioackin_alloc_KWTA_size_ap_ack = alloc_KWTA_size_ap_ack.read();
    } else {
        ap_sig_ioackin_alloc_KWTA_size_ap_ack = ap_const_logic_1;
    }
}

void HLS_SPFA_KWTA::thread_brmerge_demorgan_fu_1073_p2() {
    brmerge_demorgan_fu_1073_p2 = (update0_fu_1057_p2.read() & update1_fu_1068_p2.read());
}

void HLS_SPFA_KWTA::thread_dis_output_address0() {
    dis_output_address0 =  (sc_lv<8>) (tmp_11_fu_1469_p1.read());
}

void HLS_SPFA_KWTA::thread_dis_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        dis_output_ce0 = ap_const_logic_1;
    } else {
        dis_output_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_dis_output_d0() {
    dis_output_d0 = (!tmp_34_fu_1474_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_34_fu_1474_p1.read()[0].to_bool())? HTA_heap_1_q0.read(): HTA_heap_0_q0.read());
}

void HLS_SPFA_KWTA::thread_dis_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        dis_output_we0 = ap_const_logic_1;
    } else {
        dis_output_we0 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_extLd_fu_858_p1() {
    extLd_fu_858_p1 = esl_sext<32,31>(N_2.read());
}

void HLS_SPFA_KWTA::thread_free_target_assign_fu_1421_p3() {
    free_target_assign_fu_1421_p3 = (!tmp_37_fu_1373_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_37_fu_1373_p3.read()[0].to_bool())? p_neg_t_fu_1401_p2.read(): tmp_19_fu_1417_p1.read());
}

void HLS_SPFA_KWTA::thread_grp_fu_553_p2() {
    grp_fu_553_p2 = (!ap_const_lv13_7D1.is_01() || !tmp_38_reg_1725.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D1) + sc_biguint<13>(tmp_38_reg_1725.read()));
}

void HLS_SPFA_KWTA::thread_grp_fu_558_p4() {
    grp_fu_558_p4 = grp_fu_553_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_guard_variable_for_H_1_load_fu_576_p1() {
    guard_variable_for_H_1_load_fu_576_p1 = guard_variable_for_H.read();
}

void HLS_SPFA_KWTA::thread_i0_fu_878_p2() {
    i0_fu_878_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): i_2_reg_527.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void HLS_SPFA_KWTA::thread_i1_fu_884_p2() {
    i1_fu_884_p2 = (i0_fu_878_p2.read() | ap_const_lv32_1);
}

void HLS_SPFA_KWTA::thread_i_1_cast_fu_683_p1() {
    i_1_cast_fu_683_p1 = esl_zext<32,31>(i_1_reg_506.read());
}

void HLS_SPFA_KWTA::thread_i_3_cast_fu_1429_p1() {
    i_3_cast_fu_1429_p1 = esl_zext<32,31>(i_3_reg_538.read());
}

void HLS_SPFA_KWTA::thread_i_4_fu_648_p2() {
    i_4_fu_648_p2 = (!i_reg_495.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_reg_495.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void HLS_SPFA_KWTA::thread_i_5_fu_692_p2() {
    i_5_fu_692_p2 = (!i_1_reg_506.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_1_reg_506.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void HLS_SPFA_KWTA::thread_i_6_fu_1438_p2() {
    i_6_fu_1438_p2 = (!i_3_reg_538.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_3_reg_538.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void HLS_SPFA_KWTA::thread_i_7_fu_868_p2() {
    i_7_fu_868_p2 = (!i_2_reg_527.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_2_reg_527.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void HLS_SPFA_KWTA::thread_i_cast_fu_639_p1() {
    i_cast_fu_639_p1 = esl_zext<32,31>(i_reg_495.read());
}

void HLS_SPFA_KWTA::thread_in_list_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        in_list_address0 =  (sc_lv<8>) (tmp_3_reg_1601.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        in_list_address0 = in_list_addr_3_reg_1694.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        in_list_address0 =  (sc_lv<8>) (tmp_20_fu_1012_p1.read());
    } else if ((esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        in_list_address0 =  (sc_lv<8>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_1))) {
        in_list_address0 =  (sc_lv<8>) (tmp_9_fu_698_p1.read());
    } else {
        in_list_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void HLS_SPFA_KWTA::thread_in_list_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        in_list_address1 = in_list_addr_3_reg_1694.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        in_list_address1 = in_list_addr_4_reg_1705.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        in_list_address1 =  (sc_lv<8>) (tmp_23_fu_1021_p1.read());
    } else {
        in_list_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void HLS_SPFA_KWTA::thread_in_list_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         (esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())))) {
        in_list_ce0 = ap_const_logic_1;
    } else {
        in_list_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_in_list_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        in_list_ce1 = ap_const_logic_1;
    } else {
        in_list_ce1 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_in_list_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         (esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())))) {
        in_list_d0 = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        in_list_d0 = ap_const_lv1_0;
    } else {
        in_list_d0 =  (sc_lv<1>) ("X");
    }
}

void HLS_SPFA_KWTA::thread_in_list_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         (esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())))) {
        in_list_we0 = ap_const_logic_1;
    } else {
        in_list_we0 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_in_list_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        in_list_we1 = ap_const_logic_1;
    } else {
        in_list_we1 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_local_dis_0_sum1_fu_662_p2() {
    local_dis_0_sum1_fu_662_p2 = (!tmp_1_fu_654_p1.read().is_01() || !tmp_4_cast_reg_1504.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_1_fu_654_p1.read()) + sc_biguint<13>(tmp_4_cast_reg_1504.read()));
}

void HLS_SPFA_KWTA::thread_local_dis_0_sum2_fu_820_p2() {
    local_dis_0_sum2_fu_820_p2 = (!tmp_4_cast_reg_1504.read().is_01() || !tmp_31_fu_812_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_4_cast_reg_1504.read()) + sc_biguint<13>(tmp_31_fu_812_p1.read()));
}

void HLS_SPFA_KWTA::thread_local_dis_0_sum6_fu_966_p2() {
    local_dis_0_sum6_fu_966_p2 = (!tmp_4_cast_reg_1504.read().is_01() || !tmp_23_cast_fu_959_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_4_cast_reg_1504.read()) + sc_biguint<13>(tmp_23_cast_fu_959_p3.read()));
}

void HLS_SPFA_KWTA::thread_local_dis_0_sum7_fu_992_p2() {
    local_dis_0_sum7_fu_992_p2 = (!tmp_4_cast_reg_1504.read().is_01() || !tmp_26_cast_fu_986_p2.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_4_cast_reg_1504.read()) + sc_biguint<13>(tmp_26_cast_fu_986_p2.read()));
}

void HLS_SPFA_KWTA::thread_local_dis_0_sum_fu_1448_p2() {
    local_dis_0_sum_fu_1448_p2 = (!tmp_33_fu_1444_p1.read().is_01() || !tmp_4_cast_reg_1504.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_33_fu_1444_p1.read()) + sc_biguint<13>(tmp_4_cast_reg_1504.read()));
}

void HLS_SPFA_KWTA::thread_map_r_address0() {
    map_r_address0 =  (sc_lv<15>) (tmp_13_fu_895_p1.read());
}

void HLS_SPFA_KWTA::thread_map_r_address1() {
    map_r_address1 =  (sc_lv<15>) (tmp_15_fu_905_p1.read());
}

void HLS_SPFA_KWTA::thread_map_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        map_r_ce0 = ap_const_logic_1;
    } else {
        map_r_ce0 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_map_r_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        map_r_ce1 = ap_const_logic_1;
    } else {
        map_r_ce1 = ap_const_logic_0;
    }
}

void HLS_SPFA_KWTA::thread_newIndex10_cast_fu_1007_p1() {
    newIndex10_cast_fu_1007_p1 = esl_zext<64,12>(newIndex10_fu_997_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex10_fu_997_p4() {
    newIndex10_fu_997_p4 = local_dis_0_sum7_fu_992_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex11_cast_fu_1267_p1() {
    newIndex11_cast_fu_1267_p1 = esl_zext<64,12>(newIndex11_fu_1257_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex11_fu_1257_p4() {
    newIndex11_fu_1257_p4 = KWTA_heap_0_sum2_fu_1251_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex12_cast_fu_1275_p1() {
    newIndex12_cast_fu_1275_p1 = esl_zext<64,12>(grp_fu_558_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex13_cast_fu_1191_p1() {
    newIndex13_cast_fu_1191_p1 = esl_zext<64,12>(newIndex13_fu_1181_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex13_fu_1181_p4() {
    newIndex13_fu_1181_p4 = KWTA_heap_0_sum4_fu_1175_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex14_cast_fu_1200_p1() {
    newIndex14_cast_fu_1200_p1 = esl_zext<64,12>(grp_fu_558_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex15_cast_fu_1316_p1() {
    newIndex15_cast_fu_1316_p1 = esl_zext<64,12>(newIndex15_fu_1306_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex15_fu_1306_p4() {
    newIndex15_fu_1306_p4 = KWTA_heap_0_sum3_fu_1300_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex16_cast_fu_1336_p1() {
    newIndex16_cast_fu_1336_p1 = esl_zext<64,12>(newIndex16_fu_1326_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex16_fu_1326_p4() {
    newIndex16_fu_1326_p4 = p_sum2_fu_1321_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex17_cast_fu_1362_p1() {
    newIndex17_cast_fu_1362_p1 = esl_zext<64,12>(newIndex17_reg_1779.read());
}

void HLS_SPFA_KWTA::thread_newIndex18_cast_fu_1115_p1() {
    newIndex18_cast_fu_1115_p1 = esl_zext<64,12>(newIndex18_fu_1105_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex18_fu_1105_p4() {
    newIndex18_fu_1105_p4 = KWTA_heap_0_sum5_fu_1099_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex19_cast_fu_1151_p1() {
    newIndex19_cast_fu_1151_p1 = esl_zext<64,12>(newIndex19_reg_1748.read());
}

void HLS_SPFA_KWTA::thread_newIndex1_fu_625_p4() {
    newIndex1_fu_625_p4 = status_6_reg_1498.read().range(19, 1);
}

void HLS_SPFA_KWTA::thread_newIndex20_cast_fu_1124_p1() {
    newIndex20_cast_fu_1124_p1 = esl_zext<64,12>(grp_fu_558_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex21_cast_fu_1227_p1() {
    newIndex21_cast_fu_1227_p1 = esl_zext<64,12>(newIndex21_reg_1761.read());
}

void HLS_SPFA_KWTA::thread_newIndex2_fu_634_p1() {
    newIndex2_fu_634_p1 = esl_zext<64,19>(newIndex1_fu_625_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex3_cast_fu_677_p1() {
    newIndex3_cast_fu_677_p1 = esl_zext<64,12>(newIndex3_fu_667_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex3_fu_667_p4() {
    newIndex3_fu_667_p4 = local_dis_0_sum1_fu_662_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex4_cast_fu_737_p1() {
    newIndex4_cast_fu_737_p1 = esl_zext<64,12>(newIndex4_fu_727_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex4_fu_727_p4() {
    newIndex4_fu_727_p4 = KWTA_heap_0_sum_fu_721_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex5_cast_fu_758_p1() {
    newIndex5_cast_fu_758_p1 = esl_zext<64,12>(newIndex5_fu_748_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex5_fu_748_p4() {
    newIndex5_fu_748_p4 = p_sum_fu_742_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex6_cast_fu_794_p1() {
    newIndex6_cast_fu_794_p1 = esl_zext<64,12>(newIndex6_fu_784_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex6_fu_784_p4() {
    newIndex6_fu_784_p4 = KWTA_heap_0_sum1_fu_778_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex7_cast_fu_835_p1() {
    newIndex7_cast_fu_835_p1 = esl_zext<64,12>(newIndex7_reg_1586.read());
}

void HLS_SPFA_KWTA::thread_newIndex8_cast_fu_925_p1() {
    newIndex8_cast_fu_925_p1 = esl_zext<64,12>(newIndex8_fu_915_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex8_fu_915_p4() {
    newIndex8_fu_915_p4 = p_sum3_fu_910_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex9_cast_fu_981_p1() {
    newIndex9_cast_fu_981_p1 = esl_zext<64,12>(newIndex9_fu_971_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex9_fu_971_p4() {
    newIndex9_fu_971_p4 = local_dis_0_sum6_fu_966_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_newIndex_cast_fu_1463_p1() {
    newIndex_cast_fu_1463_p1 = esl_zext<64,12>(newIndex_fu_1453_p4.read());
}

void HLS_SPFA_KWTA::thread_newIndex_fu_1453_p4() {
    newIndex_fu_1453_p4 = local_dis_0_sum_fu_1448_p2.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_now_dis_fu_843_p3() {
    now_dis_fu_843_p3 = (!tmp_32_reg_1581.read()[0].is_01())? sc_lv<32>(): ((tmp_32_reg_1581.read()[0].to_bool())? HTA_heap_1_q0.read(): HTA_heap_0_q0.read());
}

void HLS_SPFA_KWTA::thread_now_fu_804_p3() {
    now_fu_804_p3 = (!tmp_28_fu_800_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_28_fu_800_p1.read()[0].to_bool())? HTA_heap_1_q0.read(): HTA_heap_0_q0.read());
}

void HLS_SPFA_KWTA::thread_offset_head_3_fu_703_p2() {
    offset_head_3_fu_703_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): reg_568.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void HLS_SPFA_KWTA::thread_offset_new_node0_2_fu_1155_p2() {
    offset_new_node0_2_fu_1155_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): reg_568.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void HLS_SPFA_KWTA::thread_offset_new_node0_fu_1231_p2() {
    offset_new_node0_fu_1231_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): reg_568.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void HLS_SPFA_KWTA::thread_offset_new_node1_1_fu_1281_p2() {
    offset_new_node1_1_fu_1281_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): reg_568.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void HLS_SPFA_KWTA::thread_offset_new_node1_fu_1079_p2() {
    offset_new_node1_fu_1079_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): reg_568.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void HLS_SPFA_KWTA::thread_offset_next_fu_1366_p3() {
    offset_next_fu_1366_p3 = (!tmp_28_reg_1570.read()[0].is_01())? sc_lv<32>(): ((tmp_28_reg_1570.read()[0].to_bool())? HTA_heap_0_q0.read(): HTA_heap_1_q0.read());
}

void HLS_SPFA_KWTA::thread_or_cond_fu_943_p2() {
    or_cond_fu_943_p2 = (tmp_16_fu_931_p2.read() & tmp_17_fu_937_p2.read());
}

void HLS_SPFA_KWTA::thread_p_lshr_f_fu_1407_p4() {
    p_lshr_f_fu_1407_p4 = offset_head_reg_517.read().range(31, 1);
}

void HLS_SPFA_KWTA::thread_p_lshr_fu_1387_p4() {
    p_lshr_fu_1387_p4 = p_neg_fu_1381_p2.read().range(31, 1);
}

void HLS_SPFA_KWTA::thread_p_neg_fu_1381_p2() {
    p_neg_fu_1381_p2 = (!ap_const_lv32_0.is_01() || !offset_head_reg_517.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(offset_head_reg_517.read()));
}

void HLS_SPFA_KWTA::thread_p_neg_t_fu_1401_p2() {
    p_neg_t_fu_1401_p2 = (!ap_const_lv32_0.is_01() || !tmp_18_fu_1397_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_18_fu_1397_p1.read()));
}

void HLS_SPFA_KWTA::thread_p_sum2_fu_1321_p2() {
    p_sum2_fu_1321_p2 = (!ap_const_lv13_7D1.is_01() || !tmp_32_cast_reg_1766.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D1) + sc_biguint<13>(tmp_32_cast_reg_1766.read()));
}

void HLS_SPFA_KWTA::thread_p_sum3_fu_910_p2() {
    p_sum3_fu_910_p2 = (!tmp_27_reg_1555.read().is_01() || !ap_const_lv13_7D1.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_27_reg_1555.read()) + sc_biguint<13>(ap_const_lv13_7D1));
}

void HLS_SPFA_KWTA::thread_p_sum4_fu_1341_p2() {
    p_sum4_fu_1341_p2 = (!ap_const_lv13_7D1.is_01() || !tmp_33_cast_fu_1292_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D1) + sc_biguint<13>(tmp_33_cast_fu_1292_p3.read()));
}

void HLS_SPFA_KWTA::thread_p_sum6_fu_1206_p2() {
    p_sum6_fu_1206_p2 = (!tmp_34_cast_fu_1167_p3.read().is_01() || !ap_const_lv13_7D1.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_34_cast_fu_1167_p3.read()) + sc_biguint<13>(ap_const_lv13_7D1));
}

void HLS_SPFA_KWTA::thread_p_sum8_fu_1130_p2() {
    p_sum8_fu_1130_p2 = (!tmp_35_cast_fu_1091_p3.read().is_01() || !ap_const_lv13_7D1.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_35_cast_fu_1091_p3.read()) + sc_biguint<13>(ap_const_lv13_7D1));
}

void HLS_SPFA_KWTA::thread_p_sum_fu_742_p2() {
    p_sum_fu_742_p2 = (!ap_const_lv13_7D1.is_01() || !tmp_cast_fu_713_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_7D1) + sc_biguint<13>(tmp_cast_fu_713_p3.read()));
}

void HLS_SPFA_KWTA::thread_tmp_10_fu_862_p2() {
    tmp_10_fu_862_p2 = (!i_2_reg_527.read().is_01() || !extLd_fu_858_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_2_reg_527.read()) < sc_bigint<32>(extLd_fu_858_p1.read()));
}

void HLS_SPFA_KWTA::thread_tmp_11_fu_1469_p1() {
    tmp_11_fu_1469_p1 = esl_zext<64,31>(i_3_reg_538.read());
}

void HLS_SPFA_KWTA::thread_tmp_12_fu_890_p2() {
    tmp_12_fu_890_p2 = (!tmp_6_reg_1612.read().is_01() || !i0_fu_878_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_reg_1612.read()) + sc_bigint<32>(i0_fu_878_p2.read()));
}

void HLS_SPFA_KWTA::thread_tmp_13_fu_895_p1() {
    tmp_13_fu_895_p1 = esl_sext<64,32>(tmp_12_fu_890_p2.read());
}

void HLS_SPFA_KWTA::thread_tmp_14_fu_900_p2() {
    tmp_14_fu_900_p2 = (!tmp_6_reg_1612.read().is_01() || !i1_fu_884_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_reg_1612.read()) + sc_bigint<32>(i1_fu_884_p2.read()));
}

void HLS_SPFA_KWTA::thread_tmp_15_fu_905_p1() {
    tmp_15_fu_905_p1 = esl_sext<64,32>(tmp_14_fu_900_p2.read());
}

void HLS_SPFA_KWTA::thread_tmp_16_fu_931_p2() {
    tmp_16_fu_931_p2 = (!map_r_q0.read().is_01() || !ap_const_lv32_270F.is_01())? sc_lv<1>(): (sc_bigint<32>(map_r_q0.read()) > sc_bigint<32>(ap_const_lv32_270F));
}

void HLS_SPFA_KWTA::thread_tmp_17_fu_937_p2() {
    tmp_17_fu_937_p2 = (!map_r_q1.read().is_01() || !ap_const_lv32_270F.is_01())? sc_lv<1>(): (sc_bigint<32>(map_r_q1.read()) > sc_bigint<32>(ap_const_lv32_270F));
}

void HLS_SPFA_KWTA::thread_tmp_18_fu_1397_p1() {
    tmp_18_fu_1397_p1 = esl_zext<32,31>(p_lshr_fu_1387_p4.read());
}

void HLS_SPFA_KWTA::thread_tmp_19_fu_1417_p1() {
    tmp_19_fu_1417_p1 = esl_zext<32,31>(p_lshr_f_fu_1407_p4.read());
}

void HLS_SPFA_KWTA::thread_tmp_1_fu_654_p1() {
    tmp_1_fu_654_p1 = i_reg_495.read().range(13-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_1_i_fu_580_p0() {
    tmp_1_i_fu_580_p0 = n.read();
}

void HLS_SPFA_KWTA::thread_tmp_1_i_fu_580_p2() {
    tmp_1_i_fu_580_p2 = (!tmp_1_i_fu_580_p0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_1_i_fu_580_p0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void HLS_SPFA_KWTA::thread_tmp_20_fu_1012_p1() {
    tmp_20_fu_1012_p1 = esl_sext<64,32>(i0_reg_1631.read());
}

void HLS_SPFA_KWTA::thread_tmp_21_fu_1016_p2() {
    tmp_21_fu_1016_p2 = (!weight0_reg_1667.read().is_01() || !HTA_heap_0_q0.read().is_01())? sc_lv<1>(): (sc_bigint<32>(weight0_reg_1667.read()) < sc_bigint<32>(HTA_heap_0_q0.read()));
}

void HLS_SPFA_KWTA::thread_tmp_22_fu_1051_p2() {
    tmp_22_fu_1051_p2 = (in_list_q0.read() ^ ap_const_lv1_1);
}

void HLS_SPFA_KWTA::thread_tmp_23_cast_fu_959_p3() {
    tmp_23_cast_fu_959_p3 = esl_concat<12,1>(tmp_35_reg_1626.read(), ap_const_lv1_0);
}

void HLS_SPFA_KWTA::thread_tmp_23_fu_1021_p1() {
    tmp_23_fu_1021_p1 = esl_sext<64,32>(i1_reg_1637.read());
}

void HLS_SPFA_KWTA::thread_tmp_24_fu_1025_p2() {
    tmp_24_fu_1025_p2 = (!weight1_reg_1673.read().is_01() || !HTA_heap_1_q0.read().is_01())? sc_lv<1>(): (sc_bigint<32>(weight1_reg_1673.read()) < sc_bigint<32>(HTA_heap_1_q0.read()));
}

void HLS_SPFA_KWTA::thread_tmp_25_fu_1062_p2() {
    tmp_25_fu_1062_p2 = (in_list_q1.read() ^ ap_const_lv1_1);
}

void HLS_SPFA_KWTA::thread_tmp_26_cast_fu_986_p2() {
    tmp_26_cast_fu_986_p2 = (tmp_23_cast_fu_959_p3.read() | ap_const_lv13_1);
}

void HLS_SPFA_KWTA::thread_tmp_26_fu_709_p1() {
    tmp_26_fu_709_p1 = reg_568.read().range(12-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_27_fu_774_p1() {
    tmp_27_fu_774_p1 = offset_head_reg_517.read().range(13-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_28_fu_800_p1() {
    tmp_28_fu_800_p1 = offset_head_reg_517.read().range(1-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_31_fu_812_p1() {
    tmp_31_fu_812_p1 = now_fu_804_p3.read().range(13-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_32_cast_fu_1243_p3() {
    tmp_32_cast_fu_1243_p3 = esl_concat<12,1>(tmp_40_fu_1239_p1.read(), ap_const_lv1_0);
}

void HLS_SPFA_KWTA::thread_tmp_32_fu_816_p1() {
    tmp_32_fu_816_p1 = now_fu_804_p3.read().range(1-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_33_cast_fu_1292_p3() {
    tmp_33_cast_fu_1292_p3 = esl_concat<12,1>(tmp_46_fu_1288_p1.read(), ap_const_lv1_0);
}

void HLS_SPFA_KWTA::thread_tmp_33_fu_1444_p1() {
    tmp_33_fu_1444_p1 = i_3_reg_538.read().range(13-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_34_cast_fu_1167_p3() {
    tmp_34_cast_fu_1167_p3 = esl_concat<12,1>(tmp_43_fu_1163_p1.read(), ap_const_lv1_0);
}

void HLS_SPFA_KWTA::thread_tmp_34_fu_1474_p1() {
    tmp_34_fu_1474_p1 = i_3_reg_538.read().range(1-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_35_cast_fu_1091_p3() {
    tmp_35_cast_fu_1091_p3 = esl_concat<12,1>(tmp_48_fu_1087_p1.read(), ap_const_lv1_0);
}

void HLS_SPFA_KWTA::thread_tmp_35_fu_874_p1() {
    tmp_35_fu_874_p1 = i_2_reg_527.read().range(12-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_37_fu_1373_p3() {
    tmp_37_fu_1373_p3 = offset_head_reg_517.read().range(31, 31);
}

void HLS_SPFA_KWTA::thread_tmp_38_fu_1047_p1() {
    tmp_38_fu_1047_p1 = offset_tail_fu_124.read().range(13-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_3_fu_840_p1() {
    tmp_3_fu_840_p1 = esl_sext<64,32>(now_reg_1575.read());
}

void HLS_SPFA_KWTA::thread_tmp_40_fu_1239_p1() {
    tmp_40_fu_1239_p1 = reg_568.read().range(12-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_41_fu_1272_p1() {
    tmp_41_fu_1272_p1 = offset_tail_load_reg_1720.read().range(1-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_43_fu_1163_p1() {
    tmp_43_fu_1163_p1 = reg_568.read().range(12-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_44_fu_1196_p1() {
    tmp_44_fu_1196_p1 = reg_572.read().range(1-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_46_fu_1288_p1() {
    tmp_46_fu_1288_p1 = reg_568.read().range(12-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_48_fu_1087_p1() {
    tmp_48_fu_1087_p1 = reg_568.read().range(12-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_49_fu_1120_p1() {
    tmp_49_fu_1120_p1 = reg_572.read().range(1-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_4_cast_fu_617_p3() {
    tmp_4_cast_fu_617_p3 = esl_concat<12,1>(tmp_fu_608_p4.read(), ap_const_lv1_0);
}

void HLS_SPFA_KWTA::thread_tmp_4_fu_658_p1() {
    tmp_4_fu_658_p1 = i_reg_495.read().range(1-1, 0);
}

void HLS_SPFA_KWTA::thread_tmp_5_fu_643_p1() {
    tmp_5_fu_643_p1 = n.read();
}

void HLS_SPFA_KWTA::thread_tmp_5_fu_643_p2() {
    tmp_5_fu_643_p2 = (!i_cast_fu_639_p1.read().is_01() || !tmp_5_fu_643_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_fu_639_p1.read()) < sc_bigint<32>(tmp_5_fu_643_p1.read()));
}

void HLS_SPFA_KWTA::thread_tmp_6_fu_850_p0() {
    tmp_6_fu_850_p0 = n.read();
}

void HLS_SPFA_KWTA::thread_tmp_6_fu_850_p2() {
    tmp_6_fu_850_p2 = (!tmp_6_fu_850_p0.read().is_01() || !now_reg_1575.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_fu_850_p0.read()) * sc_bigint<32>(now_reg_1575.read());
}

void HLS_SPFA_KWTA::thread_tmp_7_fu_768_p2() {
    tmp_7_fu_768_p2 = (!offset_head_reg_517.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(offset_head_reg_517.read() == ap_const_lv32_FFFFFFFF);
}

void HLS_SPFA_KWTA::thread_tmp_8_fu_687_p1() {
    tmp_8_fu_687_p1 = n.read();
}

void HLS_SPFA_KWTA::thread_tmp_8_fu_687_p2() {
    tmp_8_fu_687_p2 = (!i_1_cast_fu_683_p1.read().is_01() || !tmp_8_fu_687_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_1_cast_fu_683_p1.read()) < sc_bigint<32>(tmp_8_fu_687_p1.read()));
}

void HLS_SPFA_KWTA::thread_tmp_9_fu_698_p1() {
    tmp_9_fu_698_p1 = esl_zext<64,31>(i_1_reg_506.read());
}

void HLS_SPFA_KWTA::thread_tmp_cast_fu_713_p3() {
    tmp_cast_fu_713_p3 = esl_concat<12,1>(tmp_26_fu_709_p1.read(), ap_const_lv1_0);
}

void HLS_SPFA_KWTA::thread_tmp_fu_608_p4() {
    tmp_fu_608_p4 = status_6_reg_1498.read().range(12, 1);
}

void HLS_SPFA_KWTA::thread_tmp_s_fu_1433_p1() {
    tmp_s_fu_1433_p1 = n.read();
}

void HLS_SPFA_KWTA::thread_tmp_s_fu_1433_p2() {
    tmp_s_fu_1433_p2 = (!i_3_cast_fu_1429_p1.read().is_01() || !tmp_s_fu_1433_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_3_cast_fu_1429_p1.read()) < sc_bigint<32>(tmp_s_fu_1433_p1.read()));
}

void HLS_SPFA_KWTA::thread_update0_fu_1057_p2() {
    update0_fu_1057_p2 = (tmp_21_reg_1689.read() & tmp_22_fu_1051_p2.read());
}

void HLS_SPFA_KWTA::thread_update1_fu_1068_p2() {
    update1_fu_1068_p2 = (tmp_24_reg_1700.read() & tmp_25_fu_1062_p2.read());
}

void HLS_SPFA_KWTA::thread_weight0_HTA_heap_loa_fu_1030_p3() {
    weight0_HTA_heap_loa_fu_1030_p3 = (!tmp_21_fu_1016_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_21_fu_1016_p2.read()[0].to_bool())? weight0_reg_1667.read(): HTA_heap_0_q0.read());
}

void HLS_SPFA_KWTA::thread_weight0_fu_949_p2() {
    weight0_fu_949_p2 = (!now_dis_reg_1606.read().is_01() || !map_r_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(now_dis_reg_1606.read()) + sc_biguint<32>(map_r_q0.read()));
}

void HLS_SPFA_KWTA::thread_weight1_1_fu_1037_p3() {
    weight1_1_fu_1037_p3 = (!tmp_24_fu_1025_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_24_fu_1025_p2.read()[0].to_bool())? weight1_reg_1673.read(): HTA_heap_1_q0.read());
}

void HLS_SPFA_KWTA::thread_weight1_fu_954_p2() {
    weight1_fu_954_p2 = (!now_dis_reg_1606.read().is_01() || !map_r_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(now_dis_reg_1606.read()) + sc_biguint<32>(map_r_q1.read()));
}

void HLS_SPFA_KWTA::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state1_io.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, alloc_HTA_addr_ap_vld.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(tmp_5_fu_643_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_8_fu_687_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state6_io.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(tmp_7_fu_768_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(tmp_10_fu_862_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(or_cond_fu_943_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(update1_fu_1068_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(update0_fu_1057_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else if ((esl_seteq<1,1,1>(update0_fu_1057_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(update1_fu_1068_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else if ((esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(update0_fu_1057_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_io.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(brmerge_demorgan_fu_1073_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state17_io.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_io.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state28_io.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, alloc_KWTA_addr_ap_vld.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state33_io.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_state33;
            }
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(tmp_s_fu_1433_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<36>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void HLS_SPFA_KWTA::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"map_r_address0\" :  \"" << map_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"map_r_ce0\" :  \"" << map_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"map_r_q0\" :  \"" << map_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"map_r_address1\" :  \"" << map_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"map_r_ce1\" :  \"" << map_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"map_r_q1\" :  \"" << map_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_address0\" :  \"" << dis_output_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_ce0\" :  \"" << dis_output_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_we0\" :  \"" << dis_output_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_d0\" :  \"" << dis_output_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_size\" :  \"" << alloc_HTA_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_size_ap_vld\" :  \"" << alloc_HTA_size_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_size_ap_ack\" :  \"" << alloc_HTA_size_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_free_target\" :  \"" << alloc_HTA_free_target.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_free_target_ap_vld\" :  \"" << alloc_HTA_free_target_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_free_target_ap_ack\" :  \"" << alloc_HTA_free_target_ap_ack.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_addr\" :  \"" << alloc_HTA_addr.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_addr_ap_vld\" :  \"" << alloc_HTA_addr_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_addr_ap_ack\" :  \"" << alloc_HTA_addr_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_cmd\" :  \"" << alloc_HTA_cmd.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_cmd_ap_vld\" :  \"" << alloc_HTA_cmd_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_cmd_ap_ack\" :  \"" << alloc_HTA_cmd_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_KWTA_size\" :  \"" << alloc_KWTA_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_KWTA_size_ap_vld\" :  \"" << alloc_KWTA_size_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_KWTA_size_ap_ack\" :  \"" << alloc_KWTA_size_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_KWTA_free_target\" :  \"" << alloc_KWTA_free_target.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_KWTA_free_target_ap_vld\" :  \"" << alloc_KWTA_free_target_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_KWTA_free_target_ap_ack\" :  \"" << alloc_KWTA_free_target_ap_ack.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_KWTA_addr\" :  \"" << alloc_KWTA_addr.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_KWTA_addr_ap_vld\" :  \"" << alloc_KWTA_addr_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_KWTA_addr_ap_ack\" :  \"" << alloc_KWTA_addr_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_KWTA_cmd\" :  \"" << alloc_KWTA_cmd.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_KWTA_cmd_ap_vld\" :  \"" << alloc_KWTA_cmd_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_KWTA_cmd_ap_ack\" :  \"" << alloc_KWTA_cmd_ap_ack.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

