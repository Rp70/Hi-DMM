// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "HLS_MAXHEAP_HTA.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic HLS_MAXHEAP_HTA::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic HLS_MAXHEAP_HTA::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state1 = "1";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state2 = "10";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state3 = "100";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state4 = "1000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state5 = "10000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state6 = "100000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state7 = "1000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state8 = "10000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state9 = "100000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state10 = "1000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state11 = "10000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state12 = "100000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_2 = "10";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_3 = "11";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_4 = "100";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_5 = "101";
const sc_lv<1> HLS_MAXHEAP_HTA::ap_const_lv1_1 = "1";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_6 = "110";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_8 = "1000";
const sc_lv<1> HLS_MAXHEAP_HTA::ap_const_lv1_0 = "0";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_A = "1010";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_B = "1011";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_C = "1100";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_D = "1101";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_E = "1110";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_10 = "10000";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_11 = "10001";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_12 = "10010";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_13 = "10011";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_14 = "10100";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_15 = "10101";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_16 = "10110";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_17 = "10111";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_18 = "11000";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_19 = "11001";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_1A = "11010";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_1B = "11011";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_1C = "11100";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_1D = "11101";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_const_lv31_1 = "1";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_9 = "1001";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_F = "1111";
const sc_lv<31> HLS_MAXHEAP_HTA::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_1E = "11110";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_1 = "1";
const sc_lv<64> HLS_MAXHEAP_HTA::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_7 = "111";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<11> HLS_MAXHEAP_HTA::ap_const_lv11_3 = "11";
const sc_lv<2> HLS_MAXHEAP_HTA::ap_const_lv2_0 = "00";
const sc_lv<12> HLS_MAXHEAP_HTA::ap_const_lv12_1 = "1";
const sc_lv<3> HLS_MAXHEAP_HTA::ap_const_lv3_0 = "000";
const sc_lv<12> HLS_MAXHEAP_HTA::ap_const_lv12_2 = "10";
const sc_lv<12> HLS_MAXHEAP_HTA::ap_const_lv12_3 = "11";
const sc_lv<13> HLS_MAXHEAP_HTA::ap_const_lv13_4 = "100";
const sc_lv<13> HLS_MAXHEAP_HTA::ap_const_lv13_3 = "11";
const sc_lv<13> HLS_MAXHEAP_HTA::ap_const_lv13_5 = "101";
const sc_lv<32> HLS_MAXHEAP_HTA::ap_const_lv32_1F = "11111";
const sc_lv<13> HLS_MAXHEAP_HTA::ap_const_lv13_1 = "1";
const sc_lv<13> HLS_MAXHEAP_HTA::ap_const_lv13_6 = "110";
const sc_lv<13> HLS_MAXHEAP_HTA::ap_const_lv13_2 = "10";
const bool HLS_MAXHEAP_HTA::ap_const_boolean_1 = true;

HLS_MAXHEAP_HTA::HLS_MAXHEAP_HTA(sc_module_name name) : sc_module(name), mVcdFile(0) {
    HTA_heap_0_U = new HLS_MAXHEAP_HTA_Hbkb("HTA_heap_0_U");
    HTA_heap_0_U->clk(ap_clk);
    HTA_heap_0_U->reset(ap_rst);
    HTA_heap_0_U->address0(HTA_heap_0_address0);
    HTA_heap_0_U->ce0(HTA_heap_0_ce0);
    HTA_heap_0_U->we0(HTA_heap_0_we0);
    HTA_heap_0_U->d0(HTA_heap_0_d0);
    HTA_heap_0_U->q0(HTA_heap_0_q0);
    HTA_heap_0_U->address1(HTA_heap_0_address1);
    HTA_heap_0_U->ce1(HTA_heap_0_ce1);
    HTA_heap_0_U->we1(HTA_heap_0_we1);
    HTA_heap_0_U->d1(HTA_heap_0_d1);
    HTA_heap_0_U->q1(HTA_heap_0_q1);
    HTA_heap_1_U = new HLS_MAXHEAP_HTA_Hbkb("HTA_heap_1_U");
    HTA_heap_1_U->clk(ap_clk);
    HTA_heap_1_U->reset(ap_rst);
    HTA_heap_1_U->address0(HTA_heap_1_address0);
    HTA_heap_1_U->ce0(HTA_heap_1_ce0);
    HTA_heap_1_U->we0(HTA_heap_1_we0);
    HTA_heap_1_U->d0(HTA_heap_1_d0);
    HTA_heap_1_U->q0(HTA_heap_1_q0);
    HTA_heap_1_U->address1(HTA_heap_1_address1);
    HTA_heap_1_U->ce1(HTA_heap_1_ce1);
    HTA_heap_1_U->we1(HTA_heap_1_we1);
    HTA_heap_1_U->d1(HTA_heap_1_d1);
    HTA_heap_1_U->q1(HTA_heap_1_q1);
    grp_HLS_malloc_2_s_fu_649 = new HLS_malloc_2_s("grp_HLS_malloc_2_s_fu_649");
    grp_HLS_malloc_2_s_fu_649->ap_clk(ap_clk);
    grp_HLS_malloc_2_s_fu_649->ap_rst(ap_rst);
    grp_HLS_malloc_2_s_fu_649->ap_start(grp_HLS_malloc_2_s_fu_649_ap_start);
    grp_HLS_malloc_2_s_fu_649->ap_done(grp_HLS_malloc_2_s_fu_649_ap_done);
    grp_HLS_malloc_2_s_fu_649->ap_idle(grp_HLS_malloc_2_s_fu_649_ap_idle);
    grp_HLS_malloc_2_s_fu_649->ap_ready(grp_HLS_malloc_2_s_fu_649_ap_ready);
    grp_HLS_malloc_2_s_fu_649->allocator_size(grp_HLS_malloc_2_s_fu_649_allocator_size);
    grp_HLS_malloc_2_s_fu_649->allocator_size_ap_vld(grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld);
    grp_HLS_malloc_2_s_fu_649->allocator_size_ap_ack(alloc_HTA_size_ap_ack);
    grp_HLS_malloc_2_s_fu_649->allocator_free_targe(grp_HLS_malloc_2_s_fu_649_allocator_free_targe);
    grp_HLS_malloc_2_s_fu_649->allocator_free_targe_ap_vld(grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld);
    grp_HLS_malloc_2_s_fu_649->allocator_free_targe_ap_ack(alloc_HTA_free_target_ap_ack);
    grp_HLS_malloc_2_s_fu_649->allocator_addr(alloc_HTA_addr);
    grp_HLS_malloc_2_s_fu_649->allocator_addr_ap_vld(alloc_HTA_addr_ap_vld);
    grp_HLS_malloc_2_s_fu_649->allocator_addr_ap_ack(grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack);
    grp_HLS_malloc_2_s_fu_649->allocator_cmd(grp_HLS_malloc_2_s_fu_649_allocator_cmd);
    grp_HLS_malloc_2_s_fu_649->allocator_cmd_ap_vld(grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld);
    grp_HLS_malloc_2_s_fu_649->allocator_cmd_ap_ack(alloc_HTA_cmd_ap_ack);
    grp_HLS_malloc_2_s_fu_649->ap_return(grp_HLS_malloc_2_s_fu_649_ap_return);
    grp_HLS_malloc_3_s_fu_661 = new HLS_malloc_3_s("grp_HLS_malloc_3_s_fu_661");
    grp_HLS_malloc_3_s_fu_661->ap_clk(ap_clk);
    grp_HLS_malloc_3_s_fu_661->ap_rst(ap_rst);
    grp_HLS_malloc_3_s_fu_661->ap_start(grp_HLS_malloc_3_s_fu_661_ap_start);
    grp_HLS_malloc_3_s_fu_661->ap_done(grp_HLS_malloc_3_s_fu_661_ap_done);
    grp_HLS_malloc_3_s_fu_661->ap_idle(grp_HLS_malloc_3_s_fu_661_ap_idle);
    grp_HLS_malloc_3_s_fu_661->ap_ready(grp_HLS_malloc_3_s_fu_661_ap_ready);
    grp_HLS_malloc_3_s_fu_661->allocator_size(grp_HLS_malloc_3_s_fu_661_allocator_size);
    grp_HLS_malloc_3_s_fu_661->allocator_size_ap_vld(grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld);
    grp_HLS_malloc_3_s_fu_661->allocator_size_ap_ack(alloc_HTA_size_ap_ack);
    grp_HLS_malloc_3_s_fu_661->allocator_free_targe(grp_HLS_malloc_3_s_fu_661_allocator_free_targe);
    grp_HLS_malloc_3_s_fu_661->allocator_free_targe_ap_vld(grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld);
    grp_HLS_malloc_3_s_fu_661->allocator_free_targe_ap_ack(alloc_HTA_free_target_ap_ack);
    grp_HLS_malloc_3_s_fu_661->allocator_addr(alloc_HTA_addr);
    grp_HLS_malloc_3_s_fu_661->allocator_addr_ap_vld(alloc_HTA_addr_ap_vld);
    grp_HLS_malloc_3_s_fu_661->allocator_addr_ap_ack(grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack);
    grp_HLS_malloc_3_s_fu_661->allocator_cmd(grp_HLS_malloc_3_s_fu_661_allocator_cmd);
    grp_HLS_malloc_3_s_fu_661->allocator_cmd_ap_vld(grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld);
    grp_HLS_malloc_3_s_fu_661->allocator_cmd_ap_ack(alloc_HTA_cmd_ap_ack);
    grp_HLS_malloc_3_s_fu_661->ap_return(grp_HLS_malloc_3_s_fu_661_ap_return);
    grp_HLS_malloc_1_s_fu_673 = new HLS_malloc_1_s("grp_HLS_malloc_1_s_fu_673");
    grp_HLS_malloc_1_s_fu_673->ap_clk(ap_clk);
    grp_HLS_malloc_1_s_fu_673->ap_rst(ap_rst);
    grp_HLS_malloc_1_s_fu_673->ap_start(grp_HLS_malloc_1_s_fu_673_ap_start);
    grp_HLS_malloc_1_s_fu_673->ap_done(grp_HLS_malloc_1_s_fu_673_ap_done);
    grp_HLS_malloc_1_s_fu_673->ap_idle(grp_HLS_malloc_1_s_fu_673_ap_idle);
    grp_HLS_malloc_1_s_fu_673->ap_ready(grp_HLS_malloc_1_s_fu_673_ap_ready);
    grp_HLS_malloc_1_s_fu_673->size(n);
    grp_HLS_malloc_1_s_fu_673->allocator_size(grp_HLS_malloc_1_s_fu_673_allocator_size);
    grp_HLS_malloc_1_s_fu_673->allocator_size_ap_vld(grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld);
    grp_HLS_malloc_1_s_fu_673->allocator_size_ap_ack(alloc_HTA_size_ap_ack);
    grp_HLS_malloc_1_s_fu_673->allocator_free_targe(grp_HLS_malloc_1_s_fu_673_allocator_free_targe);
    grp_HLS_malloc_1_s_fu_673->allocator_free_targe_ap_vld(grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld);
    grp_HLS_malloc_1_s_fu_673->allocator_free_targe_ap_ack(alloc_HTA_free_target_ap_ack);
    grp_HLS_malloc_1_s_fu_673->allocator_addr(alloc_HTA_addr);
    grp_HLS_malloc_1_s_fu_673->allocator_addr_ap_vld(alloc_HTA_addr_ap_vld);
    grp_HLS_malloc_1_s_fu_673->allocator_addr_ap_ack(grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack);
    grp_HLS_malloc_1_s_fu_673->allocator_cmd(grp_HLS_malloc_1_s_fu_673_allocator_cmd);
    grp_HLS_malloc_1_s_fu_673->allocator_cmd_ap_vld(grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld);
    grp_HLS_malloc_1_s_fu_673->allocator_cmd_ap_ack(alloc_HTA_cmd_ap_ack);
    grp_HLS_free_1_s_fu_687 = new HLS_free_1_s("grp_HLS_free_1_s_fu_687");
    grp_HLS_free_1_s_fu_687->ap_clk(ap_clk);
    grp_HLS_free_1_s_fu_687->ap_rst(ap_rst);
    grp_HLS_free_1_s_fu_687->ap_start(grp_HLS_free_1_s_fu_687_ap_start);
    grp_HLS_free_1_s_fu_687->ap_done(grp_HLS_free_1_s_fu_687_ap_done);
    grp_HLS_free_1_s_fu_687->ap_idle(grp_HLS_free_1_s_fu_687_ap_idle);
    grp_HLS_free_1_s_fu_687->ap_ready(grp_HLS_free_1_s_fu_687_ap_ready);
    grp_HLS_free_1_s_fu_687->free_target(offset_now_reg_595);
    grp_HLS_free_1_s_fu_687->allocator_size(grp_HLS_free_1_s_fu_687_allocator_size);
    grp_HLS_free_1_s_fu_687->allocator_size_ap_vld(grp_HLS_free_1_s_fu_687_allocator_size_ap_vld);
    grp_HLS_free_1_s_fu_687->allocator_size_ap_ack(alloc_HTA_size_ap_ack);
    grp_HLS_free_1_s_fu_687->allocator_free_targe(grp_HLS_free_1_s_fu_687_allocator_free_targe);
    grp_HLS_free_1_s_fu_687->allocator_free_targe_ap_vld(grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld);
    grp_HLS_free_1_s_fu_687->allocator_free_targe_ap_ack(alloc_HTA_free_target_ap_ack);
    grp_HLS_free_1_s_fu_687->allocator_cmd(grp_HLS_free_1_s_fu_687_allocator_cmd);
    grp_HLS_free_1_s_fu_687->allocator_cmd_ap_vld(grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld);
    grp_HLS_free_1_s_fu_687->allocator_cmd_ap_ack(alloc_HTA_cmd_ap_ack);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_HTA_heap_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_33_reg_1784 );
    sensitive << ( HTA_heap_0_addr_16_reg_1789 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_fu_1108_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_26_reg_1846 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( HTA_heap_0_addr_23_reg_1968 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( HTA_heap_0_addr_24_reg_1996 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_20_fu_1613_p2 );
    sensitive << ( newIndex2_fu_722_p1 );
    sensitive << ( newIndex6_cast_fu_787_p1 );
    sensitive << ( newIndex9_fu_849_p1 );
    sensitive << ( newIndex11_cast_fu_902_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( newIndex19_cast_fu_1010_p1 );
    sensitive << ( newIndex21_cast_fu_1015_p1 );
    sensitive << ( newIndex27_fu_1086_p1 );
    sensitive << ( newIndex32_cast_fu_1129_p1 );
    sensitive << ( newIndex18_fu_1190_p1 );
    sensitive << ( newIndex22_cast_fu_1234_p1 );
    sensitive << ( newIndex25_cast_fu_1256_p1 );
    sensitive << ( newIndex31_cast_fu_1349_p1 );
    sensitive << ( newIndex34_cast_fu_1412_p1 );
    sensitive << ( newIndex12_cast_fu_1489_p1 );

    SC_METHOD(thread_HTA_heap_0_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( HTA_heap_0_addr_reg_1635 );
    sensitive << ( newIndex4_cast_fu_766_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_21_fu_944_p1 );
    sensitive << ( tmp_24_fu_964_p1 );
    sensitive << ( tmp_23_fu_990_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( HTA_heap_0_addr_13_reg_1750 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_28_reg_1878 );
    sensitive << ( tmp_11_reg_1882 );
    sensitive << ( HTA_heap_0_addr_18_reg_1886 );
    sensitive << ( HTA_heap_0_addr_17_reg_1901 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( HTA_heap_0_addr_21_reg_1945 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( HTA_heap_0_addr_23_reg_1968 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_35_reg_1991 );
    sensitive << ( HTA_heap_0_addr_24_reg_1996 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_36_reg_2024 );
    sensitive << ( HTA_heap_0_addr_26_reg_2029 );
    sensitive << ( or_cond_reg_2047 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( newIndex7_cast_fu_798_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( newIndex13_cast_fu_914_p1 );
    sensitive << ( newIndex15_cast_fu_978_p1 );
    sensitive << ( newIndex16_cast_fu_1004_p1 );
    sensitive << ( newIndex24_cast_fu_1060_p1 );
    sensitive << ( newIndex33_cast_fu_1385_p1 );
    sensitive << ( newIndex5_fu_1515_p1 );

    SC_METHOD(thread_HTA_heap_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_ap_done );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_33_reg_1784 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_fu_1108_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_26_reg_1846 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_HLS_free_1_s_fu_687_ap_done );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_20_fu_1613_p2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_HTA_heap_0_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_21_fu_944_p1 );
    sensitive << ( tmp_24_fu_964_p1 );
    sensitive << ( tmp_23_fu_990_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_28_reg_1878 );
    sensitive << ( tmp_11_reg_1882 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_35_reg_1991 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_36_reg_2024 );
    sensitive << ( or_cond_reg_2047 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_HTA_heap_0_d0);
    sensitive << ( data_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( tmp_33_reg_1784 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_fu_1108_p2 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_20_fu_1613_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( now_load_phi_fu_1099_p3 );
    sensitive << ( swap_tmp3_fu_1586_p3 );
    sensitive << ( swap_tmp2_fu_1552_p3 );

    SC_METHOD(thread_HTA_heap_0_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( offset_tail_cast_reg_1662 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( offset_new_node_cast_fu_927_p1 );
    sensitive << ( tmp_21_fu_944_p1 );
    sensitive << ( tmp_24_fu_964_p1 );
    sensitive << ( tmp_23_fu_990_p1 );
    sensitive << ( swap_tmp_reg_1799 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_28_reg_1878 );
    sensitive << ( tmp_11_reg_1882 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_35_reg_1991 );
    sensitive << ( tmp_36_reg_2024 );
    sensitive << ( swap_tmp1_reg_2039 );
    sensitive << ( or_cond_reg_2047 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tail_load_phi_fu_1205_p3 );

    SC_METHOD(thread_HTA_heap_0_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_ap_done );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( tmp_33_reg_1784 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_fu_1108_p2 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_20_fu_1613_p2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_HTA_heap_0_we1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_21_fu_944_p1 );
    sensitive << ( tmp_24_fu_964_p1 );
    sensitive << ( tmp_23_fu_990_p1 );
    sensitive << ( tmp_30_reg_1745 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_28_reg_1878 );
    sensitive << ( tmp_11_reg_1882 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_35_reg_1991 );
    sensitive << ( tmp_36_reg_2024 );
    sensitive << ( or_cond_reg_2047 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_HTA_heap_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_33_reg_1784 );
    sensitive << ( HTA_heap_1_addr_14_reg_1794 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_fu_1108_p2 );
    sensitive << ( tmp_26_reg_1846 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( HTA_heap_1_addr_21_reg_1974 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( HTA_heap_1_addr_22_reg_2002 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_20_fu_1613_p2 );
    sensitive << ( newIndex3_cast_fu_755_p1 );
    sensitive << ( newIndex6_cast_fu_787_p1 );
    sensitive << ( newIndex11_cast_fu_902_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( newIndex14_cast_fu_940_p1 );
    sensitive << ( newIndex24_cast_fu_1060_p1 );
    sensitive << ( newIndex27_fu_1086_p1 );
    sensitive << ( newIndex32_cast_fu_1129_p1 );
    sensitive << ( newIndex22_cast_fu_1234_p1 );
    sensitive << ( newIndex25_cast_fu_1256_p1 );
    sensitive << ( newIndex31_cast_fu_1349_p1 );
    sensitive << ( newIndex34_cast_fu_1412_p1 );
    sensitive << ( newIndex12_cast_fu_1489_p1 );

    SC_METHOD(thread_HTA_heap_1_address1);
    sensitive << ( newIndex4_cast_reg_1646 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( tmp_24_reg_1727 );
    sensitive << ( HTA_heap_1_addr_7_reg_1731 );
    sensitive << ( tmp_23_reg_1736 );
    sensitive << ( HTA_heap_1_addr_8_reg_1740 );
    sensitive << ( HTA_heap_1_addr_11_reg_1755 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_28_reg_1878 );
    sensitive << ( tmp_11_reg_1882 );
    sensitive << ( HTA_heap_1_addr_16_reg_1891 );
    sensitive << ( HTA_heap_1_addr_15_reg_1896 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( HTA_heap_1_addr_19_reg_1940 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( HTA_heap_1_addr_21_reg_1974 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_35_reg_1991 );
    sensitive << ( HTA_heap_1_addr_22_reg_2002 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_36_reg_2024 );
    sensitive << ( HTA_heap_1_addr_24_reg_2034 );
    sensitive << ( or_cond_reg_2047 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( newIndex10_cast_fu_884_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( newIndex13_cast_fu_914_p1 );
    sensitive << ( newIndex18_fu_1190_p1 );
    sensitive << ( newIndex33_cast_fu_1385_p1 );
    sensitive << ( newIndex5_fu_1515_p1 );

    SC_METHOD(thread_HTA_heap_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_33_reg_1784 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_fu_1108_p2 );
    sensitive << ( tmp_26_reg_1846 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_HLS_free_1_s_fu_687_ap_done );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_20_fu_1613_p2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_HTA_heap_1_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_ap_done );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( tmp_24_reg_1727 );
    sensitive << ( tmp_23_reg_1736 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_28_reg_1878 );
    sensitive << ( tmp_11_reg_1882 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_35_reg_1991 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_36_reg_2024 );
    sensitive << ( or_cond_reg_2047 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_HTA_heap_1_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( offset_new_node_cast_fu_927_p1 );
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( tmp_33_reg_1784 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_fu_1108_p2 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( offset_last_parent1_reg_543 );
    sensitive << ( tmp_20_fu_1613_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( now_load_phi_fu_1099_p3 );
    sensitive << ( swap_tmp3_fu_1586_p3 );
    sensitive << ( swap_tmp2_fu_1552_p3 );

    SC_METHOD(thread_HTA_heap_1_d1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( offset_new_node_cast_reg_1701 );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( tmp_24_reg_1727 );
    sensitive << ( tmp_23_reg_1736 );
    sensitive << ( swap_tmp_reg_1799 );
    sensitive << ( tmp_28_reg_1878 );
    sensitive << ( tmp_11_reg_1882 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_35_reg_1991 );
    sensitive << ( tmp_36_reg_2024 );
    sensitive << ( swap_tmp1_reg_2039 );
    sensitive << ( or_cond_reg_2047 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_HTA_heap_1_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( tmp_33_reg_1784 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_fu_1108_p2 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_20_fu_1613_p2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_HTA_heap_1_we1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_ap_done );
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( tmp_24_reg_1727 );
    sensitive << ( tmp_23_reg_1736 );
    sensitive << ( tmp_30_reg_1745 );
    sensitive << ( tmp_28_reg_1878 );
    sensitive << ( tmp_11_reg_1882 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_35_reg_1991 );
    sensitive << ( tmp_36_reg_2024 );
    sensitive << ( or_cond_reg_2047 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_HTA_heap_load_5_phi_fu_1418_p3);
    sensitive << ( HTA_heap_1_q0 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( HTA_heap_0_q0 );

    SC_METHOD(thread_HTA_heap_load_phi_fu_1277_p3);
    sensitive << ( HTA_heap_1_q0 );
    sensitive << ( tmp_26_reg_1846 );
    sensitive << ( HTA_heap_0_q0 );

    SC_METHOD(thread_alloc_HTA_addr_ap_ack);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_alloc_HTA_cmd);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_cmd );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_cmd );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_cmd );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_687_allocator_cmd );
    sensitive << ( grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_alloc_HTA_cmd_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_alloc_HTA_free_target);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_free_targe );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_free_targe );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_free_targe );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_687_allocator_free_targe );
    sensitive << ( grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_alloc_HTA_free_target_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_alloc_HTA_size);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_size );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_size );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_size );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_687_allocator_size );
    sensitive << ( grp_HLS_free_1_s_fu_687_allocator_size_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_alloc_HTA_size_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld );
    sensitive << ( grp_HLS_free_1_s_fu_687_allocator_size_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_5_fu_1169_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4);
    sensitive << ( HTA_heap_0_q1 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( HTA_heap_1_q1 );

    SC_METHOD(thread_ap_phi_mux_p_pn2_be_phi_fu_642_p4);
    sensitive << ( offset_left_reg_1985 );
    sensitive << ( offset_right_reg_2018 );
    sensitive << ( or_cond_reg_2047 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_5_fu_1169_p2 );

    SC_METHOD(thread_cnt_insert_cast_fu_807_p1);
    sensitive << ( cnt_insert_reg_563 );

    SC_METHOD(thread_data_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_7_fu_816_p1 );

    SC_METHOD(thread_data_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_dis_output_address0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_6_fu_1200_p1 );

    SC_METHOD(thread_dis_output_ce0);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_dis_output_d0);
    sensitive << ( HTA_heap_0_q1 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_dis_output_we0);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_HLS_free_1_s_fu_687_ap_start);
    sensitive << ( grp_HLS_free_1_s_fu_687_ap_start_reg );

    SC_METHOD(thread_grp_HLS_malloc_1_s_fu_673_ap_start);
    sensitive << ( grp_HLS_malloc_1_s_fu_673_ap_start_reg );

    SC_METHOD(thread_grp_HLS_malloc_2_s_fu_649_ap_start);
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_start_reg );

    SC_METHOD(thread_grp_HLS_malloc_3_s_fu_661_ap_start);
    sensitive << ( grp_HLS_malloc_3_s_fu_661_ap_start_reg );

    SC_METHOD(thread_grp_fu_699_p2);
    sensitive << ( newIndex10_cast1_reg_1707 );

    SC_METHOD(thread_i_1_cast_fu_1165_p1);
    sensitive << ( i_1_reg_605 );

    SC_METHOD(thread_i_2_fu_1174_p2);
    sensitive << ( i_1_reg_605 );

    SC_METHOD(thread_i_fu_1135_p2);
    sensitive << ( cnt_insert_reg_563 );

    SC_METHOD(thread_newIndex10_cast1_fu_933_p3);
    sensitive << ( tmp_10_reg_1691 );

    SC_METHOD(thread_newIndex10_cast2_fu_889_p3);
    sensitive << ( tmp_9_reg_1686 );

    SC_METHOD(thread_newIndex10_cast_fu_884_p1);
    sensitive << ( newIndex10_fu_864_p4 );

    SC_METHOD(thread_newIndex10_fu_864_p4);
    sensitive << ( tmp_9_fu_854_p4 );

    SC_METHOD(thread_newIndex11_cast_fu_902_p1);
    sensitive << ( newIndex11_fu_896_p2 );

    SC_METHOD(thread_newIndex11_fu_896_p2);
    sensitive << ( newIndex10_cast2_fu_889_p3 );

    SC_METHOD(thread_newIndex12_cast_fu_1489_p1);
    sensitive << ( newIndex12_reg_1980 );

    SC_METHOD(thread_newIndex13_cast_fu_914_p1);
    sensitive << ( newIndex13_fu_908_p2 );

    SC_METHOD(thread_newIndex13_fu_908_p2);
    sensitive << ( newIndex10_cast2_fu_889_p3 );

    SC_METHOD(thread_newIndex14_cast_fu_940_p1);
    sensitive << ( newIndex14_reg_1676 );

    SC_METHOD(thread_newIndex15_cast_fu_978_p1);
    sensitive << ( newIndex15_fu_968_p4 );

    SC_METHOD(thread_newIndex15_fu_968_p4);
    sensitive << ( p_sum1_fu_958_p2 );

    SC_METHOD(thread_newIndex16_cast_fu_1004_p1);
    sensitive << ( newIndex16_fu_994_p4 );

    SC_METHOD(thread_newIndex16_fu_994_p4);
    sensitive << ( p_sum2_fu_984_p2 );

    SC_METHOD(thread_newIndex17_fu_1180_p4);
    sensitive << ( offset_now_reg_595 );

    SC_METHOD(thread_newIndex18_fu_1190_p1);
    sensitive << ( newIndex17_fu_1180_p4 );

    SC_METHOD(thread_newIndex19_cast_fu_1010_p1);
    sensitive << ( grp_fu_699_p2 );

    SC_METHOD(thread_newIndex1_fu_714_p3);
    sensitive << ( tmp_1_fu_704_p4 );

    SC_METHOD(thread_newIndex20_fu_1473_p4);
    sensitive << ( offset_left_fu_1462_p3 );

    SC_METHOD(thread_newIndex21_cast_fu_1015_p1);
    sensitive << ( grp_fu_699_p2 );

    SC_METHOD(thread_newIndex22_cast_fu_1234_p1);
    sensitive << ( newIndex22_fu_1224_p4 );

    SC_METHOD(thread_newIndex22_fu_1224_p4);
    sensitive << ( p_sum_fu_1218_p2 );

    SC_METHOD(thread_newIndex23_cast_fu_1038_p1);
    sensitive << ( newIndex23_fu_1028_p4 );

    SC_METHOD(thread_newIndex23_fu_1028_p4);
    sensitive << ( p_pn1_reg_575 );

    SC_METHOD(thread_newIndex24_cast_fu_1060_p1);
    sensitive << ( newIndex24_fu_1050_p4 );

    SC_METHOD(thread_newIndex24_fu_1050_p4);
    sensitive << ( now_0_sum_fu_1044_p2 );

    SC_METHOD(thread_newIndex25_cast_fu_1256_p1);
    sensitive << ( newIndex25_fu_1246_p4 );

    SC_METHOD(thread_newIndex25_fu_1246_p4);
    sensitive << ( p_sum7_fu_1240_p2 );

    SC_METHOD(thread_newIndex26_fu_1076_p4);
    sensitive << ( offset_parent_reg_584 );

    SC_METHOD(thread_newIndex27_fu_1086_p1);
    sensitive << ( newIndex26_fu_1076_p4 );

    SC_METHOD(thread_newIndex28_fu_1318_p4);
    sensitive << ( p_sum3_fu_1312_p2 );

    SC_METHOD(thread_newIndex29_cast_fu_1328_p1);
    sensitive << ( newIndex28_fu_1318_p4 );

    SC_METHOD(thread_newIndex29_fu_1296_p4);
    sensitive << ( p_sum8_fu_1290_p2 );

    SC_METHOD(thread_newIndex2_fu_722_p1);
    sensitive << ( newIndex1_fu_714_p3 );

    SC_METHOD(thread_newIndex30_cast_fu_1306_p1);
    sensitive << ( newIndex29_fu_1296_p4 );

    SC_METHOD(thread_newIndex31_cast_fu_1349_p1);
    sensitive << ( newIndex30_reg_1906 );

    SC_METHOD(thread_newIndex31_fu_1375_p4);
    sensitive << ( now_1_sum1_fu_1365_p2 );

    SC_METHOD(thread_newIndex32_cast_fu_1129_p1);
    sensitive << ( newIndex32_fu_1119_p4 );

    SC_METHOD(thread_newIndex32_fu_1119_p4);
    sensitive << ( p_sum4_fu_1114_p2 );

    SC_METHOD(thread_newIndex33_cast_fu_1385_p1);
    sensitive << ( newIndex31_fu_1375_p4 );

    SC_METHOD(thread_newIndex33_fu_1402_p4);
    sensitive << ( now_1_sum_fu_1397_p2 );

    SC_METHOD(thread_newIndex34_cast_fu_1412_p1);
    sensitive << ( newIndex33_fu_1402_p4 );

    SC_METHOD(thread_newIndex34_fu_1431_p4);
    sensitive << ( p_pn2_reg_617 );

    SC_METHOD(thread_newIndex35_fu_1441_p1);
    sensitive << ( newIndex34_fu_1431_p4 );

    SC_METHOD(thread_newIndex36_fu_1483_p1);
    sensitive << ( newIndex20_fu_1473_p4 );

    SC_METHOD(thread_newIndex3_cast1_fu_747_p3);
    sensitive << ( tmp_2_fu_727_p4 );

    SC_METHOD(thread_newIndex3_cast_fu_755_p1);
    sensitive << ( newIndex3_fu_737_p4 );

    SC_METHOD(thread_newIndex3_fu_737_p4);
    sensitive << ( tmp_2_fu_727_p4 );

    SC_METHOD(thread_newIndex4_cast_fu_766_p1);
    sensitive << ( newIndex4_fu_760_p2 );

    SC_METHOD(thread_newIndex4_fu_760_p2);
    sensitive << ( newIndex3_cast1_fu_747_p3 );

    SC_METHOD(thread_newIndex5_fu_1515_p1);
    sensitive << ( newIndex_fu_1505_p4 );

    SC_METHOD(thread_newIndex6_cast_fu_787_p1);
    sensitive << ( newIndex6_fu_782_p2 );

    SC_METHOD(thread_newIndex6_fu_782_p2);
    sensitive << ( newIndex3_cast1_reg_1640 );

    SC_METHOD(thread_newIndex7_cast_fu_798_p1);
    sensitive << ( newIndex7_fu_793_p2 );

    SC_METHOD(thread_newIndex7_fu_793_p2);
    sensitive << ( newIndex3_cast1_reg_1640 );

    SC_METHOD(thread_newIndex8_fu_841_p3);
    sensitive << ( tmp_8_fu_831_p4 );

    SC_METHOD(thread_newIndex9_fu_849_p1);
    sensitive << ( newIndex8_fu_841_p3 );

    SC_METHOD(thread_newIndex_fu_1505_p4);
    sensitive << ( offset_right_fu_1494_p3 );

    SC_METHOD(thread_now_0_sum_fu_1044_p2);
    sensitive << ( tmp_29_fu_1020_p1 );

    SC_METHOD(thread_now_1_sum1_fu_1365_p2);
    sensitive << ( tmp_31_fu_1361_p1 );

    SC_METHOD(thread_now_1_sum_fu_1397_p2);
    sensitive << ( tmp_31_reg_1926 );

    SC_METHOD(thread_now_load_phi_fu_1099_p3);
    sensitive << ( tmp_30_reg_1745 );
    sensitive << ( HTA_heap_0_q1 );
    sensitive << ( HTA_heap_1_q1 );

    SC_METHOD(thread_offset_head_cast_fu_778_p1);
    sensitive << ( offset_head_fu_771_p3 );

    SC_METHOD(thread_offset_head_fu_771_p3);
    sensitive << ( tmp_1_reg_1630 );

    SC_METHOD(thread_offset_last_parent_1_fu_1157_p3);
    sensitive << ( HTA_heap_0_q0 );
    sensitive << ( sel_tmp2_fu_1152_p2 );
    sensitive << ( sel_tmp1_fu_1145_p3 );

    SC_METHOD(thread_offset_left_fu_1462_p3);
    sensitive << ( HTA_heap_0_q1 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( HTA_heap_1_q1 );

    SC_METHOD(thread_offset_new_node_cast_fu_927_p1);
    sensitive << ( offset_new_node_fu_920_p3 );

    SC_METHOD(thread_offset_new_node_fu_920_p3);
    sensitive << ( tmp_8_reg_1681 );

    SC_METHOD(thread_offset_right_fu_1494_p3);
    sensitive << ( HTA_heap_1_q0 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( HTA_heap_0_q0 );

    SC_METHOD(thread_offset_tail_3_fu_1354_p3);
    sensitive << ( HTA_heap_1_q0 );
    sensitive << ( tmp_26_reg_1846 );
    sensitive << ( HTA_heap_0_q0 );

    SC_METHOD(thread_offset_tail_cast_fu_803_p1);
    sensitive << ( offset_tail_reg_554 );

    SC_METHOD(thread_or_cond_fu_1607_p2);
    sensitive << ( tmp_18_fu_1596_p2 );
    sensitive << ( tmp_19_fu_1601_p2 );

    SC_METHOD(thread_p_sum1_fu_958_p2);
    sensitive << ( tmp_22_fu_954_p1 );

    SC_METHOD(thread_p_sum2_fu_984_p2);
    sensitive << ( tmp_22_fu_954_p1 );

    SC_METHOD(thread_p_sum3_fu_1312_p2);
    sensitive << ( tmp_27_fu_1269_p1 );

    SC_METHOD(thread_p_sum4_fu_1114_p2);
    sensitive << ( tmp_22_reg_1722 );

    SC_METHOD(thread_p_sum6_fu_1447_p2);
    sensitive << ( tmp_31_reg_1926 );

    SC_METHOD(thread_p_sum7_fu_1240_p2);
    sensitive << ( tmp_25_fu_1214_p1 );

    SC_METHOD(thread_p_sum8_fu_1290_p2);
    sensitive << ( tmp_27_fu_1269_p1 );

    SC_METHOD(thread_p_sum9_fu_1334_p2);
    sensitive << ( tmp_25_reg_1853 );

    SC_METHOD(thread_p_sum_fu_1218_p2);
    sensitive << ( tmp_25_fu_1214_p1 );

    SC_METHOD(thread_p_v_fu_1262_p3);
    sensitive << ( HTA_heap_1_q0 );
    sensitive << ( tmp_26_reg_1846 );
    sensitive << ( HTA_heap_0_q0 );

    SC_METHOD(thread_sel_tmp1_fu_1145_p3);
    sensitive << ( tmp_21_reg_1712 );
    sensitive << ( HTA_heap_1_q0 );
    sensitive << ( offset_last_parent1_reg_543 );

    SC_METHOD(thread_sel_tmp2_fu_1152_p2);
    sensitive << ( tmp_s_reg_1717 );
    sensitive << ( tmp_34_fu_1141_p1 );

    SC_METHOD(thread_sel_tmp3_fu_1547_p2);
    sensitive << ( tmp_35_reg_1991 );
    sensitive << ( sel_tmp_fu_1541_p2 );

    SC_METHOD(thread_sel_tmp4_fu_1567_p3);
    sensitive << ( HTA_heap_0_q1 );
    sensitive << ( tmp_17_fu_1562_p2 );

    SC_METHOD(thread_sel_tmp5_fu_1575_p2);
    sensitive << ( tmp_17_fu_1562_p2 );

    SC_METHOD(thread_sel_tmp6_fu_1581_p2);
    sensitive << ( tmp_36_reg_2024 );
    sensitive << ( sel_tmp5_fu_1575_p2 );

    SC_METHOD(thread_sel_tmp9_fu_1533_p3);
    sensitive << ( HTA_heap_0_q0 );
    sensitive << ( tmp_16_fu_1528_p2 );

    SC_METHOD(thread_sel_tmp_fu_1541_p2);
    sensitive << ( tmp_16_fu_1528_p2 );

    SC_METHOD(thread_swap_tmp1_fu_1521_p3);
    sensitive << ( HTA_heap_0_q1 );
    sensitive << ( tmp_32_reg_1932 );
    sensitive << ( HTA_heap_1_q1 );

    SC_METHOD(thread_swap_tmp2_fu_1552_p3);
    sensitive << ( HTA_heap_1_q0 );
    sensitive << ( sel_tmp3_fu_1547_p2 );
    sensitive << ( sel_tmp9_fu_1533_p3 );

    SC_METHOD(thread_swap_tmp3_fu_1586_p3);
    sensitive << ( HTA_heap_1_q1 );
    sensitive << ( sel_tmp6_fu_1581_p2 );
    sensitive << ( sel_tmp4_fu_1567_p3 );

    SC_METHOD(thread_swap_tmp_fu_1092_p3);
    sensitive << ( HTA_heap_1_q0 );
    sensitive << ( tmp_33_reg_1784 );
    sensitive << ( HTA_heap_0_q0 );

    SC_METHOD(thread_tail_load_phi_fu_1205_p3);
    sensitive << ( tmp_26_fu_1196_p1 );
    sensitive << ( HTA_heap_0_q0 );
    sensitive << ( HTA_heap_1_q1 );

    SC_METHOD(thread_tmp_11_fu_1284_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( HTA_heap_load_phi_fu_1277_p3 );

    SC_METHOD(thread_tmp_12_fu_1066_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( offset_parent_reg_584 );

    SC_METHOD(thread_tmp_13_fu_1108_p2);
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( swap_tmp_fu_1092_p3 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( now_load_phi_fu_1099_p3 );

    SC_METHOD(thread_tmp_14_fu_1391_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 );

    SC_METHOD(thread_tmp_15_fu_1425_p2);
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( HTA_heap_load_5_phi_fu_1418_p3 );

    SC_METHOD(thread_tmp_16_fu_1528_p2);
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( offset_left_reg_1985 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_tmp_17_fu_1562_p2);
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( offset_right_reg_2018 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_tmp_18_fu_1596_p2);
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( swap_tmp1_reg_2039 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( swap_tmp2_fu_1552_p3 );

    SC_METHOD(thread_tmp_19_fu_1601_p2);
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( swap_tmp3_fu_1586_p3 );
    sensitive << ( swap_tmp2_fu_1552_p3 );

    SC_METHOD(thread_tmp_1_fu_704_p4);
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_return );

    SC_METHOD(thread_tmp_20_fu_1613_p2);
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( swap_tmp1_reg_2039 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( swap_tmp3_fu_1586_p3 );

    SC_METHOD(thread_tmp_21_fu_944_p1);
    sensitive << ( cnt_insert_reg_563 );

    SC_METHOD(thread_tmp_22_fu_954_p1);
    sensitive << ( offset_last_parent1_reg_543 );

    SC_METHOD(thread_tmp_23_fu_990_p1);
    sensitive << ( offset_last_parent1_reg_543 );

    SC_METHOD(thread_tmp_24_fu_964_p1);
    sensitive << ( offset_last_parent1_reg_543 );

    SC_METHOD(thread_tmp_25_fu_1214_p1);
    sensitive << ( offset_now_reg_595 );

    SC_METHOD(thread_tmp_26_fu_1196_p1);
    sensitive << ( offset_now_reg_595 );

    SC_METHOD(thread_tmp_27_fu_1269_p1);
    sensitive << ( p_v_fu_1262_p3 );

    SC_METHOD(thread_tmp_28_fu_1273_p1);
    sensitive << ( p_v_fu_1262_p3 );

    SC_METHOD(thread_tmp_29_fu_1020_p1);
    sensitive << ( p_pn1_reg_575 );

    SC_METHOD(thread_tmp_2_fu_727_p4);
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_return );

    SC_METHOD(thread_tmp_30_fu_1024_p1);
    sensitive << ( p_pn1_reg_575 );

    SC_METHOD(thread_tmp_31_fu_1361_p1);
    sensitive << ( p_pn2_reg_617 );

    SC_METHOD(thread_tmp_32_fu_1371_p1);
    sensitive << ( p_pn2_reg_617 );

    SC_METHOD(thread_tmp_33_fu_1072_p1);
    sensitive << ( offset_parent_reg_584 );

    SC_METHOD(thread_tmp_34_fu_1141_p1);
    sensitive << ( offset_last_parent1_reg_543 );

    SC_METHOD(thread_tmp_35_fu_1469_p1);
    sensitive << ( offset_left_fu_1462_p3 );

    SC_METHOD(thread_tmp_36_fu_1501_p1);
    sensitive << ( offset_right_fu_1494_p3 );

    SC_METHOD(thread_tmp_3_fu_811_p2);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( cnt_insert_cast_fu_807_p1 );

    SC_METHOD(thread_tmp_5_fu_1169_p2);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( i_1_cast_fu_1165_p1 );

    SC_METHOD(thread_tmp_6_fu_1200_p1);
    sensitive << ( i_1_reg_605 );

    SC_METHOD(thread_tmp_7_fu_816_p1);
    sensitive << ( cnt_insert_reg_563 );

    SC_METHOD(thread_tmp_8_fu_831_p4);
    sensitive << ( grp_HLS_malloc_3_s_fu_661_ap_return );

    SC_METHOD(thread_tmp_9_fu_854_p4);
    sensitive << ( grp_HLS_malloc_3_s_fu_661_ap_return );

    SC_METHOD(thread_tmp_s_fu_948_p2);
    sensitive << ( tmp_21_fu_944_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_HLS_malloc_2_s_fu_649_ap_done );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_3_fu_811_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_HLS_malloc_3_s_fu_661_ap_done );
    sensitive << ( tmp_30_fu_1024_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_12_reg_1780 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_fu_1108_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_5_fu_1169_p2 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_HLS_free_1_s_fu_687_ap_done );
    sensitive << ( tmp_14_reg_1950 );
    sensitive << ( tmp_15_fu_1425_p2 );
    sensitive << ( tmp_15_reg_1964 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( or_cond_fu_1607_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_HLS_malloc_1_s_fu_673_ap_done );
    sensitive << ( tmp_20_fu_1613_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000000000000000000001";
    grp_HLS_malloc_2_s_fu_649_ap_start_reg = SC_LOGIC_0;
    grp_HLS_malloc_3_s_fu_661_ap_start_reg = SC_LOGIC_0;
    grp_HLS_malloc_1_s_fu_673_ap_start_reg = SC_LOGIC_0;
    grp_HLS_free_1_s_fu_687_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "HLS_MAXHEAP_HTA_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, data_address0, "(port)data_address0");
    sc_trace(mVcdFile, data_ce0, "(port)data_ce0");
    sc_trace(mVcdFile, data_q0, "(port)data_q0");
    sc_trace(mVcdFile, dis_output_address0, "(port)dis_output_address0");
    sc_trace(mVcdFile, dis_output_ce0, "(port)dis_output_ce0");
    sc_trace(mVcdFile, dis_output_we0, "(port)dis_output_we0");
    sc_trace(mVcdFile, dis_output_d0, "(port)dis_output_d0");
    sc_trace(mVcdFile, alloc_HTA_size, "(port)alloc_HTA_size");
    sc_trace(mVcdFile, alloc_HTA_size_ap_vld, "(port)alloc_HTA_size_ap_vld");
    sc_trace(mVcdFile, alloc_HTA_size_ap_ack, "(port)alloc_HTA_size_ap_ack");
    sc_trace(mVcdFile, alloc_HTA_free_target, "(port)alloc_HTA_free_target");
    sc_trace(mVcdFile, alloc_HTA_free_target_ap_vld, "(port)alloc_HTA_free_target_ap_vld");
    sc_trace(mVcdFile, alloc_HTA_free_target_ap_ack, "(port)alloc_HTA_free_target_ap_ack");
    sc_trace(mVcdFile, alloc_HTA_addr, "(port)alloc_HTA_addr");
    sc_trace(mVcdFile, alloc_HTA_addr_ap_vld, "(port)alloc_HTA_addr_ap_vld");
    sc_trace(mVcdFile, alloc_HTA_addr_ap_ack, "(port)alloc_HTA_addr_ap_ack");
    sc_trace(mVcdFile, alloc_HTA_cmd, "(port)alloc_HTA_cmd");
    sc_trace(mVcdFile, alloc_HTA_cmd_ap_vld, "(port)alloc_HTA_cmd_ap_vld");
    sc_trace(mVcdFile, alloc_HTA_cmd_ap_ack, "(port)alloc_HTA_cmd_ap_ack");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_1_fu_704_p4, "tmp_1_fu_704_p4");
    sc_trace(mVcdFile, tmp_1_reg_1630, "tmp_1_reg_1630");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_ap_idle, "grp_HLS_malloc_2_s_fu_649_ap_idle");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_ap_ready, "grp_HLS_malloc_2_s_fu_649_ap_ready");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_ap_done, "grp_HLS_malloc_2_s_fu_649_ap_done");
    sc_trace(mVcdFile, HTA_heap_0_addr_reg_1635, "HTA_heap_0_addr_reg_1635");
    sc_trace(mVcdFile, newIndex3_cast1_fu_747_p3, "newIndex3_cast1_fu_747_p3");
    sc_trace(mVcdFile, newIndex3_cast1_reg_1640, "newIndex3_cast1_reg_1640");
    sc_trace(mVcdFile, newIndex4_cast_fu_766_p1, "newIndex4_cast_fu_766_p1");
    sc_trace(mVcdFile, newIndex4_cast_reg_1646, "newIndex4_cast_reg_1646");
    sc_trace(mVcdFile, offset_head_fu_771_p3, "offset_head_fu_771_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, offset_head_cast_fu_778_p1, "offset_head_cast_fu_778_p1");
    sc_trace(mVcdFile, offset_head_cast_reg_1656, "offset_head_cast_reg_1656");
    sc_trace(mVcdFile, offset_tail_cast_fu_803_p1, "offset_tail_cast_fu_803_p1");
    sc_trace(mVcdFile, offset_tail_cast_reg_1662, "offset_tail_cast_reg_1662");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_3_fu_811_p2, "tmp_3_fu_811_p2");
    sc_trace(mVcdFile, newIndex14_reg_1676, "newIndex14_reg_1676");
    sc_trace(mVcdFile, tmp_8_fu_831_p4, "tmp_8_fu_831_p4");
    sc_trace(mVcdFile, tmp_8_reg_1681, "tmp_8_reg_1681");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_ap_idle, "grp_HLS_malloc_3_s_fu_661_ap_idle");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_ap_ready, "grp_HLS_malloc_3_s_fu_661_ap_ready");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_ap_done, "grp_HLS_malloc_3_s_fu_661_ap_done");
    sc_trace(mVcdFile, tmp_9_fu_854_p4, "tmp_9_fu_854_p4");
    sc_trace(mVcdFile, tmp_9_reg_1686, "tmp_9_reg_1686");
    sc_trace(mVcdFile, tmp_10_reg_1691, "tmp_10_reg_1691");
    sc_trace(mVcdFile, offset_new_node_fu_920_p3, "offset_new_node_fu_920_p3");
    sc_trace(mVcdFile, offset_new_node_reg_1696, "offset_new_node_reg_1696");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, offset_new_node_cast_fu_927_p1, "offset_new_node_cast_fu_927_p1");
    sc_trace(mVcdFile, offset_new_node_cast_reg_1701, "offset_new_node_cast_reg_1701");
    sc_trace(mVcdFile, newIndex10_cast1_fu_933_p3, "newIndex10_cast1_fu_933_p3");
    sc_trace(mVcdFile, newIndex10_cast1_reg_1707, "newIndex10_cast1_reg_1707");
    sc_trace(mVcdFile, tmp_21_fu_944_p1, "tmp_21_fu_944_p1");
    sc_trace(mVcdFile, tmp_21_reg_1712, "tmp_21_reg_1712");
    sc_trace(mVcdFile, tmp_s_fu_948_p2, "tmp_s_fu_948_p2");
    sc_trace(mVcdFile, tmp_s_reg_1717, "tmp_s_reg_1717");
    sc_trace(mVcdFile, tmp_22_fu_954_p1, "tmp_22_fu_954_p1");
    sc_trace(mVcdFile, tmp_22_reg_1722, "tmp_22_reg_1722");
    sc_trace(mVcdFile, tmp_24_fu_964_p1, "tmp_24_fu_964_p1");
    sc_trace(mVcdFile, tmp_24_reg_1727, "tmp_24_reg_1727");
    sc_trace(mVcdFile, HTA_heap_1_addr_7_reg_1731, "HTA_heap_1_addr_7_reg_1731");
    sc_trace(mVcdFile, tmp_23_fu_990_p1, "tmp_23_fu_990_p1");
    sc_trace(mVcdFile, tmp_23_reg_1736, "tmp_23_reg_1736");
    sc_trace(mVcdFile, HTA_heap_1_addr_8_reg_1740, "HTA_heap_1_addr_8_reg_1740");
    sc_trace(mVcdFile, tmp_30_fu_1024_p1, "tmp_30_fu_1024_p1");
    sc_trace(mVcdFile, tmp_30_reg_1745, "tmp_30_reg_1745");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, HTA_heap_0_addr_13_reg_1750, "HTA_heap_0_addr_13_reg_1750");
    sc_trace(mVcdFile, HTA_heap_1_addr_11_reg_1755, "HTA_heap_1_addr_11_reg_1755");
    sc_trace(mVcdFile, HTA_heap_1_q0, "HTA_heap_1_q0");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, HTA_heap_0_q1, "HTA_heap_0_q1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_12_fu_1066_p2, "tmp_12_fu_1066_p2");
    sc_trace(mVcdFile, tmp_12_reg_1780, "tmp_12_reg_1780");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_33_fu_1072_p1, "tmp_33_fu_1072_p1");
    sc_trace(mVcdFile, tmp_33_reg_1784, "tmp_33_reg_1784");
    sc_trace(mVcdFile, HTA_heap_0_addr_16_reg_1789, "HTA_heap_0_addr_16_reg_1789");
    sc_trace(mVcdFile, HTA_heap_1_addr_14_reg_1794, "HTA_heap_1_addr_14_reg_1794");
    sc_trace(mVcdFile, swap_tmp_fu_1092_p3, "swap_tmp_fu_1092_p3");
    sc_trace(mVcdFile, swap_tmp_reg_1799, "swap_tmp_reg_1799");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_13_fu_1108_p2, "tmp_13_fu_1108_p2");
    sc_trace(mVcdFile, i_fu_1135_p2, "i_fu_1135_p2");
    sc_trace(mVcdFile, i_reg_1818, "i_reg_1818");
    sc_trace(mVcdFile, offset_last_parent_1_fu_1157_p3, "offset_last_parent_1_fu_1157_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_2_fu_1174_p2, "i_2_fu_1174_p2");
    sc_trace(mVcdFile, i_2_reg_1831, "i_2_reg_1831");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_5_fu_1169_p2, "tmp_5_fu_1169_p2");
    sc_trace(mVcdFile, tmp_26_fu_1196_p1, "tmp_26_fu_1196_p1");
    sc_trace(mVcdFile, tmp_26_reg_1846, "tmp_26_reg_1846");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_25_fu_1214_p1, "tmp_25_fu_1214_p1");
    sc_trace(mVcdFile, tmp_25_reg_1853, "tmp_25_reg_1853");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_28_fu_1273_p1, "tmp_28_fu_1273_p1");
    sc_trace(mVcdFile, tmp_28_reg_1878, "tmp_28_reg_1878");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_11_fu_1284_p2, "tmp_11_fu_1284_p2");
    sc_trace(mVcdFile, tmp_11_reg_1882, "tmp_11_reg_1882");
    sc_trace(mVcdFile, HTA_heap_0_addr_18_reg_1886, "HTA_heap_0_addr_18_reg_1886");
    sc_trace(mVcdFile, HTA_heap_1_addr_16_reg_1891, "HTA_heap_1_addr_16_reg_1891");
    sc_trace(mVcdFile, HTA_heap_1_addr_15_reg_1896, "HTA_heap_1_addr_15_reg_1896");
    sc_trace(mVcdFile, HTA_heap_0_addr_17_reg_1901, "HTA_heap_0_addr_17_reg_1901");
    sc_trace(mVcdFile, newIndex30_reg_1906, "newIndex30_reg_1906");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_ap_idle, "grp_HLS_free_1_s_fu_687_ap_idle");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_ap_ready, "grp_HLS_free_1_s_fu_687_ap_ready");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_ap_done, "grp_HLS_free_1_s_fu_687_ap_done");
    sc_trace(mVcdFile, offset_tail_3_fu_1354_p3, "offset_tail_3_fu_1354_p3");
    sc_trace(mVcdFile, offset_tail_3_reg_1921, "offset_tail_3_reg_1921");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, tmp_31_fu_1361_p1, "tmp_31_fu_1361_p1");
    sc_trace(mVcdFile, tmp_31_reg_1926, "tmp_31_reg_1926");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, tmp_32_fu_1371_p1, "tmp_32_fu_1371_p1");
    sc_trace(mVcdFile, tmp_32_reg_1932, "tmp_32_reg_1932");
    sc_trace(mVcdFile, HTA_heap_1_addr_19_reg_1940, "HTA_heap_1_addr_19_reg_1940");
    sc_trace(mVcdFile, HTA_heap_0_addr_21_reg_1945, "HTA_heap_0_addr_21_reg_1945");
    sc_trace(mVcdFile, tmp_14_fu_1391_p2, "tmp_14_fu_1391_p2");
    sc_trace(mVcdFile, tmp_14_reg_1950, "tmp_14_reg_1950");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_15_fu_1425_p2, "tmp_15_fu_1425_p2");
    sc_trace(mVcdFile, tmp_15_reg_1964, "tmp_15_reg_1964");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, HTA_heap_0_addr_23_reg_1968, "HTA_heap_0_addr_23_reg_1968");
    sc_trace(mVcdFile, HTA_heap_1_addr_21_reg_1974, "HTA_heap_1_addr_21_reg_1974");
    sc_trace(mVcdFile, newIndex12_reg_1980, "newIndex12_reg_1980");
    sc_trace(mVcdFile, offset_left_fu_1462_p3, "offset_left_fu_1462_p3");
    sc_trace(mVcdFile, offset_left_reg_1985, "offset_left_reg_1985");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, tmp_35_fu_1469_p1, "tmp_35_fu_1469_p1");
    sc_trace(mVcdFile, tmp_35_reg_1991, "tmp_35_reg_1991");
    sc_trace(mVcdFile, HTA_heap_0_addr_24_reg_1996, "HTA_heap_0_addr_24_reg_1996");
    sc_trace(mVcdFile, HTA_heap_1_addr_22_reg_2002, "HTA_heap_1_addr_22_reg_2002");
    sc_trace(mVcdFile, offset_right_fu_1494_p3, "offset_right_fu_1494_p3");
    sc_trace(mVcdFile, offset_right_reg_2018, "offset_right_reg_2018");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, tmp_36_fu_1501_p1, "tmp_36_fu_1501_p1");
    sc_trace(mVcdFile, tmp_36_reg_2024, "tmp_36_reg_2024");
    sc_trace(mVcdFile, HTA_heap_0_addr_26_reg_2029, "HTA_heap_0_addr_26_reg_2029");
    sc_trace(mVcdFile, HTA_heap_1_addr_24_reg_2034, "HTA_heap_1_addr_24_reg_2034");
    sc_trace(mVcdFile, swap_tmp1_fu_1521_p3, "swap_tmp1_fu_1521_p3");
    sc_trace(mVcdFile, swap_tmp1_reg_2039, "swap_tmp1_reg_2039");
    sc_trace(mVcdFile, or_cond_fu_1607_p2, "or_cond_fu_1607_p2");
    sc_trace(mVcdFile, or_cond_reg_2047, "or_cond_reg_2047");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, HTA_heap_0_address0, "HTA_heap_0_address0");
    sc_trace(mVcdFile, HTA_heap_0_ce0, "HTA_heap_0_ce0");
    sc_trace(mVcdFile, HTA_heap_0_we0, "HTA_heap_0_we0");
    sc_trace(mVcdFile, HTA_heap_0_d0, "HTA_heap_0_d0");
    sc_trace(mVcdFile, HTA_heap_0_q0, "HTA_heap_0_q0");
    sc_trace(mVcdFile, HTA_heap_0_address1, "HTA_heap_0_address1");
    sc_trace(mVcdFile, HTA_heap_0_ce1, "HTA_heap_0_ce1");
    sc_trace(mVcdFile, HTA_heap_0_we1, "HTA_heap_0_we1");
    sc_trace(mVcdFile, HTA_heap_0_d1, "HTA_heap_0_d1");
    sc_trace(mVcdFile, HTA_heap_1_address0, "HTA_heap_1_address0");
    sc_trace(mVcdFile, HTA_heap_1_ce0, "HTA_heap_1_ce0");
    sc_trace(mVcdFile, HTA_heap_1_we0, "HTA_heap_1_we0");
    sc_trace(mVcdFile, HTA_heap_1_d0, "HTA_heap_1_d0");
    sc_trace(mVcdFile, HTA_heap_1_address1, "HTA_heap_1_address1");
    sc_trace(mVcdFile, HTA_heap_1_ce1, "HTA_heap_1_ce1");
    sc_trace(mVcdFile, HTA_heap_1_we1, "HTA_heap_1_we1");
    sc_trace(mVcdFile, HTA_heap_1_d1, "HTA_heap_1_d1");
    sc_trace(mVcdFile, HTA_heap_1_q1, "HTA_heap_1_q1");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_ap_start, "grp_HLS_malloc_2_s_fu_649_ap_start");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_allocator_size, "grp_HLS_malloc_2_s_fu_649_allocator_size");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld, "grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_allocator_free_targe, "grp_HLS_malloc_2_s_fu_649_allocator_free_targe");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld, "grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack, "grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_allocator_cmd, "grp_HLS_malloc_2_s_fu_649_allocator_cmd");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld, "grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_ap_return, "grp_HLS_malloc_2_s_fu_649_ap_return");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_ap_start, "grp_HLS_malloc_3_s_fu_661_ap_start");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_allocator_size, "grp_HLS_malloc_3_s_fu_661_allocator_size");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld, "grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_allocator_free_targe, "grp_HLS_malloc_3_s_fu_661_allocator_free_targe");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld, "grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack, "grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_allocator_cmd, "grp_HLS_malloc_3_s_fu_661_allocator_cmd");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld, "grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_ap_return, "grp_HLS_malloc_3_s_fu_661_ap_return");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_ap_start, "grp_HLS_malloc_1_s_fu_673_ap_start");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_ap_done, "grp_HLS_malloc_1_s_fu_673_ap_done");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_ap_idle, "grp_HLS_malloc_1_s_fu_673_ap_idle");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_ap_ready, "grp_HLS_malloc_1_s_fu_673_ap_ready");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_allocator_size, "grp_HLS_malloc_1_s_fu_673_allocator_size");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld, "grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_allocator_free_targe, "grp_HLS_malloc_1_s_fu_673_allocator_free_targe");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld, "grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack, "grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_allocator_cmd, "grp_HLS_malloc_1_s_fu_673_allocator_cmd");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld, "grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_ap_start, "grp_HLS_free_1_s_fu_687_ap_start");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_allocator_size, "grp_HLS_free_1_s_fu_687_allocator_size");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_allocator_size_ap_vld, "grp_HLS_free_1_s_fu_687_allocator_size_ap_vld");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_allocator_free_targe, "grp_HLS_free_1_s_fu_687_allocator_free_targe");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld, "grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_allocator_cmd, "grp_HLS_free_1_s_fu_687_allocator_cmd");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld, "grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld");
    sc_trace(mVcdFile, offset_last_parent1_reg_543, "offset_last_parent1_reg_543");
    sc_trace(mVcdFile, offset_tail_reg_554, "offset_tail_reg_554");
    sc_trace(mVcdFile, cnt_insert_reg_563, "cnt_insert_reg_563");
    sc_trace(mVcdFile, p_pn1_reg_575, "p_pn1_reg_575");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, offset_parent_reg_584, "offset_parent_reg_584");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, offset_now_reg_595, "offset_now_reg_595");
    sc_trace(mVcdFile, tmp_20_fu_1613_p2, "tmp_20_fu_1613_p2");
    sc_trace(mVcdFile, i_1_reg_605, "i_1_reg_605");
    sc_trace(mVcdFile, p_pn2_reg_617, "p_pn2_reg_617");
    sc_trace(mVcdFile, ap_phi_mux_p_pn2_be_phi_fu_642_p4, "ap_phi_mux_p_pn2_be_phi_fu_642_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4, "ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4");
    sc_trace(mVcdFile, grp_HLS_malloc_2_s_fu_649_ap_start_reg, "grp_HLS_malloc_2_s_fu_649_ap_start_reg");
    sc_trace(mVcdFile, grp_HLS_malloc_3_s_fu_661_ap_start_reg, "grp_HLS_malloc_3_s_fu_661_ap_start_reg");
    sc_trace(mVcdFile, grp_HLS_malloc_1_s_fu_673_ap_start_reg, "grp_HLS_malloc_1_s_fu_673_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_HLS_free_1_s_fu_687_ap_start_reg, "grp_HLS_free_1_s_fu_687_ap_start_reg");
    sc_trace(mVcdFile, newIndex2_fu_722_p1, "newIndex2_fu_722_p1");
    sc_trace(mVcdFile, newIndex3_cast_fu_755_p1, "newIndex3_cast_fu_755_p1");
    sc_trace(mVcdFile, newIndex6_cast_fu_787_p1, "newIndex6_cast_fu_787_p1");
    sc_trace(mVcdFile, newIndex7_cast_fu_798_p1, "newIndex7_cast_fu_798_p1");
    sc_trace(mVcdFile, tmp_7_fu_816_p1, "tmp_7_fu_816_p1");
    sc_trace(mVcdFile, newIndex9_fu_849_p1, "newIndex9_fu_849_p1");
    sc_trace(mVcdFile, newIndex10_cast_fu_884_p1, "newIndex10_cast_fu_884_p1");
    sc_trace(mVcdFile, newIndex11_cast_fu_902_p1, "newIndex11_cast_fu_902_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, newIndex13_cast_fu_914_p1, "newIndex13_cast_fu_914_p1");
    sc_trace(mVcdFile, newIndex14_cast_fu_940_p1, "newIndex14_cast_fu_940_p1");
    sc_trace(mVcdFile, newIndex15_cast_fu_978_p1, "newIndex15_cast_fu_978_p1");
    sc_trace(mVcdFile, newIndex16_cast_fu_1004_p1, "newIndex16_cast_fu_1004_p1");
    sc_trace(mVcdFile, newIndex19_cast_fu_1010_p1, "newIndex19_cast_fu_1010_p1");
    sc_trace(mVcdFile, newIndex21_cast_fu_1015_p1, "newIndex21_cast_fu_1015_p1");
    sc_trace(mVcdFile, newIndex23_cast_fu_1038_p1, "newIndex23_cast_fu_1038_p1");
    sc_trace(mVcdFile, newIndex24_cast_fu_1060_p1, "newIndex24_cast_fu_1060_p1");
    sc_trace(mVcdFile, newIndex27_fu_1086_p1, "newIndex27_fu_1086_p1");
    sc_trace(mVcdFile, newIndex32_cast_fu_1129_p1, "newIndex32_cast_fu_1129_p1");
    sc_trace(mVcdFile, newIndex18_fu_1190_p1, "newIndex18_fu_1190_p1");
    sc_trace(mVcdFile, tmp_6_fu_1200_p1, "tmp_6_fu_1200_p1");
    sc_trace(mVcdFile, newIndex22_cast_fu_1234_p1, "newIndex22_cast_fu_1234_p1");
    sc_trace(mVcdFile, newIndex25_cast_fu_1256_p1, "newIndex25_cast_fu_1256_p1");
    sc_trace(mVcdFile, newIndex30_cast_fu_1306_p1, "newIndex30_cast_fu_1306_p1");
    sc_trace(mVcdFile, newIndex29_cast_fu_1328_p1, "newIndex29_cast_fu_1328_p1");
    sc_trace(mVcdFile, newIndex31_cast_fu_1349_p1, "newIndex31_cast_fu_1349_p1");
    sc_trace(mVcdFile, newIndex33_cast_fu_1385_p1, "newIndex33_cast_fu_1385_p1");
    sc_trace(mVcdFile, newIndex34_cast_fu_1412_p1, "newIndex34_cast_fu_1412_p1");
    sc_trace(mVcdFile, newIndex35_fu_1441_p1, "newIndex35_fu_1441_p1");
    sc_trace(mVcdFile, newIndex36_fu_1483_p1, "newIndex36_fu_1483_p1");
    sc_trace(mVcdFile, newIndex12_cast_fu_1489_p1, "newIndex12_cast_fu_1489_p1");
    sc_trace(mVcdFile, newIndex5_fu_1515_p1, "newIndex5_fu_1515_p1");
    sc_trace(mVcdFile, now_load_phi_fu_1099_p3, "now_load_phi_fu_1099_p3");
    sc_trace(mVcdFile, tail_load_phi_fu_1205_p3, "tail_load_phi_fu_1205_p3");
    sc_trace(mVcdFile, swap_tmp3_fu_1586_p3, "swap_tmp3_fu_1586_p3");
    sc_trace(mVcdFile, swap_tmp2_fu_1552_p3, "swap_tmp2_fu_1552_p3");
    sc_trace(mVcdFile, newIndex1_fu_714_p3, "newIndex1_fu_714_p3");
    sc_trace(mVcdFile, tmp_2_fu_727_p4, "tmp_2_fu_727_p4");
    sc_trace(mVcdFile, newIndex3_fu_737_p4, "newIndex3_fu_737_p4");
    sc_trace(mVcdFile, newIndex4_fu_760_p2, "newIndex4_fu_760_p2");
    sc_trace(mVcdFile, newIndex6_fu_782_p2, "newIndex6_fu_782_p2");
    sc_trace(mVcdFile, newIndex7_fu_793_p2, "newIndex7_fu_793_p2");
    sc_trace(mVcdFile, cnt_insert_cast_fu_807_p1, "cnt_insert_cast_fu_807_p1");
    sc_trace(mVcdFile, newIndex8_fu_841_p3, "newIndex8_fu_841_p3");
    sc_trace(mVcdFile, newIndex10_fu_864_p4, "newIndex10_fu_864_p4");
    sc_trace(mVcdFile, newIndex10_cast2_fu_889_p3, "newIndex10_cast2_fu_889_p3");
    sc_trace(mVcdFile, newIndex11_fu_896_p2, "newIndex11_fu_896_p2");
    sc_trace(mVcdFile, newIndex13_fu_908_p2, "newIndex13_fu_908_p2");
    sc_trace(mVcdFile, p_sum1_fu_958_p2, "p_sum1_fu_958_p2");
    sc_trace(mVcdFile, newIndex15_fu_968_p4, "newIndex15_fu_968_p4");
    sc_trace(mVcdFile, p_sum2_fu_984_p2, "p_sum2_fu_984_p2");
    sc_trace(mVcdFile, newIndex16_fu_994_p4, "newIndex16_fu_994_p4");
    sc_trace(mVcdFile, grp_fu_699_p2, "grp_fu_699_p2");
    sc_trace(mVcdFile, newIndex23_fu_1028_p4, "newIndex23_fu_1028_p4");
    sc_trace(mVcdFile, tmp_29_fu_1020_p1, "tmp_29_fu_1020_p1");
    sc_trace(mVcdFile, now_0_sum_fu_1044_p2, "now_0_sum_fu_1044_p2");
    sc_trace(mVcdFile, newIndex24_fu_1050_p4, "newIndex24_fu_1050_p4");
    sc_trace(mVcdFile, newIndex26_fu_1076_p4, "newIndex26_fu_1076_p4");
    sc_trace(mVcdFile, p_sum4_fu_1114_p2, "p_sum4_fu_1114_p2");
    sc_trace(mVcdFile, newIndex32_fu_1119_p4, "newIndex32_fu_1119_p4");
    sc_trace(mVcdFile, tmp_34_fu_1141_p1, "tmp_34_fu_1141_p1");
    sc_trace(mVcdFile, sel_tmp2_fu_1152_p2, "sel_tmp2_fu_1152_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_1145_p3, "sel_tmp1_fu_1145_p3");
    sc_trace(mVcdFile, i_1_cast_fu_1165_p1, "i_1_cast_fu_1165_p1");
    sc_trace(mVcdFile, newIndex17_fu_1180_p4, "newIndex17_fu_1180_p4");
    sc_trace(mVcdFile, p_sum_fu_1218_p2, "p_sum_fu_1218_p2");
    sc_trace(mVcdFile, newIndex22_fu_1224_p4, "newIndex22_fu_1224_p4");
    sc_trace(mVcdFile, p_sum7_fu_1240_p2, "p_sum7_fu_1240_p2");
    sc_trace(mVcdFile, newIndex25_fu_1246_p4, "newIndex25_fu_1246_p4");
    sc_trace(mVcdFile, p_v_fu_1262_p3, "p_v_fu_1262_p3");
    sc_trace(mVcdFile, HTA_heap_load_phi_fu_1277_p3, "HTA_heap_load_phi_fu_1277_p3");
    sc_trace(mVcdFile, tmp_27_fu_1269_p1, "tmp_27_fu_1269_p1");
    sc_trace(mVcdFile, p_sum8_fu_1290_p2, "p_sum8_fu_1290_p2");
    sc_trace(mVcdFile, newIndex29_fu_1296_p4, "newIndex29_fu_1296_p4");
    sc_trace(mVcdFile, p_sum3_fu_1312_p2, "p_sum3_fu_1312_p2");
    sc_trace(mVcdFile, newIndex28_fu_1318_p4, "newIndex28_fu_1318_p4");
    sc_trace(mVcdFile, p_sum9_fu_1334_p2, "p_sum9_fu_1334_p2");
    sc_trace(mVcdFile, now_1_sum1_fu_1365_p2, "now_1_sum1_fu_1365_p2");
    sc_trace(mVcdFile, newIndex31_fu_1375_p4, "newIndex31_fu_1375_p4");
    sc_trace(mVcdFile, now_1_sum_fu_1397_p2, "now_1_sum_fu_1397_p2");
    sc_trace(mVcdFile, newIndex33_fu_1402_p4, "newIndex33_fu_1402_p4");
    sc_trace(mVcdFile, HTA_heap_load_5_phi_fu_1418_p3, "HTA_heap_load_5_phi_fu_1418_p3");
    sc_trace(mVcdFile, newIndex34_fu_1431_p4, "newIndex34_fu_1431_p4");
    sc_trace(mVcdFile, p_sum6_fu_1447_p2, "p_sum6_fu_1447_p2");
    sc_trace(mVcdFile, newIndex20_fu_1473_p4, "newIndex20_fu_1473_p4");
    sc_trace(mVcdFile, newIndex_fu_1505_p4, "newIndex_fu_1505_p4");
    sc_trace(mVcdFile, tmp_16_fu_1528_p2, "tmp_16_fu_1528_p2");
    sc_trace(mVcdFile, sel_tmp_fu_1541_p2, "sel_tmp_fu_1541_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_1547_p2, "sel_tmp3_fu_1547_p2");
    sc_trace(mVcdFile, sel_tmp9_fu_1533_p3, "sel_tmp9_fu_1533_p3");
    sc_trace(mVcdFile, tmp_17_fu_1562_p2, "tmp_17_fu_1562_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_1575_p2, "sel_tmp5_fu_1575_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_1581_p2, "sel_tmp6_fu_1581_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_1567_p3, "sel_tmp4_fu_1567_p3");
    sc_trace(mVcdFile, tmp_18_fu_1596_p2, "tmp_18_fu_1596_p2");
    sc_trace(mVcdFile, tmp_19_fu_1601_p2, "tmp_19_fu_1601_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("HLS_MAXHEAP_HTA.hdltvin.dat");
    mHdltvoutHandle.open("HLS_MAXHEAP_HTA.hdltvout.dat");
}

HLS_MAXHEAP_HTA::~HLS_MAXHEAP_HTA() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete HTA_heap_0_U;
    delete HTA_heap_1_U;
    delete grp_HLS_malloc_2_s_fu_649;
    delete grp_HLS_malloc_3_s_fu_661;
    delete grp_HLS_malloc_1_s_fu_673;
    delete grp_HLS_free_1_s_fu_687;
}

void HLS_MAXHEAP_HTA::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        cnt_insert_reg_563 = i_reg_1818.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cnt_insert_reg_563 = ap_const_lv31_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_HLS_free_1_s_fu_687_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
            grp_HLS_free_1_s_fu_687_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_free_1_s_fu_687_ap_ready.read())) {
            grp_HLS_free_1_s_fu_687_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_HLS_malloc_1_s_fu_673_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            grp_HLS_malloc_1_s_fu_673_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_673_ap_ready.read())) {
            grp_HLS_malloc_1_s_fu_673_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_HLS_malloc_2_s_fu_649_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_HLS_malloc_2_s_fu_649_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_2_s_fu_649_ap_ready.read())) {
            grp_HLS_malloc_2_s_fu_649_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_HLS_malloc_3_s_fu_661_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
             esl_seteq<1,1,1>(tmp_3_fu_811_p2.read(), ap_const_lv1_1))) {
            grp_HLS_malloc_3_s_fu_661_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_3_s_fu_661_ap_ready.read())) {
            grp_HLS_malloc_3_s_fu_661_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_3_fu_811_p2.read(), ap_const_lv1_0))) {
        i_1_reg_605 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                ((esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0)) || 
                 (esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_1))))) {
        i_1_reg_605 = i_2_reg_1831.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        offset_last_parent1_reg_543 = offset_last_parent_1_fu_1157_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        offset_last_parent1_reg_543 = offset_head_cast_fu_778_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_3_fu_811_p2.read(), ap_const_lv1_0))) {
        offset_now_reg_595 = offset_tail_cast_fu_803_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                ((esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0)) || 
                 (esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_1))))) {
        offset_now_reg_595 = offset_tail_3_reg_1921.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        offset_parent_reg_584 = HTA_heap_0_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        offset_parent_reg_584 = HTA_heap_1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        offset_tail_reg_554 = offset_new_node_reg_1696.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        offset_tail_reg_554 = offset_head_fu_771_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        p_pn1_reg_575 = offset_parent_reg_584.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        p_pn1_reg_575 = offset_new_node_cast_reg_1701.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        p_pn2_reg_617 = ap_phi_mux_p_pn2_be_phi_fu_642_p4.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        p_pn2_reg_617 = offset_head_cast_reg_1656.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        HTA_heap_0_addr_13_reg_1750 =  (sc_lv<11>) (newIndex23_cast_fu_1038_p1.read());
        HTA_heap_1_addr_11_reg_1755 =  (sc_lv<11>) (newIndex23_cast_fu_1038_p1.read());
        tmp_30_reg_1745 = tmp_30_fu_1024_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_1066_p2.read()))) {
        HTA_heap_0_addr_16_reg_1789 =  (sc_lv<11>) (newIndex27_fu_1086_p1.read());
        HTA_heap_1_addr_14_reg_1794 =  (sc_lv<11>) (newIndex27_fu_1086_p1.read());
        tmp_33_reg_1784 = tmp_33_fu_1072_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_1284_p2.read()))) {
        HTA_heap_0_addr_17_reg_1901 =  (sc_lv<11>) (newIndex29_cast_fu_1328_p1.read());
        HTA_heap_1_addr_15_reg_1896 =  (sc_lv<11>) (newIndex29_cast_fu_1328_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_1284_p2.read()))) {
        HTA_heap_0_addr_18_reg_1886 =  (sc_lv<11>) (newIndex30_cast_fu_1306_p1.read());
        HTA_heap_1_addr_16_reg_1891 =  (sc_lv<11>) (newIndex30_cast_fu_1306_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        HTA_heap_0_addr_21_reg_1945 =  (sc_lv<11>) (newIndex33_cast_fu_1385_p1.read());
        HTA_heap_1_addr_19_reg_1940 =  (sc_lv<11>) (newIndex33_cast_fu_1385_p1.read());
        tmp_31_reg_1926 = tmp_31_fu_1361_p1.read();
        tmp_32_reg_1932 = tmp_32_fu_1371_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && (esl_seteq<1,1,1>(tmp_15_fu_1425_p2.read(), ap_const_lv1_0) || 
  esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0)))) {
        HTA_heap_0_addr_23_reg_1968 =  (sc_lv<11>) (newIndex35_fu_1441_p1.read());
        HTA_heap_1_addr_21_reg_1974 =  (sc_lv<11>) (newIndex35_fu_1441_p1.read());
        newIndex12_reg_1980 = p_sum6_fu_1447_p2.read().range(12, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        HTA_heap_0_addr_24_reg_1996 =  (sc_lv<11>) (newIndex36_fu_1483_p1.read());
        HTA_heap_1_addr_22_reg_2002 =  (sc_lv<11>) (newIndex36_fu_1483_p1.read());
        offset_left_reg_1985 = offset_left_fu_1462_p3.read();
        tmp_35_reg_1991 = tmp_35_fu_1469_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        HTA_heap_0_addr_26_reg_2029 =  (sc_lv<11>) (newIndex5_fu_1515_p1.read());
        HTA_heap_1_addr_24_reg_2034 =  (sc_lv<11>) (newIndex5_fu_1515_p1.read());
        offset_right_reg_2018 = offset_right_fu_1494_p3.read();
        swap_tmp1_reg_2039 = swap_tmp1_fu_1521_p3.read();
        tmp_36_reg_2024 = tmp_36_fu_1501_p1.read();
    }
    if ((esl_seteq<1,1,1>(grp_HLS_malloc_2_s_fu_649_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        HTA_heap_0_addr_reg_1635 =  (sc_lv<11>) (newIndex2_fu_722_p1.read());
        newIndex3_cast1_reg_1640 = newIndex3_cast1_fu_747_p3.read();
        newIndex4_cast_reg_1646 = newIndex4_cast_fu_766_p1.read();
        tmp_1_reg_1630 = grp_HLS_malloc_2_s_fu_649_ap_return.read().range(15, 3);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(tmp_21_fu_944_p1.read(), ap_const_lv1_0))) {
        HTA_heap_1_addr_7_reg_1731 =  (sc_lv<11>) (newIndex15_cast_fu_978_p1.read());
        tmp_24_reg_1727 = tmp_24_fu_964_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_fu_944_p1.read()))) {
        HTA_heap_1_addr_8_reg_1740 =  (sc_lv<11>) (newIndex16_cast_fu_1004_p1.read());
        tmp_23_reg_1736 = tmp_23_fu_990_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_2_reg_1831 = i_2_fu_1174_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && (esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_1)))) {
        i_reg_1818 = i_fu_1135_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        newIndex10_cast1_reg_1707 = newIndex10_cast1_fu_933_p3.read();
        offset_new_node_cast_reg_1701 = offset_new_node_cast_fu_927_p1.read();
        offset_new_node_reg_1696 = offset_new_node_fu_920_p3.read();
        tmp_21_reg_1712 = tmp_21_fu_944_p1.read();
        tmp_22_reg_1722 = tmp_22_fu_954_p1.read();
        tmp_s_reg_1717 = tmp_s_fu_948_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_3_fu_811_p2.read(), ap_const_lv1_1))) {
        newIndex14_reg_1676 = offset_tail_reg_554.read().range(12, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        newIndex30_reg_1906 = p_sum9_fu_1334_p2.read().range(12, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        offset_head_cast_reg_1656 = offset_head_cast_fu_778_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        offset_tail_3_reg_1921 = offset_tail_3_fu_1354_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        offset_tail_cast_reg_1662 = offset_tail_cast_fu_803_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && (esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) || 
  esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0)))) {
        or_cond_reg_2047 = or_cond_fu_1607_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0))) {
        swap_tmp_reg_1799 = swap_tmp_fu_1092_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_HLS_malloc_3_s_fu_661_ap_done.read(), ap_const_logic_1))) {
        tmp_10_reg_1691 = grp_HLS_malloc_3_s_fu_661_ap_return.read().range(11, 3);
        tmp_8_reg_1681 = grp_HLS_malloc_3_s_fu_661_ap_return.read().range(15, 3);
        tmp_9_reg_1686 = grp_HLS_malloc_3_s_fu_661_ap_return.read().range(12, 3);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_11_reg_1882 = tmp_11_fu_1284_p2.read();
        tmp_28_reg_1878 = tmp_28_fu_1273_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_12_reg_1780 = tmp_12_fu_1066_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        tmp_14_reg_1950 = tmp_14_fu_1391_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_1))) {
        tmp_15_reg_1964 = tmp_15_fu_1425_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        tmp_25_reg_1853 = tmp_25_fu_1214_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_26_reg_1846 = tmp_26_fu_1196_p1.read();
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_0_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)))))) {
        HTA_heap_0_address0 = HTA_heap_0_addr_23_reg_1968.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        HTA_heap_0_address0 = HTA_heap_0_addr_24_reg_1996.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex12_cast_fu_1489_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex34_cast_fu_1412_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex31_cast_fu_1349_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_26_reg_1846.read()))) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex25_cast_fu_1256_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_reg_1846.read()))) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex22_cast_fu_1234_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex18_fu_1190_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                (esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_1)))) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex32_cast_fu_1129_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_reg_1784.read()))) {
        HTA_heap_0_address0 = HTA_heap_0_addr_16_reg_1789.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex27_fu_1086_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_1712.read()))) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex21_cast_fu_1015_p1.read());
    } else if ((esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex19_cast_fu_1010_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex11_cast_fu_902_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex9_fu_849_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex6_cast_fu_787_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        HTA_heap_0_address0 =  (sc_lv<11>) (newIndex2_fu_722_p1.read());
    } else {
        HTA_heap_0_address0 = "XXXXXXXXXXX";
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_0_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_2047.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_35_reg_1991.read()))) {
        HTA_heap_0_address1 = HTA_heap_0_addr_24_reg_1996.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_2047.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_2024.read()))) {
        HTA_heap_0_address1 = HTA_heap_0_addr_26_reg_2029.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        HTA_heap_0_address1 =  (sc_lv<11>) (newIndex5_fu_1515_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        HTA_heap_0_address1 = HTA_heap_0_addr_23_reg_1968.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        HTA_heap_0_address1 = HTA_heap_0_addr_21_reg_1945.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        HTA_heap_0_address1 =  (sc_lv<11>) (newIndex33_cast_fu_1385_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1882.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1878.read()))) {
        HTA_heap_0_address1 = HTA_heap_0_addr_17_reg_1901.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_1882.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_reg_1878.read()))) {
        HTA_heap_0_address1 = HTA_heap_0_addr_18_reg_1886.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        HTA_heap_0_address1 = HTA_heap_0_addr_reg_1635.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        HTA_heap_0_address1 = HTA_heap_0_addr_13_reg_1750.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        HTA_heap_0_address1 =  (sc_lv<11>) (newIndex24_cast_fu_1060_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_fu_944_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_990_p1.read()))) {
        HTA_heap_0_address1 =  (sc_lv<11>) (newIndex16_cast_fu_1004_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(tmp_21_fu_944_p1.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_24_fu_964_p1.read(), ap_const_lv1_0))) {
        HTA_heap_0_address1 =  (sc_lv<11>) (newIndex15_cast_fu_978_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        HTA_heap_0_address1 =  (sc_lv<11>) (newIndex13_cast_fu_914_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        HTA_heap_0_address1 =  (sc_lv<11>) (newIndex7_cast_fu_798_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        HTA_heap_0_address1 =  (sc_lv<11>) (newIndex4_cast_fu_766_p1.read());
    } else {
        HTA_heap_0_address1 = "XXXXXXXXXXX";
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_0_ce0() {
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_2_s_fu_649_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(grp_HLS_malloc_3_s_fu_661_ap_done.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          (esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_26_reg_1846.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_reg_1846.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_free_1_s_fu_687_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_1712.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_reg_1784.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)))))) {
        HTA_heap_0_ce0 = ap_const_logic_1;
    } else {
        HTA_heap_0_ce0 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_0_ce1() {
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_2_s_fu_649_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(tmp_21_fu_944_p1.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_24_fu_964_p1.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_fu_944_p1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_990_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_1882.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_reg_1878.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1882.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1878.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_2024.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_35_reg_1991.read())))) {
        HTA_heap_0_ce1 = ap_const_logic_1;
    } else {
        HTA_heap_0_ce1 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_0_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
           esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)) || 
          (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
           esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1))))) {
        HTA_heap_0_d0 = swap_tmp2_fu_1552_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
                  esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)) || 
                 (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
                  esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1))))) {
        HTA_heap_0_d0 = swap_tmp3_fu_1586_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_reg_1784.read()))) {
        HTA_heap_0_d0 = now_load_phi_fu_1099_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_1712.read()))) {
        HTA_heap_0_d0 = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        HTA_heap_0_d0 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        HTA_heap_0_d0 = ap_const_lv32_FFFFFFFF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        HTA_heap_0_d0 = data_q0.read();
    } else {
        HTA_heap_0_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_0_d1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_2024.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_35_reg_1991.read())))) {
        HTA_heap_0_d1 = swap_tmp1_reg_2039.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        HTA_heap_0_d1 = tail_load_phi_fu_1205_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        HTA_heap_0_d1 = swap_tmp_reg_1799.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(tmp_21_fu_944_p1.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(tmp_24_fu_964_p1.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_fu_944_p1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_990_p1.read())))) {
        HTA_heap_0_d1 = offset_new_node_cast_fu_927_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        HTA_heap_0_d1 = offset_tail_cast_reg_1662.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_1882.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_reg_1878.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1882.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1878.read())))) {
        HTA_heap_0_d1 = ap_const_lv32_FFFFFFFF;
    } else {
        HTA_heap_0_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_0_we0() {
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_2_s_fu_649_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(grp_HLS_malloc_3_s_fu_661_ap_done.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_1712.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_reg_1784.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)))))) {
        HTA_heap_0_we0 = ap_const_logic_1;
    } else {
        HTA_heap_0_we0 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_0_we1() {
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_2_s_fu_649_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(tmp_21_fu_944_p1.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_24_fu_964_p1.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_fu_944_p1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_990_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_30_reg_1745.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_1882.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_reg_1878.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1882.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1878.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_2024.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_35_reg_1991.read())))) {
        HTA_heap_0_we1 = ap_const_logic_1;
    } else {
        HTA_heap_0_we1 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_1_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)))))) {
        HTA_heap_1_address0 = HTA_heap_1_addr_21_reg_1974.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        HTA_heap_1_address0 = HTA_heap_1_addr_22_reg_2002.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex12_cast_fu_1489_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex34_cast_fu_1412_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex31_cast_fu_1349_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_reg_1846.read()))) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex25_cast_fu_1256_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_26_reg_1846.read()))) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex22_cast_fu_1234_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                ((esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_1)) || 
                 (esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_1))))) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex32_cast_fu_1129_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_33_reg_1784.read()))) {
        HTA_heap_1_address0 = HTA_heap_1_addr_14_reg_1794.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex27_fu_1086_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex24_cast_fu_1060_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex14_cast_fu_940_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex11_cast_fu_902_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex6_cast_fu_787_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        HTA_heap_1_address0 =  (sc_lv<11>) (newIndex3_cast_fu_755_p1.read());
    } else {
        HTA_heap_1_address0 = "XXXXXXXXXXX";
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_1_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_2047.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_35_reg_1991.read()))) {
        HTA_heap_1_address1 = HTA_heap_1_addr_22_reg_2002.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_2047.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_reg_2024.read()))) {
        HTA_heap_1_address1 = HTA_heap_1_addr_24_reg_2034.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        HTA_heap_1_address1 =  (sc_lv<11>) (newIndex5_fu_1515_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        HTA_heap_1_address1 = HTA_heap_1_addr_21_reg_1974.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        HTA_heap_1_address1 = HTA_heap_1_addr_19_reg_1940.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        HTA_heap_1_address1 =  (sc_lv<11>) (newIndex33_cast_fu_1385_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_reg_1878.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1882.read()))) {
        HTA_heap_1_address1 = HTA_heap_1_addr_15_reg_1896.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_1882.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1878.read()))) {
        HTA_heap_1_address1 = HTA_heap_1_addr_16_reg_1891.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        HTA_heap_1_address1 =  (sc_lv<11>) (newIndex18_fu_1190_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        HTA_heap_1_address1 = HTA_heap_1_addr_11_reg_1755.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_1712.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_1736.read()))) {
        HTA_heap_1_address1 = HTA_heap_1_addr_8_reg_1740.read();
    } else if ((esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_reg_1727.read()))) {
        HTA_heap_1_address1 = HTA_heap_1_addr_7_reg_1731.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        HTA_heap_1_address1 =  (sc_lv<11>) (newIndex13_cast_fu_914_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        HTA_heap_1_address1 =  (sc_lv<11>) (newIndex10_cast_fu_884_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        HTA_heap_1_address1 =  (sc_lv<11>) (newIndex4_cast_reg_1646.read());
    } else {
        HTA_heap_1_address1 = "XXXXXXXXXXX";
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_1_ce0() {
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_2_s_fu_649_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          ((esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_26_reg_1846.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_reg_1846.read())) || 
         (esl_seteq<1,1,1>(grp_HLS_free_1_s_fu_687_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_33_reg_1784.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)))))) {
        HTA_heap_1_ce0 = ap_const_logic_1;
    } else {
        HTA_heap_1_ce0 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(grp_HLS_malloc_3_s_fu_661_ap_done.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_reg_1727.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_1712.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_1736.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_1882.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1878.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_reg_1878.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1882.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_reg_2024.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_35_reg_1991.read())))) {
        HTA_heap_1_ce1 = ap_const_logic_1;
    } else {
        HTA_heap_1_ce1 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_1_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
           esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)) || 
          (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
           esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1))))) {
        HTA_heap_1_d0 = swap_tmp2_fu_1552_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
                  esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)) || 
                 (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
                  esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1))))) {
        HTA_heap_1_d0 = swap_tmp3_fu_1586_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_33_reg_1784.read()))) {
        HTA_heap_1_d0 = now_load_phi_fu_1099_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        HTA_heap_1_d0 = offset_new_node_cast_fu_927_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        HTA_heap_1_d0 = offset_last_parent1_reg_543.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        HTA_heap_1_d0 = ap_const_lv32_FFFFFFFF;
    } else {
        HTA_heap_1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_1_d1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_reg_2024.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_35_reg_1991.read())))) {
        HTA_heap_1_d1 = swap_tmp1_reg_2039.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        HTA_heap_1_d1 = swap_tmp_reg_1799.read();
    } else if (((esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_reg_1727.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_1712.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_1736.read())))) {
        HTA_heap_1_d1 = offset_new_node_cast_reg_1701.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_1882.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1878.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_reg_1878.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1882.read())))) {
        HTA_heap_1_d1 = ap_const_lv32_FFFFFFFF;
    } else {
        HTA_heap_1_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_1_we0() {
    if (((esl_seteq<1,1,1>(grp_HLS_malloc_2_s_fu_649_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_33_reg_1784.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read()) && 
            esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_1)))))) {
        HTA_heap_1_we0 = ap_const_logic_1;
    } else {
        HTA_heap_1_we0 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_1_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(grp_HLS_malloc_3_s_fu_661_ap_done.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(tmp_21_reg_1712.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_reg_1727.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_1712.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_1736.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_30_reg_1745.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_1882.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1878.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_reg_1878.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1882.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_reg_2024.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_2047.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_35_reg_1991.read())))) {
        HTA_heap_1_we1 = ap_const_logic_1;
    } else {
        HTA_heap_1_we1 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_load_5_phi_fu_1418_p3() {
    HTA_heap_load_5_phi_fu_1418_p3 = (!tmp_32_reg_1932.read()[0].is_01())? sc_lv<32>(): ((tmp_32_reg_1932.read()[0].to_bool())? HTA_heap_1_q0.read(): HTA_heap_0_q0.read());
}

void HLS_MAXHEAP_HTA::thread_HTA_heap_load_phi_fu_1277_p3() {
    HTA_heap_load_phi_fu_1277_p3 = (!tmp_26_reg_1846.read()[0].is_01())? sc_lv<32>(): ((tmp_26_reg_1846.read()[0].to_bool())? HTA_heap_1_q0.read(): HTA_heap_0_q0.read());
}

void HLS_MAXHEAP_HTA::thread_alloc_HTA_addr_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        alloc_HTA_addr_ap_ack = grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        alloc_HTA_addr_ap_ack = grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        alloc_HTA_addr_ap_ack = grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack.read();
    } else {
        alloc_HTA_addr_ap_ack = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_alloc_HTA_cmd() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld.read()))) {
        alloc_HTA_cmd = grp_HLS_free_1_s_fu_687_allocator_cmd.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld.read()))) {
        alloc_HTA_cmd = grp_HLS_malloc_1_s_fu_673_allocator_cmd.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld.read()))) {
        alloc_HTA_cmd = grp_HLS_malloc_3_s_fu_661_allocator_cmd.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld.read()))) {
        alloc_HTA_cmd = grp_HLS_malloc_2_s_fu_649_allocator_cmd.read();
    } else {
        alloc_HTA_cmd =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_alloc_HTA_cmd_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        alloc_HTA_cmd_ap_vld = grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        alloc_HTA_cmd_ap_vld = grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        alloc_HTA_cmd_ap_vld = grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        alloc_HTA_cmd_ap_vld = grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld.read();
    } else {
        alloc_HTA_cmd_ap_vld = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_alloc_HTA_free_target() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld.read()))) {
        alloc_HTA_free_target = grp_HLS_free_1_s_fu_687_allocator_free_targe.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld.read()))) {
        alloc_HTA_free_target = grp_HLS_malloc_1_s_fu_673_allocator_free_targe.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld.read()))) {
        alloc_HTA_free_target = grp_HLS_malloc_3_s_fu_661_allocator_free_targe.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld.read()))) {
        alloc_HTA_free_target = grp_HLS_malloc_2_s_fu_649_allocator_free_targe.read();
    } else {
        alloc_HTA_free_target =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_alloc_HTA_free_target_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        alloc_HTA_free_target_ap_vld = grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        alloc_HTA_free_target_ap_vld = grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        alloc_HTA_free_target_ap_vld = grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        alloc_HTA_free_target_ap_vld = grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld.read();
    } else {
        alloc_HTA_free_target_ap_vld = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_alloc_HTA_size() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_free_1_s_fu_687_allocator_size_ap_vld.read()))) {
        alloc_HTA_size = grp_HLS_free_1_s_fu_687_allocator_size.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld.read()))) {
        alloc_HTA_size = grp_HLS_malloc_1_s_fu_673_allocator_size.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld.read()))) {
        alloc_HTA_size = grp_HLS_malloc_3_s_fu_661_allocator_size.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld.read()))) {
        alloc_HTA_size = grp_HLS_malloc_2_s_fu_649_allocator_size.read();
    } else {
        alloc_HTA_size =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_alloc_HTA_size_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        alloc_HTA_size_ap_vld = grp_HLS_free_1_s_fu_687_allocator_size_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        alloc_HTA_size_ap_vld = grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        alloc_HTA_size_ap_vld = grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        alloc_HTA_size_ap_vld = grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld.read();
    } else {
        alloc_HTA_size_ap_vld = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void HLS_MAXHEAP_HTA::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void HLS_MAXHEAP_HTA::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_1169_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_reg_1932.read())) {
            ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 = HTA_heap_0_q1.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_1932.read())) {
            ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 = HTA_heap_1_q1.read();
        } else {
            ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_ap_phi_mux_p_pn2_be_phi_fu_642_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_2047.read())) {
            ap_phi_mux_p_pn2_be_phi_fu_642_p4 = offset_right_reg_2018.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_2047.read())) {
            ap_phi_mux_p_pn2_be_phi_fu_642_p4 = offset_left_reg_1985.read();
        } else {
            ap_phi_mux_p_pn2_be_phi_fu_642_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        ap_phi_mux_p_pn2_be_phi_fu_642_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_1169_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_cnt_insert_cast_fu_807_p1() {
    cnt_insert_cast_fu_807_p1 = esl_zext<32,31>(cnt_insert_reg_563.read());
}

void HLS_MAXHEAP_HTA::thread_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_address0 =  (sc_lv<15>) (tmp_7_fu_816_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_address0 =  (sc_lv<15>) (ap_const_lv64_0);
    } else {
        data_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void HLS_MAXHEAP_HTA::thread_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        data_ce0 = ap_const_logic_1;
    } else {
        data_ce0 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_dis_output_address0() {
    dis_output_address0 =  (sc_lv<8>) (tmp_6_fu_1200_p1.read());
}

void HLS_MAXHEAP_HTA::thread_dis_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        dis_output_ce0 = ap_const_logic_1;
    } else {
        dis_output_ce0 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_dis_output_d0() {
    dis_output_d0 = HTA_heap_0_q1.read();
}

void HLS_MAXHEAP_HTA::thread_dis_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        dis_output_we0 = ap_const_logic_1;
    } else {
        dis_output_we0 = ap_const_logic_0;
    }
}

void HLS_MAXHEAP_HTA::thread_grp_HLS_free_1_s_fu_687_ap_start() {
    grp_HLS_free_1_s_fu_687_ap_start = grp_HLS_free_1_s_fu_687_ap_start_reg.read();
}

void HLS_MAXHEAP_HTA::thread_grp_HLS_malloc_1_s_fu_673_ap_start() {
    grp_HLS_malloc_1_s_fu_673_ap_start = grp_HLS_malloc_1_s_fu_673_ap_start_reg.read();
}

void HLS_MAXHEAP_HTA::thread_grp_HLS_malloc_2_s_fu_649_ap_start() {
    grp_HLS_malloc_2_s_fu_649_ap_start = grp_HLS_malloc_2_s_fu_649_ap_start_reg.read();
}

void HLS_MAXHEAP_HTA::thread_grp_HLS_malloc_3_s_fu_661_ap_start() {
    grp_HLS_malloc_3_s_fu_661_ap_start = grp_HLS_malloc_3_s_fu_661_ap_start_reg.read();
}

void HLS_MAXHEAP_HTA::thread_grp_fu_699_p2() {
    grp_fu_699_p2 = (newIndex10_cast1_reg_1707.read() | ap_const_lv11_3);
}

void HLS_MAXHEAP_HTA::thread_i_1_cast_fu_1165_p1() {
    i_1_cast_fu_1165_p1 = esl_zext<32,31>(i_1_reg_605.read());
}

void HLS_MAXHEAP_HTA::thread_i_2_fu_1174_p2() {
    i_2_fu_1174_p2 = (!i_1_reg_605.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_1_reg_605.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void HLS_MAXHEAP_HTA::thread_i_fu_1135_p2() {
    i_fu_1135_p2 = (!ap_const_lv31_1.is_01() || !cnt_insert_reg_563.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(cnt_insert_reg_563.read()));
}

void HLS_MAXHEAP_HTA::thread_newIndex10_cast1_fu_933_p3() {
    newIndex10_cast1_fu_933_p3 = esl_concat<9,2>(tmp_10_reg_1691.read(), ap_const_lv2_0);
}

void HLS_MAXHEAP_HTA::thread_newIndex10_cast2_fu_889_p3() {
    newIndex10_cast2_fu_889_p3 = esl_concat<10,2>(tmp_9_reg_1686.read(), ap_const_lv2_0);
}

void HLS_MAXHEAP_HTA::thread_newIndex10_cast_fu_884_p1() {
    newIndex10_cast_fu_884_p1 = esl_zext<64,13>(newIndex10_fu_864_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex10_fu_864_p4() {
    newIndex10_fu_864_p4 = esl_concat<11,2>(esl_concat<1,10>(ap_const_lv1_0, tmp_9_fu_854_p4.read()), ap_const_lv2_0);
}

void HLS_MAXHEAP_HTA::thread_newIndex11_cast_fu_902_p1() {
    newIndex11_cast_fu_902_p1 = esl_zext<64,12>(newIndex11_fu_896_p2.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex11_fu_896_p2() {
    newIndex11_fu_896_p2 = (newIndex10_cast2_fu_889_p3.read() | ap_const_lv12_2);
}

void HLS_MAXHEAP_HTA::thread_newIndex12_cast_fu_1489_p1() {
    newIndex12_cast_fu_1489_p1 = esl_zext<64,12>(newIndex12_reg_1980.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex13_cast_fu_914_p1() {
    newIndex13_cast_fu_914_p1 = esl_zext<64,12>(newIndex13_fu_908_p2.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex13_fu_908_p2() {
    newIndex13_fu_908_p2 = (newIndex10_cast2_fu_889_p3.read() | ap_const_lv12_1);
}

void HLS_MAXHEAP_HTA::thread_newIndex14_cast_fu_940_p1() {
    newIndex14_cast_fu_940_p1 = esl_zext<64,12>(newIndex14_reg_1676.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex15_cast_fu_978_p1() {
    newIndex15_cast_fu_978_p1 = esl_zext<64,12>(newIndex15_fu_968_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex15_fu_968_p4() {
    newIndex15_fu_968_p4 = p_sum1_fu_958_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex16_cast_fu_1004_p1() {
    newIndex16_cast_fu_1004_p1 = esl_zext<64,12>(newIndex16_fu_994_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex16_fu_994_p4() {
    newIndex16_fu_994_p4 = p_sum2_fu_984_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex17_fu_1180_p4() {
    newIndex17_fu_1180_p4 = offset_now_reg_595.read().range(31, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex18_fu_1190_p1() {
    newIndex18_fu_1190_p1 = esl_zext<64,31>(newIndex17_fu_1180_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex19_cast_fu_1010_p1() {
    newIndex19_cast_fu_1010_p1 = esl_zext<64,11>(grp_fu_699_p2.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex1_fu_714_p3() {
    newIndex1_fu_714_p3 = esl_concat<13,2>(tmp_1_fu_704_p4.read(), ap_const_lv2_0);
}

void HLS_MAXHEAP_HTA::thread_newIndex20_fu_1473_p4() {
    newIndex20_fu_1473_p4 = offset_left_fu_1462_p3.read().range(31, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex21_cast_fu_1015_p1() {
    newIndex21_cast_fu_1015_p1 = esl_zext<64,11>(grp_fu_699_p2.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex22_cast_fu_1234_p1() {
    newIndex22_cast_fu_1234_p1 = esl_zext<64,12>(newIndex22_fu_1224_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex22_fu_1224_p4() {
    newIndex22_fu_1224_p4 = p_sum_fu_1218_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex23_cast_fu_1038_p1() {
    newIndex23_cast_fu_1038_p1 = esl_zext<64,12>(newIndex23_fu_1028_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex23_fu_1028_p4() {
    newIndex23_fu_1028_p4 = p_pn1_reg_575.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex24_cast_fu_1060_p1() {
    newIndex24_cast_fu_1060_p1 = esl_zext<64,12>(newIndex24_fu_1050_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex24_fu_1050_p4() {
    newIndex24_fu_1050_p4 = now_0_sum_fu_1044_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex25_cast_fu_1256_p1() {
    newIndex25_cast_fu_1256_p1 = esl_zext<64,12>(newIndex25_fu_1246_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex25_fu_1246_p4() {
    newIndex25_fu_1246_p4 = p_sum7_fu_1240_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex26_fu_1076_p4() {
    newIndex26_fu_1076_p4 = offset_parent_reg_584.read().range(31, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex27_fu_1086_p1() {
    newIndex27_fu_1086_p1 = esl_zext<64,31>(newIndex26_fu_1076_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex28_fu_1318_p4() {
    newIndex28_fu_1318_p4 = p_sum3_fu_1312_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex29_cast_fu_1328_p1() {
    newIndex29_cast_fu_1328_p1 = esl_zext<64,12>(newIndex28_fu_1318_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex29_fu_1296_p4() {
    newIndex29_fu_1296_p4 = p_sum8_fu_1290_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex2_fu_722_p1() {
    newIndex2_fu_722_p1 = esl_zext<64,15>(newIndex1_fu_714_p3.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex30_cast_fu_1306_p1() {
    newIndex30_cast_fu_1306_p1 = esl_zext<64,12>(newIndex29_fu_1296_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex31_cast_fu_1349_p1() {
    newIndex31_cast_fu_1349_p1 = esl_zext<64,12>(newIndex30_reg_1906.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex31_fu_1375_p4() {
    newIndex31_fu_1375_p4 = now_1_sum1_fu_1365_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex32_cast_fu_1129_p1() {
    newIndex32_cast_fu_1129_p1 = esl_zext<64,12>(newIndex32_fu_1119_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex32_fu_1119_p4() {
    newIndex32_fu_1119_p4 = p_sum4_fu_1114_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex33_cast_fu_1385_p1() {
    newIndex33_cast_fu_1385_p1 = esl_zext<64,12>(newIndex31_fu_1375_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex33_fu_1402_p4() {
    newIndex33_fu_1402_p4 = now_1_sum_fu_1397_p2.read().range(12, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex34_cast_fu_1412_p1() {
    newIndex34_cast_fu_1412_p1 = esl_zext<64,12>(newIndex33_fu_1402_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex34_fu_1431_p4() {
    newIndex34_fu_1431_p4 = p_pn2_reg_617.read().range(31, 1);
}

void HLS_MAXHEAP_HTA::thread_newIndex35_fu_1441_p1() {
    newIndex35_fu_1441_p1 = esl_zext<64,31>(newIndex34_fu_1431_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex36_fu_1483_p1() {
    newIndex36_fu_1483_p1 = esl_zext<64,31>(newIndex20_fu_1473_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex3_cast1_fu_747_p3() {
    newIndex3_cast1_fu_747_p3 = esl_concat<10,2>(tmp_2_fu_727_p4.read(), ap_const_lv2_0);
}

void HLS_MAXHEAP_HTA::thread_newIndex3_cast_fu_755_p1() {
    newIndex3_cast_fu_755_p1 = esl_zext<64,13>(newIndex3_fu_737_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex3_fu_737_p4() {
    newIndex3_fu_737_p4 = esl_concat<11,2>(esl_concat<1,10>(ap_const_lv1_0, tmp_2_fu_727_p4.read()), ap_const_lv2_0);
}

void HLS_MAXHEAP_HTA::thread_newIndex4_cast_fu_766_p1() {
    newIndex4_cast_fu_766_p1 = esl_zext<64,12>(newIndex4_fu_760_p2.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex4_fu_760_p2() {
    newIndex4_fu_760_p2 = (newIndex3_cast1_fu_747_p3.read() | ap_const_lv12_1);
}

void HLS_MAXHEAP_HTA::thread_newIndex5_fu_1515_p1() {
    newIndex5_fu_1515_p1 = esl_zext<64,31>(newIndex_fu_1505_p4.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex6_cast_fu_787_p1() {
    newIndex6_cast_fu_787_p1 = esl_zext<64,12>(newIndex6_fu_782_p2.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex6_fu_782_p2() {
    newIndex6_fu_782_p2 = (newIndex3_cast1_reg_1640.read() | ap_const_lv12_2);
}

void HLS_MAXHEAP_HTA::thread_newIndex7_cast_fu_798_p1() {
    newIndex7_cast_fu_798_p1 = esl_zext<64,12>(newIndex7_fu_793_p2.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex7_fu_793_p2() {
    newIndex7_fu_793_p2 = (newIndex3_cast1_reg_1640.read() | ap_const_lv12_3);
}

void HLS_MAXHEAP_HTA::thread_newIndex8_fu_841_p3() {
    newIndex8_fu_841_p3 = esl_concat<13,2>(tmp_8_fu_831_p4.read(), ap_const_lv2_0);
}

void HLS_MAXHEAP_HTA::thread_newIndex9_fu_849_p1() {
    newIndex9_fu_849_p1 = esl_zext<64,15>(newIndex8_fu_841_p3.read());
}

void HLS_MAXHEAP_HTA::thread_newIndex_fu_1505_p4() {
    newIndex_fu_1505_p4 = offset_right_fu_1494_p3.read().range(31, 1);
}

void HLS_MAXHEAP_HTA::thread_now_0_sum_fu_1044_p2() {
    now_0_sum_fu_1044_p2 = (!ap_const_lv13_5.is_01() || !tmp_29_fu_1020_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_5) + sc_biguint<13>(tmp_29_fu_1020_p1.read()));
}

void HLS_MAXHEAP_HTA::thread_now_1_sum1_fu_1365_p2() {
    now_1_sum1_fu_1365_p2 = (!ap_const_lv13_3.is_01() || !tmp_31_fu_1361_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_3) + sc_biguint<13>(tmp_31_fu_1361_p1.read()));
}

void HLS_MAXHEAP_HTA::thread_now_1_sum_fu_1397_p2() {
    now_1_sum_fu_1397_p2 = (!tmp_31_reg_1926.read().is_01() || !ap_const_lv13_4.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_31_reg_1926.read()) + sc_biguint<13>(ap_const_lv13_4));
}

void HLS_MAXHEAP_HTA::thread_now_load_phi_fu_1099_p3() {
    now_load_phi_fu_1099_p3 = (!tmp_30_reg_1745.read()[0].is_01())? sc_lv<32>(): ((tmp_30_reg_1745.read()[0].to_bool())? HTA_heap_1_q1.read(): HTA_heap_0_q1.read());
}

void HLS_MAXHEAP_HTA::thread_offset_head_cast_fu_778_p1() {
    offset_head_cast_fu_778_p1 = esl_zext<32,16>(offset_head_fu_771_p3.read());
}

void HLS_MAXHEAP_HTA::thread_offset_head_fu_771_p3() {
    offset_head_fu_771_p3 = esl_concat<13,3>(tmp_1_reg_1630.read(), ap_const_lv3_0);
}

void HLS_MAXHEAP_HTA::thread_offset_last_parent_1_fu_1157_p3() {
    offset_last_parent_1_fu_1157_p3 = (!sel_tmp2_fu_1152_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_1152_p2.read()[0].to_bool())? HTA_heap_0_q0.read(): sel_tmp1_fu_1145_p3.read());
}

void HLS_MAXHEAP_HTA::thread_offset_left_fu_1462_p3() {
    offset_left_fu_1462_p3 = (!tmp_32_reg_1932.read()[0].is_01())? sc_lv<32>(): ((tmp_32_reg_1932.read()[0].to_bool())? HTA_heap_0_q1.read(): HTA_heap_1_q1.read());
}

void HLS_MAXHEAP_HTA::thread_offset_new_node_cast_fu_927_p1() {
    offset_new_node_cast_fu_927_p1 = esl_zext<32,16>(offset_new_node_fu_920_p3.read());
}

void HLS_MAXHEAP_HTA::thread_offset_new_node_fu_920_p3() {
    offset_new_node_fu_920_p3 = esl_concat<13,3>(tmp_8_reg_1681.read(), ap_const_lv3_0);
}

void HLS_MAXHEAP_HTA::thread_offset_right_fu_1494_p3() {
    offset_right_fu_1494_p3 = (!tmp_32_reg_1932.read()[0].is_01())? sc_lv<32>(): ((tmp_32_reg_1932.read()[0].to_bool())? HTA_heap_1_q0.read(): HTA_heap_0_q0.read());
}

void HLS_MAXHEAP_HTA::thread_offset_tail_3_fu_1354_p3() {
    offset_tail_3_fu_1354_p3 = (!tmp_26_reg_1846.read()[0].is_01())? sc_lv<32>(): ((tmp_26_reg_1846.read()[0].to_bool())? HTA_heap_1_q0.read(): HTA_heap_0_q0.read());
}

void HLS_MAXHEAP_HTA::thread_offset_tail_cast_fu_803_p1() {
    offset_tail_cast_fu_803_p1 = esl_zext<32,16>(offset_tail_reg_554.read());
}

void HLS_MAXHEAP_HTA::thread_or_cond_fu_1607_p2() {
    or_cond_fu_1607_p2 = (tmp_18_fu_1596_p2.read() & tmp_19_fu_1601_p2.read());
}

void HLS_MAXHEAP_HTA::thread_p_sum1_fu_958_p2() {
    p_sum1_fu_958_p2 = (!ap_const_lv13_4.is_01() || !tmp_22_fu_954_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_4) + sc_biguint<13>(tmp_22_fu_954_p1.read()));
}

void HLS_MAXHEAP_HTA::thread_p_sum2_fu_984_p2() {
    p_sum2_fu_984_p2 = (!ap_const_lv13_3.is_01() || !tmp_22_fu_954_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_3) + sc_biguint<13>(tmp_22_fu_954_p1.read()));
}

void HLS_MAXHEAP_HTA::thread_p_sum3_fu_1312_p2() {
    p_sum3_fu_1312_p2 = (!tmp_27_fu_1269_p1.read().is_01() || !ap_const_lv13_3.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_27_fu_1269_p1.read()) + sc_biguint<13>(ap_const_lv13_3));
}

void HLS_MAXHEAP_HTA::thread_p_sum4_fu_1114_p2() {
    p_sum4_fu_1114_p2 = (!ap_const_lv13_1.is_01() || !tmp_22_reg_1722.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_1) + sc_biguint<13>(tmp_22_reg_1722.read()));
}

void HLS_MAXHEAP_HTA::thread_p_sum6_fu_1447_p2() {
    p_sum6_fu_1447_p2 = (!ap_const_lv13_4.is_01() || !tmp_31_reg_1926.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_4) + sc_biguint<13>(tmp_31_reg_1926.read()));
}

void HLS_MAXHEAP_HTA::thread_p_sum7_fu_1240_p2() {
    p_sum7_fu_1240_p2 = (!ap_const_lv13_6.is_01() || !tmp_25_fu_1214_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_6) + sc_biguint<13>(tmp_25_fu_1214_p1.read()));
}

void HLS_MAXHEAP_HTA::thread_p_sum8_fu_1290_p2() {
    p_sum8_fu_1290_p2 = (!tmp_27_fu_1269_p1.read().is_01() || !ap_const_lv13_4.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_27_fu_1269_p1.read()) + sc_biguint<13>(ap_const_lv13_4));
}

void HLS_MAXHEAP_HTA::thread_p_sum9_fu_1334_p2() {
    p_sum9_fu_1334_p2 = (!tmp_25_reg_1853.read().is_01() || !ap_const_lv13_2.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_25_reg_1853.read()) + sc_biguint<13>(ap_const_lv13_2));
}

void HLS_MAXHEAP_HTA::thread_p_sum_fu_1218_p2() {
    p_sum_fu_1218_p2 = (!ap_const_lv13_5.is_01() || !tmp_25_fu_1214_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_5) + sc_biguint<13>(tmp_25_fu_1214_p1.read()));
}

void HLS_MAXHEAP_HTA::thread_p_v_fu_1262_p3() {
    p_v_fu_1262_p3 = (!tmp_26_reg_1846.read()[0].is_01())? sc_lv<32>(): ((tmp_26_reg_1846.read()[0].to_bool())? HTA_heap_0_q0.read(): HTA_heap_1_q0.read());
}

void HLS_MAXHEAP_HTA::thread_sel_tmp1_fu_1145_p3() {
    sel_tmp1_fu_1145_p3 = (!tmp_21_reg_1712.read()[0].is_01())? sc_lv<32>(): ((tmp_21_reg_1712.read()[0].to_bool())? offset_last_parent1_reg_543.read(): HTA_heap_1_q0.read());
}

void HLS_MAXHEAP_HTA::thread_sel_tmp2_fu_1152_p2() {
    sel_tmp2_fu_1152_p2 = (tmp_34_fu_1141_p1.read() & tmp_s_reg_1717.read());
}

void HLS_MAXHEAP_HTA::thread_sel_tmp3_fu_1547_p2() {
    sel_tmp3_fu_1547_p2 = (tmp_35_reg_1991.read() & sel_tmp_fu_1541_p2.read());
}

void HLS_MAXHEAP_HTA::thread_sel_tmp4_fu_1567_p3() {
    sel_tmp4_fu_1567_p3 = (!tmp_17_fu_1562_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_17_fu_1562_p2.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: HTA_heap_0_q1.read());
}

void HLS_MAXHEAP_HTA::thread_sel_tmp5_fu_1575_p2() {
    sel_tmp5_fu_1575_p2 = (tmp_17_fu_1562_p2.read() ^ ap_const_lv1_1);
}

void HLS_MAXHEAP_HTA::thread_sel_tmp6_fu_1581_p2() {
    sel_tmp6_fu_1581_p2 = (tmp_36_reg_2024.read() & sel_tmp5_fu_1575_p2.read());
}

void HLS_MAXHEAP_HTA::thread_sel_tmp9_fu_1533_p3() {
    sel_tmp9_fu_1533_p3 = (!tmp_16_fu_1528_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_16_fu_1528_p2.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: HTA_heap_0_q0.read());
}

void HLS_MAXHEAP_HTA::thread_sel_tmp_fu_1541_p2() {
    sel_tmp_fu_1541_p2 = (tmp_16_fu_1528_p2.read() ^ ap_const_lv1_1);
}

void HLS_MAXHEAP_HTA::thread_swap_tmp1_fu_1521_p3() {
    swap_tmp1_fu_1521_p3 = (!tmp_32_reg_1932.read()[0].is_01())? sc_lv<32>(): ((tmp_32_reg_1932.read()[0].to_bool())? HTA_heap_1_q1.read(): HTA_heap_0_q1.read());
}

void HLS_MAXHEAP_HTA::thread_swap_tmp2_fu_1552_p3() {
    swap_tmp2_fu_1552_p3 = (!sel_tmp3_fu_1547_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_1547_p2.read()[0].to_bool())? HTA_heap_1_q0.read(): sel_tmp9_fu_1533_p3.read());
}

void HLS_MAXHEAP_HTA::thread_swap_tmp3_fu_1586_p3() {
    swap_tmp3_fu_1586_p3 = (!sel_tmp6_fu_1581_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp6_fu_1581_p2.read()[0].to_bool())? HTA_heap_1_q1.read(): sel_tmp4_fu_1567_p3.read());
}

void HLS_MAXHEAP_HTA::thread_swap_tmp_fu_1092_p3() {
    swap_tmp_fu_1092_p3 = (!tmp_33_reg_1784.read()[0].is_01())? sc_lv<32>(): ((tmp_33_reg_1784.read()[0].to_bool())? HTA_heap_1_q0.read(): HTA_heap_0_q0.read());
}

void HLS_MAXHEAP_HTA::thread_tail_load_phi_fu_1205_p3() {
    tail_load_phi_fu_1205_p3 = (!tmp_26_fu_1196_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_26_fu_1196_p1.read()[0].to_bool())? HTA_heap_1_q1.read(): HTA_heap_0_q0.read());
}

void HLS_MAXHEAP_HTA::thread_tmp_11_fu_1284_p2() {
    tmp_11_fu_1284_p2 = (!HTA_heap_load_phi_fu_1277_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(HTA_heap_load_phi_fu_1277_p3.read() == ap_const_lv32_1);
}

void HLS_MAXHEAP_HTA::thread_tmp_12_fu_1066_p2() {
    tmp_12_fu_1066_p2 = (!offset_parent_reg_584.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(offset_parent_reg_584.read() == ap_const_lv32_FFFFFFFF);
}

void HLS_MAXHEAP_HTA::thread_tmp_13_fu_1108_p2() {
    tmp_13_fu_1108_p2 = (!swap_tmp_fu_1092_p3.read().is_01() || !now_load_phi_fu_1099_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(swap_tmp_fu_1092_p3.read()) > sc_bigint<32>(now_load_phi_fu_1099_p3.read()));
}

void HLS_MAXHEAP_HTA::thread_tmp_14_fu_1391_p2() {
    tmp_14_fu_1391_p2 = (!ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4.read() == ap_const_lv32_FFFFFFFF);
}

void HLS_MAXHEAP_HTA::thread_tmp_15_fu_1425_p2() {
    tmp_15_fu_1425_p2 = (!HTA_heap_load_5_phi_fu_1418_p3.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(HTA_heap_load_5_phi_fu_1418_p3.read() == ap_const_lv32_FFFFFFFF);
}

void HLS_MAXHEAP_HTA::thread_tmp_16_fu_1528_p2() {
    tmp_16_fu_1528_p2 = (!offset_left_reg_1985.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(offset_left_reg_1985.read() == ap_const_lv32_FFFFFFFF);
}

void HLS_MAXHEAP_HTA::thread_tmp_17_fu_1562_p2() {
    tmp_17_fu_1562_p2 = (!offset_right_reg_2018.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(offset_right_reg_2018.read() == ap_const_lv32_FFFFFFFF);
}

void HLS_MAXHEAP_HTA::thread_tmp_18_fu_1596_p2() {
    tmp_18_fu_1596_p2 = (!swap_tmp2_fu_1552_p3.read().is_01() || !swap_tmp1_reg_2039.read().is_01())? sc_lv<1>(): (sc_bigint<32>(swap_tmp2_fu_1552_p3.read()) > sc_bigint<32>(swap_tmp1_reg_2039.read()));
}

void HLS_MAXHEAP_HTA::thread_tmp_19_fu_1601_p2() {
    tmp_19_fu_1601_p2 = (!swap_tmp2_fu_1552_p3.read().is_01() || !swap_tmp3_fu_1586_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(swap_tmp2_fu_1552_p3.read()) > sc_bigint<32>(swap_tmp3_fu_1586_p3.read()));
}

void HLS_MAXHEAP_HTA::thread_tmp_1_fu_704_p4() {
    tmp_1_fu_704_p4 = grp_HLS_malloc_2_s_fu_649_ap_return.read().range(15, 3);
}

void HLS_MAXHEAP_HTA::thread_tmp_20_fu_1613_p2() {
    tmp_20_fu_1613_p2 = (!swap_tmp3_fu_1586_p3.read().is_01() || !swap_tmp1_reg_2039.read().is_01())? sc_lv<1>(): (sc_bigint<32>(swap_tmp3_fu_1586_p3.read()) > sc_bigint<32>(swap_tmp1_reg_2039.read()));
}

void HLS_MAXHEAP_HTA::thread_tmp_21_fu_944_p1() {
    tmp_21_fu_944_p1 = cnt_insert_reg_563.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_22_fu_954_p1() {
    tmp_22_fu_954_p1 = offset_last_parent1_reg_543.read().range(13-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_23_fu_990_p1() {
    tmp_23_fu_990_p1 = offset_last_parent1_reg_543.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_24_fu_964_p1() {
    tmp_24_fu_964_p1 = offset_last_parent1_reg_543.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_25_fu_1214_p1() {
    tmp_25_fu_1214_p1 = offset_now_reg_595.read().range(13-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_26_fu_1196_p1() {
    tmp_26_fu_1196_p1 = offset_now_reg_595.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_27_fu_1269_p1() {
    tmp_27_fu_1269_p1 = p_v_fu_1262_p3.read().range(13-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_28_fu_1273_p1() {
    tmp_28_fu_1273_p1 = p_v_fu_1262_p3.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_29_fu_1020_p1() {
    tmp_29_fu_1020_p1 = p_pn1_reg_575.read().range(13-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_2_fu_727_p4() {
    tmp_2_fu_727_p4 = grp_HLS_malloc_2_s_fu_649_ap_return.read().range(12, 3);
}

void HLS_MAXHEAP_HTA::thread_tmp_30_fu_1024_p1() {
    tmp_30_fu_1024_p1 = p_pn1_reg_575.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_31_fu_1361_p1() {
    tmp_31_fu_1361_p1 = p_pn2_reg_617.read().range(13-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_32_fu_1371_p1() {
    tmp_32_fu_1371_p1 = p_pn2_reg_617.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_33_fu_1072_p1() {
    tmp_33_fu_1072_p1 = offset_parent_reg_584.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_34_fu_1141_p1() {
    tmp_34_fu_1141_p1 = offset_last_parent1_reg_543.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_35_fu_1469_p1() {
    tmp_35_fu_1469_p1 = offset_left_fu_1462_p3.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_36_fu_1501_p1() {
    tmp_36_fu_1501_p1 = offset_right_fu_1494_p3.read().range(1-1, 0);
}

void HLS_MAXHEAP_HTA::thread_tmp_3_fu_811_p2() {
    tmp_3_fu_811_p2 = (!cnt_insert_cast_fu_807_p1.read().is_01() || !n.read().is_01())? sc_lv<1>(): (sc_bigint<32>(cnt_insert_cast_fu_807_p1.read()) < sc_bigint<32>(n.read()));
}

void HLS_MAXHEAP_HTA::thread_tmp_5_fu_1169_p2() {
    tmp_5_fu_1169_p2 = (!i_1_cast_fu_1165_p1.read().is_01() || !n.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_1_cast_fu_1165_p1.read()) < sc_bigint<32>(n.read()));
}

void HLS_MAXHEAP_HTA::thread_tmp_6_fu_1200_p1() {
    tmp_6_fu_1200_p1 = esl_zext<64,31>(i_1_reg_605.read());
}

void HLS_MAXHEAP_HTA::thread_tmp_7_fu_816_p1() {
    tmp_7_fu_816_p1 = esl_zext<64,31>(cnt_insert_reg_563.read());
}

void HLS_MAXHEAP_HTA::thread_tmp_8_fu_831_p4() {
    tmp_8_fu_831_p4 = grp_HLS_malloc_3_s_fu_661_ap_return.read().range(15, 3);
}

void HLS_MAXHEAP_HTA::thread_tmp_9_fu_854_p4() {
    tmp_9_fu_854_p4 = grp_HLS_malloc_3_s_fu_661_ap_return.read().range(12, 3);
}

void HLS_MAXHEAP_HTA::thread_tmp_s_fu_948_p2() {
    tmp_s_fu_948_p2 = (tmp_21_fu_944_p1.read() ^ ap_const_lv1_1);
}

void HLS_MAXHEAP_HTA::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(grp_HLS_malloc_1_s_fu_673_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(grp_HLS_malloc_2_s_fu_649_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_3_fu_811_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_HLS_malloc_3_s_fu_661_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(tmp_30_fu_1024_p1.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(tmp_13_fu_1108_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_12_reg_1780.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(tmp_5_fu_1169_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(grp_HLS_free_1_s_fu_687_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(tmp_15_fu_1425_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && ((esl_seteq<1,1,1>(tmp_20_fu_1613_p2.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond_fu_1607_p2.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_15_reg_1964.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_14_reg_1950.read(), ap_const_lv1_1))))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<31>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void HLS_MAXHEAP_HTA::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_address0\" :  \"" << data_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_ce0\" :  \"" << data_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_q0\" :  \"" << data_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_address0\" :  \"" << dis_output_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_ce0\" :  \"" << dis_output_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_we0\" :  \"" << dis_output_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dis_output_d0\" :  \"" << dis_output_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_size\" :  \"" << alloc_HTA_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_size_ap_vld\" :  \"" << alloc_HTA_size_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_size_ap_ack\" :  \"" << alloc_HTA_size_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_free_target\" :  \"" << alloc_HTA_free_target.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_free_target_ap_vld\" :  \"" << alloc_HTA_free_target_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_free_target_ap_ack\" :  \"" << alloc_HTA_free_target_ap_ack.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_addr\" :  \"" << alloc_HTA_addr.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_addr_ap_vld\" :  \"" << alloc_HTA_addr_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_addr_ap_ack\" :  \"" << alloc_HTA_addr_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_cmd\" :  \"" << alloc_HTA_cmd.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"alloc_HTA_cmd_ap_vld\" :  \"" << alloc_HTA_cmd_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alloc_HTA_cmd_ap_ack\" :  \"" << alloc_HTA_cmd_ap_ack.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

