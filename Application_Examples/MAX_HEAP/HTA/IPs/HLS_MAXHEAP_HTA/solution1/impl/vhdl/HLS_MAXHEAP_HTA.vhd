-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity HLS_MAXHEAP_HTA is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (31 downto 0);
    data_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    data_ce0 : OUT STD_LOGIC;
    data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dis_output_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    dis_output_ce0 : OUT STD_LOGIC;
    dis_output_we0 : OUT STD_LOGIC;
    dis_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_HTA_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_HTA_size_ap_vld : OUT STD_LOGIC;
    alloc_HTA_size_ap_ack : IN STD_LOGIC;
    alloc_HTA_free_target : OUT STD_LOGIC_VECTOR (31 downto 0);
    alloc_HTA_free_target_ap_vld : OUT STD_LOGIC;
    alloc_HTA_free_target_ap_ack : IN STD_LOGIC;
    alloc_HTA_addr : IN STD_LOGIC_VECTOR (31 downto 0);
    alloc_HTA_addr_ap_vld : IN STD_LOGIC;
    alloc_HTA_addr_ap_ack : OUT STD_LOGIC;
    alloc_HTA_cmd : OUT STD_LOGIC_VECTOR (7 downto 0);
    alloc_HTA_cmd_ap_vld : OUT STD_LOGIC;
    alloc_HTA_cmd_ap_ack : IN STD_LOGIC );
end;


architecture behav of HLS_MAXHEAP_HTA is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "HLS_MAXHEAP_HTA,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.683000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=1001,HLS_SYN_LUT=2315,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (30 downto 0) := "0000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (30 downto 0) := "0000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (30 downto 0) := "0000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (30 downto 0) := "0000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (30 downto 0) := "0000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (30 downto 0) := "0000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (30 downto 0) := "0001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv13_4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv13_5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000110";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_1_fu_704_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_reg_1630 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_HLS_malloc_2_s_fu_649_ap_idle : STD_LOGIC;
    signal grp_HLS_malloc_2_s_fu_649_ap_ready : STD_LOGIC;
    signal grp_HLS_malloc_2_s_fu_649_ap_done : STD_LOGIC;
    signal HTA_heap_0_addr_reg_1635 : STD_LOGIC_VECTOR (10 downto 0);
    signal newIndex3_cast1_fu_747_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal newIndex3_cast1_reg_1640 : STD_LOGIC_VECTOR (11 downto 0);
    signal newIndex4_cast_fu_766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex4_cast_reg_1646 : STD_LOGIC_VECTOR (63 downto 0);
    signal offset_head_fu_771_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal offset_head_cast_fu_778_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_head_cast_reg_1656 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_tail_cast_fu_803_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_tail_cast_reg_1662 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_3_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex14_reg_1676 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_831_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_reg_1681 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_HLS_malloc_3_s_fu_661_ap_idle : STD_LOGIC;
    signal grp_HLS_malloc_3_s_fu_661_ap_ready : STD_LOGIC;
    signal grp_HLS_malloc_3_s_fu_661_ap_done : STD_LOGIC;
    signal tmp_9_fu_854_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_reg_1686 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_reg_1691 : STD_LOGIC_VECTOR (8 downto 0);
    signal offset_new_node_fu_920_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal offset_new_node_reg_1696 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal offset_new_node_cast_fu_927_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_new_node_cast_reg_1701 : STD_LOGIC_VECTOR (31 downto 0);
    signal newIndex10_cast1_fu_933_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal newIndex10_cast1_reg_1707 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_944_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_1712 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1717 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_954_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_22_reg_1722 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_fu_964_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1727 : STD_LOGIC_VECTOR (0 downto 0);
    signal HTA_heap_1_addr_7_reg_1731 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_fu_990_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1736 : STD_LOGIC_VECTOR (0 downto 0);
    signal HTA_heap_1_addr_8_reg_1740 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_fu_1024_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_1745 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal HTA_heap_0_addr_13_reg_1750 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_addr_11_reg_1755 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal HTA_heap_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_12_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_1780 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_33_fu_1072_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_1784 : STD_LOGIC_VECTOR (0 downto 0);
    signal HTA_heap_0_addr_16_reg_1789 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_addr_14_reg_1794 : STD_LOGIC_VECTOR (10 downto 0);
    signal swap_tmp_fu_1092_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal swap_tmp_reg_1799 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_13_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1135_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_reg_1818 : STD_LOGIC_VECTOR (30 downto 0);
    signal offset_last_parent_1_fu_1157_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal i_2_fu_1174_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_2_reg_1831 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_5_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1196_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_1846 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_25_fu_1214_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_25_reg_1853 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal tmp_28_fu_1273_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_1878 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal tmp_11_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1882 : STD_LOGIC_VECTOR (0 downto 0);
    signal HTA_heap_0_addr_18_reg_1886 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_addr_16_reg_1891 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_addr_15_reg_1896 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_0_addr_17_reg_1901 : STD_LOGIC_VECTOR (10 downto 0);
    signal newIndex30_reg_1906 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_HLS_free_1_s_fu_687_ap_idle : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_687_ap_ready : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_687_ap_done : STD_LOGIC;
    signal offset_tail_3_fu_1354_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_tail_3_reg_1921 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_31_fu_1361_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_31_reg_1926 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_32_fu_1371_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1932 : STD_LOGIC_VECTOR (0 downto 0);
    signal HTA_heap_1_addr_19_reg_1940 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_0_addr_21_reg_1945 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_14_fu_1391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal tmp_15_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1964 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal HTA_heap_0_addr_23_reg_1968 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_addr_21_reg_1974 : STD_LOGIC_VECTOR (10 downto 0);
    signal newIndex12_reg_1980 : STD_LOGIC_VECTOR (11 downto 0);
    signal offset_left_fu_1462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_left_reg_1985 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal tmp_35_fu_1469_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_1991 : STD_LOGIC_VECTOR (0 downto 0);
    signal HTA_heap_0_addr_24_reg_1996 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_addr_22_reg_2002 : STD_LOGIC_VECTOR (10 downto 0);
    signal offset_right_fu_1494_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_right_reg_2018 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_36_fu_1501_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_2024 : STD_LOGIC_VECTOR (0 downto 0);
    signal HTA_heap_0_addr_26_reg_2029 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_addr_24_reg_2034 : STD_LOGIC_VECTOR (10 downto 0);
    signal swap_tmp1_fu_1521_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal swap_tmp1_reg_2039 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_fu_1607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_2047 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal HTA_heap_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_0_ce0 : STD_LOGIC;
    signal HTA_heap_0_we0 : STD_LOGIC;
    signal HTA_heap_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal HTA_heap_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal HTA_heap_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_0_ce1 : STD_LOGIC;
    signal HTA_heap_0_we1 : STD_LOGIC;
    signal HTA_heap_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal HTA_heap_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_ce0 : STD_LOGIC;
    signal HTA_heap_1_we0 : STD_LOGIC;
    signal HTA_heap_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal HTA_heap_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal HTA_heap_1_ce1 : STD_LOGIC;
    signal HTA_heap_1_we1 : STD_LOGIC;
    signal HTA_heap_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal HTA_heap_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_2_s_fu_649_ap_start : STD_LOGIC;
    signal grp_HLS_malloc_2_s_fu_649_allocator_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_2_s_fu_649_allocator_free_targe : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack : STD_LOGIC;
    signal grp_HLS_malloc_2_s_fu_649_allocator_cmd : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_2_s_fu_649_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_3_s_fu_661_ap_start : STD_LOGIC;
    signal grp_HLS_malloc_3_s_fu_661_allocator_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_3_s_fu_661_allocator_free_targe : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack : STD_LOGIC;
    signal grp_HLS_malloc_3_s_fu_661_allocator_cmd : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_3_s_fu_661_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_1_s_fu_673_ap_start : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_673_ap_done : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_673_ap_idle : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_673_ap_ready : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_673_allocator_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_673_allocator_free_targe : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack : STD_LOGIC;
    signal grp_HLS_malloc_1_s_fu_673_allocator_cmd : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_687_ap_start : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_687_allocator_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_free_1_s_fu_687_allocator_size_ap_vld : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_687_allocator_free_targe : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld : STD_LOGIC;
    signal grp_HLS_free_1_s_fu_687_allocator_cmd : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld : STD_LOGIC;
    signal offset_last_parent1_reg_543 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_tail_reg_554 : STD_LOGIC_VECTOR (15 downto 0);
    signal cnt_insert_reg_563 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_pn1_reg_575 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal offset_parent_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal offset_now_reg_595 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_605 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_pn2_reg_617 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_pn2_be_phi_fu_642_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HLS_malloc_2_s_fu_649_ap_start_reg : STD_LOGIC := '0';
    signal grp_HLS_malloc_3_s_fu_661_ap_start_reg : STD_LOGIC := '0';
    signal grp_HLS_malloc_1_s_fu_673_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_HLS_free_1_s_fu_687_ap_start_reg : STD_LOGIC := '0';
    signal newIndex2_fu_722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex3_cast_fu_755_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex6_cast_fu_787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex7_cast_fu_798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_816_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex9_fu_849_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex10_cast_fu_884_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex11_cast_fu_902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal newIndex13_cast_fu_914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex14_cast_fu_940_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex15_cast_fu_978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex16_cast_fu_1004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex19_cast_fu_1010_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex21_cast_fu_1015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex23_cast_fu_1038_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex24_cast_fu_1060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex27_fu_1086_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex32_cast_fu_1129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex18_fu_1190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_1200_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex22_cast_fu_1234_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex25_cast_fu_1256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex30_cast_fu_1306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex29_cast_fu_1328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex31_cast_fu_1349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex33_cast_fu_1385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex34_cast_fu_1412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex35_fu_1441_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex36_fu_1483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex12_cast_fu_1489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex5_fu_1515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal now_load_phi_fu_1099_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tail_load_phi_fu_1205_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal swap_tmp3_fu_1586_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal swap_tmp2_fu_1552_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newIndex1_fu_714_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2_fu_727_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal newIndex3_fu_737_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex4_fu_760_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal newIndex6_fu_782_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal newIndex7_fu_793_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal cnt_insert_cast_fu_807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newIndex8_fu_841_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal newIndex10_fu_864_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex10_cast2_fu_889_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal newIndex11_fu_896_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal newIndex13_fu_908_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_sum1_fu_958_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex15_fu_968_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_sum2_fu_984_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex16_fu_994_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_699_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal newIndex23_fu_1028_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_fu_1020_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal now_0_sum_fu_1044_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex24_fu_1050_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal newIndex26_fu_1076_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_sum4_fu_1114_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex32_fu_1119_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_34_fu_1141_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1145_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_cast_fu_1165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newIndex17_fu_1180_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_sum_fu_1218_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex22_fu_1224_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_sum7_fu_1240_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex25_fu_1246_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_v_fu_1262_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal HTA_heap_load_phi_fu_1277_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1269_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_sum8_fu_1290_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex29_fu_1296_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_sum3_fu_1312_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex28_fu_1318_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_sum9_fu_1334_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal now_1_sum1_fu_1365_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex31_fu_1375_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal now_1_sum_fu_1397_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex33_fu_1402_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal HTA_heap_load_5_phi_fu_1418_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newIndex34_fu_1431_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_sum6_fu_1447_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex20_fu_1473_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal newIndex_fu_1505_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_16_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_1533_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (30 downto 0);

    component HLS_malloc_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        allocator_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_size_ap_vld : OUT STD_LOGIC;
        allocator_size_ap_ack : IN STD_LOGIC;
        allocator_free_targe : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_free_targe_ap_vld : OUT STD_LOGIC;
        allocator_free_targe_ap_ack : IN STD_LOGIC;
        allocator_addr : IN STD_LOGIC_VECTOR (31 downto 0);
        allocator_addr_ap_vld : IN STD_LOGIC;
        allocator_addr_ap_ack : OUT STD_LOGIC;
        allocator_cmd : OUT STD_LOGIC_VECTOR (7 downto 0);
        allocator_cmd_ap_vld : OUT STD_LOGIC;
        allocator_cmd_ap_ack : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HLS_malloc_3_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        allocator_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_size_ap_vld : OUT STD_LOGIC;
        allocator_size_ap_ack : IN STD_LOGIC;
        allocator_free_targe : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_free_targe_ap_vld : OUT STD_LOGIC;
        allocator_free_targe_ap_ack : IN STD_LOGIC;
        allocator_addr : IN STD_LOGIC_VECTOR (31 downto 0);
        allocator_addr_ap_vld : IN STD_LOGIC;
        allocator_addr_ap_ack : OUT STD_LOGIC;
        allocator_cmd : OUT STD_LOGIC_VECTOR (7 downto 0);
        allocator_cmd_ap_vld : OUT STD_LOGIC;
        allocator_cmd_ap_ack : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HLS_malloc_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        size : IN STD_LOGIC_VECTOR (31 downto 0);
        allocator_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_size_ap_vld : OUT STD_LOGIC;
        allocator_size_ap_ack : IN STD_LOGIC;
        allocator_free_targe : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_free_targe_ap_vld : OUT STD_LOGIC;
        allocator_free_targe_ap_ack : IN STD_LOGIC;
        allocator_addr : IN STD_LOGIC_VECTOR (31 downto 0);
        allocator_addr_ap_vld : IN STD_LOGIC;
        allocator_addr_ap_ack : OUT STD_LOGIC;
        allocator_cmd : OUT STD_LOGIC_VECTOR (7 downto 0);
        allocator_cmd_ap_vld : OUT STD_LOGIC;
        allocator_cmd_ap_ack : IN STD_LOGIC );
    end component;


    component HLS_free_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        free_target : IN STD_LOGIC_VECTOR (31 downto 0);
        allocator_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_size_ap_vld : OUT STD_LOGIC;
        allocator_size_ap_ack : IN STD_LOGIC;
        allocator_free_targe : OUT STD_LOGIC_VECTOR (31 downto 0);
        allocator_free_targe_ap_vld : OUT STD_LOGIC;
        allocator_free_targe_ap_ack : IN STD_LOGIC;
        allocator_cmd : OUT STD_LOGIC_VECTOR (7 downto 0);
        allocator_cmd_ap_vld : OUT STD_LOGIC;
        allocator_cmd_ap_ack : IN STD_LOGIC );
    end component;


    component HLS_MAXHEAP_HTA_Hbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    HTA_heap_0_U : component HLS_MAXHEAP_HTA_Hbkb
    generic map (
        DataWidth => 32,
        AddressRange => 2000,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => HTA_heap_0_address0,
        ce0 => HTA_heap_0_ce0,
        we0 => HTA_heap_0_we0,
        d0 => HTA_heap_0_d0,
        q0 => HTA_heap_0_q0,
        address1 => HTA_heap_0_address1,
        ce1 => HTA_heap_0_ce1,
        we1 => HTA_heap_0_we1,
        d1 => HTA_heap_0_d1,
        q1 => HTA_heap_0_q1);

    HTA_heap_1_U : component HLS_MAXHEAP_HTA_Hbkb
    generic map (
        DataWidth => 32,
        AddressRange => 2000,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => HTA_heap_1_address0,
        ce0 => HTA_heap_1_ce0,
        we0 => HTA_heap_1_we0,
        d0 => HTA_heap_1_d0,
        q0 => HTA_heap_1_q0,
        address1 => HTA_heap_1_address1,
        ce1 => HTA_heap_1_ce1,
        we1 => HTA_heap_1_we1,
        d1 => HTA_heap_1_d1,
        q1 => HTA_heap_1_q1);

    grp_HLS_malloc_2_s_fu_649 : component HLS_malloc_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HLS_malloc_2_s_fu_649_ap_start,
        ap_done => grp_HLS_malloc_2_s_fu_649_ap_done,
        ap_idle => grp_HLS_malloc_2_s_fu_649_ap_idle,
        ap_ready => grp_HLS_malloc_2_s_fu_649_ap_ready,
        allocator_size => grp_HLS_malloc_2_s_fu_649_allocator_size,
        allocator_size_ap_vld => grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld,
        allocator_size_ap_ack => alloc_HTA_size_ap_ack,
        allocator_free_targe => grp_HLS_malloc_2_s_fu_649_allocator_free_targe,
        allocator_free_targe_ap_vld => grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld,
        allocator_free_targe_ap_ack => alloc_HTA_free_target_ap_ack,
        allocator_addr => alloc_HTA_addr,
        allocator_addr_ap_vld => alloc_HTA_addr_ap_vld,
        allocator_addr_ap_ack => grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack,
        allocator_cmd => grp_HLS_malloc_2_s_fu_649_allocator_cmd,
        allocator_cmd_ap_vld => grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld,
        allocator_cmd_ap_ack => alloc_HTA_cmd_ap_ack,
        ap_return => grp_HLS_malloc_2_s_fu_649_ap_return);

    grp_HLS_malloc_3_s_fu_661 : component HLS_malloc_3_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HLS_malloc_3_s_fu_661_ap_start,
        ap_done => grp_HLS_malloc_3_s_fu_661_ap_done,
        ap_idle => grp_HLS_malloc_3_s_fu_661_ap_idle,
        ap_ready => grp_HLS_malloc_3_s_fu_661_ap_ready,
        allocator_size => grp_HLS_malloc_3_s_fu_661_allocator_size,
        allocator_size_ap_vld => grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld,
        allocator_size_ap_ack => alloc_HTA_size_ap_ack,
        allocator_free_targe => grp_HLS_malloc_3_s_fu_661_allocator_free_targe,
        allocator_free_targe_ap_vld => grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld,
        allocator_free_targe_ap_ack => alloc_HTA_free_target_ap_ack,
        allocator_addr => alloc_HTA_addr,
        allocator_addr_ap_vld => alloc_HTA_addr_ap_vld,
        allocator_addr_ap_ack => grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack,
        allocator_cmd => grp_HLS_malloc_3_s_fu_661_allocator_cmd,
        allocator_cmd_ap_vld => grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld,
        allocator_cmd_ap_ack => alloc_HTA_cmd_ap_ack,
        ap_return => grp_HLS_malloc_3_s_fu_661_ap_return);

    grp_HLS_malloc_1_s_fu_673 : component HLS_malloc_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HLS_malloc_1_s_fu_673_ap_start,
        ap_done => grp_HLS_malloc_1_s_fu_673_ap_done,
        ap_idle => grp_HLS_malloc_1_s_fu_673_ap_idle,
        ap_ready => grp_HLS_malloc_1_s_fu_673_ap_ready,
        size => n,
        allocator_size => grp_HLS_malloc_1_s_fu_673_allocator_size,
        allocator_size_ap_vld => grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld,
        allocator_size_ap_ack => alloc_HTA_size_ap_ack,
        allocator_free_targe => grp_HLS_malloc_1_s_fu_673_allocator_free_targe,
        allocator_free_targe_ap_vld => grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld,
        allocator_free_targe_ap_ack => alloc_HTA_free_target_ap_ack,
        allocator_addr => alloc_HTA_addr,
        allocator_addr_ap_vld => alloc_HTA_addr_ap_vld,
        allocator_addr_ap_ack => grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack,
        allocator_cmd => grp_HLS_malloc_1_s_fu_673_allocator_cmd,
        allocator_cmd_ap_vld => grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld,
        allocator_cmd_ap_ack => alloc_HTA_cmd_ap_ack);

    grp_HLS_free_1_s_fu_687 : component HLS_free_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HLS_free_1_s_fu_687_ap_start,
        ap_done => grp_HLS_free_1_s_fu_687_ap_done,
        ap_idle => grp_HLS_free_1_s_fu_687_ap_idle,
        ap_ready => grp_HLS_free_1_s_fu_687_ap_ready,
        free_target => offset_now_reg_595,
        allocator_size => grp_HLS_free_1_s_fu_687_allocator_size,
        allocator_size_ap_vld => grp_HLS_free_1_s_fu_687_allocator_size_ap_vld,
        allocator_size_ap_ack => alloc_HTA_size_ap_ack,
        allocator_free_targe => grp_HLS_free_1_s_fu_687_allocator_free_targe,
        allocator_free_targe_ap_vld => grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld,
        allocator_free_targe_ap_ack => alloc_HTA_free_target_ap_ack,
        allocator_cmd => grp_HLS_free_1_s_fu_687_allocator_cmd,
        allocator_cmd_ap_vld => grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld,
        allocator_cmd_ap_ack => alloc_HTA_cmd_ap_ack);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_HLS_free_1_s_fu_687_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HLS_free_1_s_fu_687_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_HLS_free_1_s_fu_687_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HLS_free_1_s_fu_687_ap_ready = ap_const_logic_1)) then 
                    grp_HLS_free_1_s_fu_687_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HLS_malloc_1_s_fu_673_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HLS_malloc_1_s_fu_673_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_HLS_malloc_1_s_fu_673_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HLS_malloc_1_s_fu_673_ap_ready = ap_const_logic_1)) then 
                    grp_HLS_malloc_1_s_fu_673_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HLS_malloc_2_s_fu_649_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HLS_malloc_2_s_fu_649_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_HLS_malloc_2_s_fu_649_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HLS_malloc_2_s_fu_649_ap_ready = ap_const_logic_1)) then 
                    grp_HLS_malloc_2_s_fu_649_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HLS_malloc_3_s_fu_661_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HLS_malloc_3_s_fu_661_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_3_fu_811_p2 = ap_const_lv1_1))) then 
                    grp_HLS_malloc_3_s_fu_661_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HLS_malloc_3_s_fu_661_ap_ready = ap_const_logic_1)) then 
                    grp_HLS_malloc_3_s_fu_661_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cnt_insert_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                cnt_insert_reg_563 <= i_reg_1818;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                cnt_insert_reg_563 <= ap_const_lv31_1;
            end if; 
        end if;
    end process;

    i_1_reg_605_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_3_fu_811_p2 = ap_const_lv1_0))) then 
                i_1_reg_605 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_20_fu_1613_p2 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_0)) or ((tmp_15_reg_1964 = ap_const_lv1_1) and (tmp_14_reg_1950 = ap_const_lv1_1))))) then 
                i_1_reg_605 <= i_2_reg_1831;
            end if; 
        end if;
    end process;

    offset_last_parent1_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                offset_last_parent1_reg_543 <= offset_last_parent_1_fu_1157_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                offset_last_parent1_reg_543 <= offset_head_cast_fu_778_p1;
            end if; 
        end if;
    end process;

    offset_now_reg_595_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_3_fu_811_p2 = ap_const_lv1_0))) then 
                offset_now_reg_595 <= offset_tail_cast_fu_803_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_20_fu_1613_p2 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_0)) or ((tmp_15_reg_1964 = ap_const_lv1_1) and (tmp_14_reg_1950 = ap_const_lv1_1))))) then 
                offset_now_reg_595 <= offset_tail_3_reg_1921;
            end if; 
        end if;
    end process;

    offset_parent_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                offset_parent_reg_584 <= HTA_heap_0_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                offset_parent_reg_584 <= HTA_heap_1_q0;
            end if; 
        end if;
    end process;

    offset_tail_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                                offset_tail_reg_554(15 downto 3) <= offset_new_node_reg_1696(15 downto 3);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                                offset_tail_reg_554(15 downto 3) <= offset_head_fu_771_p3(15 downto 3);
            end if; 
        end if;
    end process;

    p_pn1_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_pn1_reg_575 <= offset_parent_reg_584;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                p_pn1_reg_575 <= offset_new_node_cast_reg_1701;
            end if; 
        end if;
    end process;

    p_pn2_reg_617_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                p_pn2_reg_617 <= ap_phi_mux_p_pn2_be_phi_fu_642_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                p_pn2_reg_617 <= offset_head_cast_reg_1656;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                HTA_heap_0_addr_13_reg_1750 <= newIndex23_cast_fu_1038_p1(11 - 1 downto 0);
                HTA_heap_1_addr_11_reg_1755 <= newIndex23_cast_fu_1038_p1(11 - 1 downto 0);
                tmp_30_reg_1745 <= tmp_30_fu_1024_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_12_fu_1066_p2 = ap_const_lv1_0))) then
                HTA_heap_0_addr_16_reg_1789 <= newIndex27_fu_1086_p1(11 - 1 downto 0);
                HTA_heap_1_addr_14_reg_1794 <= newIndex27_fu_1086_p1(11 - 1 downto 0);
                tmp_33_reg_1784 <= tmp_33_fu_1072_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_11_fu_1284_p2 = ap_const_lv1_1))) then
                HTA_heap_0_addr_17_reg_1901 <= newIndex29_cast_fu_1328_p1(11 - 1 downto 0);
                HTA_heap_1_addr_15_reg_1896 <= newIndex29_cast_fu_1328_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (tmp_11_fu_1284_p2 = ap_const_lv1_0))) then
                HTA_heap_0_addr_18_reg_1886 <= newIndex30_cast_fu_1306_p1(11 - 1 downto 0);
                HTA_heap_1_addr_16_reg_1891 <= newIndex30_cast_fu_1306_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                HTA_heap_0_addr_21_reg_1945 <= newIndex33_cast_fu_1385_p1(11 - 1 downto 0);
                HTA_heap_1_addr_19_reg_1940 <= newIndex33_cast_fu_1385_p1(11 - 1 downto 0);
                tmp_31_reg_1926 <= tmp_31_fu_1361_p1;
                tmp_32_reg_1932 <= tmp_32_fu_1371_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and ((tmp_15_fu_1425_p2 = ap_const_lv1_0) or (tmp_14_reg_1950 = ap_const_lv1_0)))) then
                HTA_heap_0_addr_23_reg_1968 <= newIndex35_fu_1441_p1(11 - 1 downto 0);
                HTA_heap_1_addr_21_reg_1974 <= newIndex35_fu_1441_p1(11 - 1 downto 0);
                newIndex12_reg_1980 <= p_sum6_fu_1447_p2(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                HTA_heap_0_addr_24_reg_1996 <= newIndex36_fu_1483_p1(11 - 1 downto 0);
                HTA_heap_1_addr_22_reg_2002 <= newIndex36_fu_1483_p1(11 - 1 downto 0);
                offset_left_reg_1985 <= offset_left_fu_1462_p3;
                tmp_35_reg_1991 <= tmp_35_fu_1469_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                HTA_heap_0_addr_26_reg_2029 <= newIndex5_fu_1515_p1(11 - 1 downto 0);
                HTA_heap_1_addr_24_reg_2034 <= newIndex5_fu_1515_p1(11 - 1 downto 0);
                offset_right_reg_2018 <= offset_right_fu_1494_p3;
                swap_tmp1_reg_2039 <= swap_tmp1_fu_1521_p3;
                tmp_36_reg_2024 <= tmp_36_fu_1501_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_HLS_malloc_2_s_fu_649_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    HTA_heap_0_addr_reg_1635(10 downto 2) <= newIndex2_fu_722_p1(11 - 1 downto 0)(10 downto 2);
                    newIndex3_cast1_reg_1640(11 downto 2) <= newIndex3_cast1_fu_747_p3(11 downto 2);
                    newIndex4_cast_reg_1646(11 downto 2) <= newIndex4_cast_fu_766_p1(11 downto 2);
                tmp_1_reg_1630 <= grp_HLS_malloc_2_s_fu_649_ap_return(15 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_21_fu_944_p1 = ap_const_lv1_0))) then
                HTA_heap_1_addr_7_reg_1731 <= newIndex15_cast_fu_978_p1(11 - 1 downto 0);
                tmp_24_reg_1727 <= tmp_24_fu_964_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_21_fu_944_p1 = ap_const_lv1_1))) then
                HTA_heap_1_addr_8_reg_1740 <= newIndex16_cast_fu_1004_p1(11 - 1 downto 0);
                tmp_23_reg_1736 <= tmp_23_fu_990_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                i_2_reg_1831 <= i_2_fu_1174_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and ((tmp_13_fu_1108_p2 = ap_const_lv1_1) or (tmp_12_reg_1780 = ap_const_lv1_1)))) then
                i_reg_1818 <= i_fu_1135_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    newIndex10_cast1_reg_1707(10 downto 2) <= newIndex10_cast1_fu_933_p3(10 downto 2);
                    offset_new_node_cast_reg_1701(15 downto 3) <= offset_new_node_cast_fu_927_p1(15 downto 3);
                    offset_new_node_reg_1696(15 downto 3) <= offset_new_node_fu_920_p3(15 downto 3);
                tmp_21_reg_1712 <= tmp_21_fu_944_p1;
                tmp_22_reg_1722 <= tmp_22_fu_954_p1;
                tmp_s_reg_1717 <= tmp_s_fu_948_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_3_fu_811_p2 = ap_const_lv1_1))) then
                newIndex14_reg_1676 <= offset_tail_reg_554(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                newIndex30_reg_1906 <= p_sum9_fu_1334_p2(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    offset_head_cast_reg_1656(15 downto 3) <= offset_head_cast_fu_778_p1(15 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                offset_tail_3_reg_1921 <= offset_tail_3_fu_1354_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    offset_tail_cast_reg_1662(15 downto 3) <= offset_tail_cast_fu_803_p1(15 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and ((tmp_15_reg_1964 = ap_const_lv1_0) or (tmp_14_reg_1950 = ap_const_lv1_0)))) then
                or_cond_reg_2047 <= or_cond_fu_1607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_12_reg_1780 = ap_const_lv1_0))) then
                swap_tmp_reg_1799 <= swap_tmp_fu_1092_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_HLS_malloc_3_s_fu_661_ap_done = ap_const_logic_1))) then
                tmp_10_reg_1691 <= grp_HLS_malloc_3_s_fu_661_ap_return(11 downto 3);
                tmp_8_reg_1681 <= grp_HLS_malloc_3_s_fu_661_ap_return(15 downto 3);
                tmp_9_reg_1686 <= grp_HLS_malloc_3_s_fu_661_ap_return(12 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                tmp_11_reg_1882 <= tmp_11_fu_1284_p2;
                tmp_28_reg_1878 <= tmp_28_fu_1273_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                tmp_12_reg_1780 <= tmp_12_fu_1066_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                tmp_14_reg_1950 <= tmp_14_fu_1391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_14_reg_1950 = ap_const_lv1_1))) then
                tmp_15_reg_1964 <= tmp_15_fu_1425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                tmp_25_reg_1853 <= tmp_25_fu_1214_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                tmp_26_reg_1846 <= tmp_26_fu_1196_p1;
            end if;
        end if;
    end process;
    HTA_heap_0_addr_reg_1635(1 downto 0) <= "00";
    newIndex3_cast1_reg_1640(1 downto 0) <= "00";
    newIndex4_cast_reg_1646(1 downto 0) <= "01";
    newIndex4_cast_reg_1646(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    offset_head_cast_reg_1656(2 downto 0) <= "000";
    offset_head_cast_reg_1656(31 downto 16) <= "0000000000000000";
    offset_tail_cast_reg_1662(2 downto 0) <= "000";
    offset_tail_cast_reg_1662(31 downto 16) <= "0000000000000000";
    offset_new_node_reg_1696(2 downto 0) <= "000";
    offset_new_node_cast_reg_1701(2 downto 0) <= "000";
    offset_new_node_cast_reg_1701(31 downto 16) <= "0000000000000000";
    newIndex10_cast1_reg_1707(1 downto 0) <= "00";
    offset_tail_reg_554(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, grp_HLS_malloc_2_s_fu_649_ap_done, ap_CS_fsm_state6, tmp_3_fu_811_p2, ap_CS_fsm_state7, grp_HLS_malloc_3_s_fu_661_ap_done, tmp_30_fu_1024_p1, ap_CS_fsm_state11, tmp_12_reg_1780, ap_CS_fsm_state15, tmp_13_fu_1108_p2, ap_CS_fsm_state18, tmp_5_fu_1169_p2, ap_CS_fsm_state23, grp_HLS_free_1_s_fu_687_ap_done, tmp_14_reg_1950, tmp_15_fu_1425_p2, tmp_15_reg_1964, ap_CS_fsm_state27, or_cond_fu_1607_p2, ap_CS_fsm_state30, grp_HLS_malloc_1_s_fu_673_ap_done, tmp_20_fu_1613_p2, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_HLS_malloc_1_s_fu_673_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_HLS_malloc_2_s_fu_649_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_3_fu_811_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_HLS_malloc_3_s_fu_661_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_30_fu_1024_p1 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_13_fu_1108_p2 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_5_fu_1169_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_HLS_free_1_s_fu_687_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_15_fu_1425_p2 = ap_const_lv1_1) and (tmp_14_reg_1950 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_20_fu_1613_p2 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_0)) or ((tmp_15_reg_1964 = ap_const_lv1_1) and (tmp_14_reg_1950 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    HTA_heap_0_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state7, tmp_21_reg_1712, tmp_12_reg_1780, ap_CS_fsm_state14, tmp_33_reg_1784, HTA_heap_0_addr_16_reg_1789, ap_CS_fsm_state15, tmp_13_fu_1108_p2, ap_CS_fsm_state18, tmp_26_reg_1846, ap_CS_fsm_state20, ap_CS_fsm_state23, tmp_32_reg_1932, tmp_14_reg_1950, ap_CS_fsm_state26, tmp_15_reg_1964, HTA_heap_0_addr_23_reg_1968, ap_CS_fsm_state28, HTA_heap_0_addr_24_reg_1996, ap_CS_fsm_state29, or_cond_fu_1607_p2, ap_CS_fsm_state30, ap_CS_fsm_state10, tmp_20_fu_1613_p2, newIndex2_fu_722_p1, newIndex6_cast_fu_787_p1, newIndex9_fu_849_p1, newIndex11_cast_fu_902_p1, ap_CS_fsm_state8, newIndex19_cast_fu_1010_p1, newIndex21_cast_fu_1015_p1, newIndex27_fu_1086_p1, newIndex32_cast_fu_1129_p1, newIndex18_fu_1190_p1, newIndex22_cast_fu_1234_p1, newIndex25_cast_fu_1256_p1, newIndex31_cast_fu_1349_p1, newIndex34_cast_fu_1412_p1, newIndex12_cast_fu_1489_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1)) or ((tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1)) or ((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1)))))) then 
            HTA_heap_0_address0 <= HTA_heap_0_addr_23_reg_1968;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            HTA_heap_0_address0 <= HTA_heap_0_addr_24_reg_1996;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            HTA_heap_0_address0 <= newIndex12_cast_fu_1489_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            HTA_heap_0_address0 <= newIndex34_cast_fu_1412_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            HTA_heap_0_address0 <= newIndex31_cast_fu_1349_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_26_reg_1846 = ap_const_lv1_0))) then 
            HTA_heap_0_address0 <= newIndex25_cast_fu_1256_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_26_reg_1846 = ap_const_lv1_1))) then 
            HTA_heap_0_address0 <= newIndex22_cast_fu_1234_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            HTA_heap_0_address0 <= newIndex18_fu_1190_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and ((tmp_13_fu_1108_p2 = ap_const_lv1_1) or (tmp_12_reg_1780 = ap_const_lv1_1)))) then 
            HTA_heap_0_address0 <= newIndex32_cast_fu_1129_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_13_fu_1108_p2 = ap_const_lv1_0) and (tmp_33_reg_1784 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_0))) then 
            HTA_heap_0_address0 <= HTA_heap_0_addr_16_reg_1789;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            HTA_heap_0_address0 <= newIndex27_fu_1086_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_1))) then 
            HTA_heap_0_address0 <= newIndex21_cast_fu_1015_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_0))) then 
            HTA_heap_0_address0 <= newIndex19_cast_fu_1010_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            HTA_heap_0_address0 <= newIndex11_cast_fu_902_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            HTA_heap_0_address0 <= newIndex9_fu_849_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            HTA_heap_0_address0 <= newIndex6_cast_fu_787_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            HTA_heap_0_address0 <= newIndex2_fu_722_p1(11 - 1 downto 0);
        else 
            HTA_heap_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    HTA_heap_0_address1_assign_proc : process(ap_CS_fsm_state4, HTA_heap_0_addr_reg_1635, newIndex4_cast_fu_766_p1, ap_CS_fsm_state5, ap_CS_fsm_state9, tmp_21_fu_944_p1, tmp_24_fu_964_p1, tmp_23_fu_990_p1, ap_CS_fsm_state11, HTA_heap_0_addr_13_reg_1750, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_28_reg_1878, tmp_11_reg_1882, HTA_heap_0_addr_18_reg_1886, HTA_heap_0_addr_17_reg_1901, ap_CS_fsm_state22, ap_CS_fsm_state25, HTA_heap_0_addr_21_reg_1945, ap_CS_fsm_state27, HTA_heap_0_addr_23_reg_1968, ap_CS_fsm_state28, tmp_35_reg_1991, HTA_heap_0_addr_24_reg_1996, ap_CS_fsm_state29, tmp_36_reg_2024, HTA_heap_0_addr_26_reg_2029, or_cond_reg_2047, ap_CS_fsm_state16, ap_CS_fsm_state31, newIndex7_cast_fu_798_p1, ap_CS_fsm_state8, newIndex13_cast_fu_914_p1, newIndex15_cast_fu_978_p1, newIndex16_cast_fu_1004_p1, newIndex24_cast_fu_1060_p1, newIndex33_cast_fu_1385_p1, newIndex5_fu_1515_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_35_reg_1991 = ap_const_lv1_0) and (or_cond_reg_2047 = ap_const_lv1_1))) then 
            HTA_heap_0_address1 <= HTA_heap_0_addr_24_reg_1996;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_0) and (tmp_36_reg_2024 = ap_const_lv1_0))) then 
            HTA_heap_0_address1 <= HTA_heap_0_addr_26_reg_2029;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            HTA_heap_0_address1 <= newIndex5_fu_1515_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            HTA_heap_0_address1 <= HTA_heap_0_addr_23_reg_1968;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            HTA_heap_0_address1 <= HTA_heap_0_addr_21_reg_1945;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            HTA_heap_0_address1 <= newIndex33_cast_fu_1385_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_1) and (tmp_28_reg_1878 = ap_const_lv1_1))) then 
            HTA_heap_0_address1 <= HTA_heap_0_addr_17_reg_1901;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_0) and (tmp_28_reg_1878 = ap_const_lv1_0))) then 
            HTA_heap_0_address1 <= HTA_heap_0_addr_18_reg_1886;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            HTA_heap_0_address1 <= HTA_heap_0_addr_reg_1635;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            HTA_heap_0_address1 <= HTA_heap_0_addr_13_reg_1750;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            HTA_heap_0_address1 <= newIndex24_cast_fu_1060_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_23_fu_990_p1 = ap_const_lv1_1) and (tmp_21_fu_944_p1 = ap_const_lv1_1))) then 
            HTA_heap_0_address1 <= newIndex16_cast_fu_1004_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_24_fu_964_p1 = ap_const_lv1_0) and (tmp_21_fu_944_p1 = ap_const_lv1_0))) then 
            HTA_heap_0_address1 <= newIndex15_cast_fu_978_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            HTA_heap_0_address1 <= newIndex13_cast_fu_914_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            HTA_heap_0_address1 <= newIndex7_cast_fu_798_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            HTA_heap_0_address1 <= newIndex4_cast_fu_766_p1(11 - 1 downto 0);
        else 
            HTA_heap_0_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    HTA_heap_0_ce0_assign_proc : process(ap_CS_fsm_state4, grp_HLS_malloc_2_s_fu_649_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state7, grp_HLS_malloc_3_s_fu_661_ap_done, tmp_21_reg_1712, tmp_12_reg_1780, ap_CS_fsm_state14, tmp_33_reg_1784, ap_CS_fsm_state15, tmp_13_fu_1108_p2, ap_CS_fsm_state18, tmp_26_reg_1846, ap_CS_fsm_state20, ap_CS_fsm_state23, grp_HLS_free_1_s_fu_687_ap_done, tmp_32_reg_1932, tmp_14_reg_1950, ap_CS_fsm_state26, tmp_15_reg_1964, ap_CS_fsm_state28, ap_CS_fsm_state29, or_cond_fu_1607_p2, ap_CS_fsm_state30, ap_CS_fsm_state10, tmp_20_fu_1613_p2, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((grp_HLS_malloc_2_s_fu_649_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1)) or ((tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1)) or ((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1)))) or ((grp_HLS_free_1_s_fu_687_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_26_reg_1846 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_26_reg_1846 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and ((tmp_13_fu_1108_p2 = ap_const_lv1_1) or (tmp_12_reg_1780 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_13_fu_1108_p2 = ap_const_lv1_0) and (tmp_33_reg_1784 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_HLS_malloc_3_s_fu_661_ap_done = ap_const_logic_1)))) then 
            HTA_heap_0_ce0 <= ap_const_logic_1;
        else 
            HTA_heap_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    HTA_heap_0_ce1_assign_proc : process(ap_CS_fsm_state4, grp_HLS_malloc_2_s_fu_649_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state9, tmp_21_fu_944_p1, tmp_24_fu_964_p1, tmp_23_fu_990_p1, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_28_reg_1878, tmp_11_reg_1882, ap_CS_fsm_state22, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state28, tmp_35_reg_1991, ap_CS_fsm_state29, tmp_36_reg_2024, or_cond_reg_2047, ap_CS_fsm_state16, ap_CS_fsm_state31, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((grp_HLS_malloc_2_s_fu_649_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_0) and (tmp_36_reg_2024 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_35_reg_1991 = ap_const_lv1_0) and (or_cond_reg_2047 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_1) and (tmp_28_reg_1878 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_0) and (tmp_28_reg_1878 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_23_fu_990_p1 = ap_const_lv1_1) and (tmp_21_fu_944_p1 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_24_fu_964_p1 = ap_const_lv1_0) and (tmp_21_fu_944_p1 = ap_const_lv1_0)))) then 
            HTA_heap_0_ce1 <= ap_const_logic_1;
        else 
            HTA_heap_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    HTA_heap_0_d0_assign_proc : process(data_q0, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state7, tmp_21_reg_1712, tmp_12_reg_1780, tmp_33_reg_1784, ap_CS_fsm_state15, tmp_13_fu_1108_p2, tmp_32_reg_1932, tmp_14_reg_1950, tmp_15_reg_1964, or_cond_fu_1607_p2, ap_CS_fsm_state30, ap_CS_fsm_state10, tmp_20_fu_1613_p2, ap_CS_fsm_state8, now_load_phi_fu_1099_p3, swap_tmp3_fu_1586_p3, swap_tmp2_fu_1552_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1)) or ((tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1))))) then 
            HTA_heap_0_d0 <= swap_tmp2_fu_1552_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and (((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1)) or ((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1))))) then 
            HTA_heap_0_d0 <= swap_tmp3_fu_1586_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_13_fu_1108_p2 = ap_const_lv1_0) and (tmp_33_reg_1784 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_0))) then 
            HTA_heap_0_d0 <= now_load_phi_fu_1099_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_1))) then 
            HTA_heap_0_d0 <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_0))) then 
            HTA_heap_0_d0 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            HTA_heap_0_d0 <= ap_const_lv32_FFFFFFFF;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            HTA_heap_0_d0 <= data_q0;
        else 
            HTA_heap_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    HTA_heap_0_d1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, offset_tail_cast_reg_1662, ap_CS_fsm_state9, offset_new_node_cast_fu_927_p1, tmp_21_fu_944_p1, tmp_24_fu_964_p1, tmp_23_fu_990_p1, swap_tmp_reg_1799, ap_CS_fsm_state19, tmp_28_reg_1878, tmp_11_reg_1882, ap_CS_fsm_state22, tmp_35_reg_1991, tmp_36_reg_2024, swap_tmp1_reg_2039, or_cond_reg_2047, ap_CS_fsm_state16, ap_CS_fsm_state31, ap_CS_fsm_state8, tail_load_phi_fu_1205_p3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_0) and (tmp_36_reg_2024 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_35_reg_1991 = ap_const_lv1_0) and (or_cond_reg_2047 = ap_const_lv1_1)))) then 
            HTA_heap_0_d1 <= swap_tmp1_reg_2039;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            HTA_heap_0_d1 <= tail_load_phi_fu_1205_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            HTA_heap_0_d1 <= swap_tmp_reg_1799;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_23_fu_990_p1 = ap_const_lv1_1) and (tmp_21_fu_944_p1 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_24_fu_964_p1 = ap_const_lv1_0) and (tmp_21_fu_944_p1 = ap_const_lv1_0)))) then 
            HTA_heap_0_d1 <= offset_new_node_cast_fu_927_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            HTA_heap_0_d1 <= offset_tail_cast_reg_1662;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_1) and (tmp_28_reg_1878 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_0) and (tmp_28_reg_1878 = ap_const_lv1_0)))) then 
            HTA_heap_0_d1 <= ap_const_lv32_FFFFFFFF;
        else 
            HTA_heap_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    HTA_heap_0_we0_assign_proc : process(ap_CS_fsm_state4, grp_HLS_malloc_2_s_fu_649_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state7, grp_HLS_malloc_3_s_fu_661_ap_done, tmp_21_reg_1712, tmp_12_reg_1780, tmp_33_reg_1784, ap_CS_fsm_state15, tmp_13_fu_1108_p2, tmp_32_reg_1932, tmp_14_reg_1950, tmp_15_reg_1964, or_cond_fu_1607_p2, ap_CS_fsm_state30, ap_CS_fsm_state10, tmp_20_fu_1613_p2, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((grp_HLS_malloc_2_s_fu_649_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1)) or ((tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1)) or ((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_32_reg_1932 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_13_fu_1108_p2 = ap_const_lv1_0) and (tmp_33_reg_1784 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_HLS_malloc_3_s_fu_661_ap_done = ap_const_logic_1)))) then 
            HTA_heap_0_we0 <= ap_const_logic_1;
        else 
            HTA_heap_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    HTA_heap_0_we1_assign_proc : process(ap_CS_fsm_state4, grp_HLS_malloc_2_s_fu_649_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state9, tmp_21_fu_944_p1, tmp_24_fu_964_p1, tmp_23_fu_990_p1, tmp_30_reg_1745, ap_CS_fsm_state19, tmp_28_reg_1878, tmp_11_reg_1882, ap_CS_fsm_state22, tmp_35_reg_1991, tmp_36_reg_2024, or_cond_reg_2047, ap_CS_fsm_state16, ap_CS_fsm_state31, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((grp_HLS_malloc_2_s_fu_649_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_0) and (tmp_36_reg_2024 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_35_reg_1991 = ap_const_lv1_0) and (or_cond_reg_2047 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_30_reg_1745 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_1) and (tmp_28_reg_1878 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_0) and (tmp_28_reg_1878 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_23_fu_990_p1 = ap_const_lv1_1) and (tmp_21_fu_944_p1 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_24_fu_964_p1 = ap_const_lv1_0) and (tmp_21_fu_944_p1 = ap_const_lv1_0)))) then 
            HTA_heap_0_we1 <= ap_const_logic_1;
        else 
            HTA_heap_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    HTA_heap_1_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state9, tmp_21_reg_1712, ap_CS_fsm_state11, tmp_12_reg_1780, ap_CS_fsm_state14, tmp_33_reg_1784, HTA_heap_1_addr_14_reg_1794, ap_CS_fsm_state15, tmp_13_fu_1108_p2, tmp_26_reg_1846, ap_CS_fsm_state20, ap_CS_fsm_state23, tmp_32_reg_1932, tmp_14_reg_1950, ap_CS_fsm_state26, tmp_15_reg_1964, HTA_heap_1_addr_21_reg_1974, ap_CS_fsm_state28, HTA_heap_1_addr_22_reg_2002, ap_CS_fsm_state29, or_cond_fu_1607_p2, ap_CS_fsm_state30, tmp_20_fu_1613_p2, newIndex3_cast_fu_755_p1, newIndex6_cast_fu_787_p1, newIndex11_cast_fu_902_p1, ap_CS_fsm_state8, newIndex14_cast_fu_940_p1, newIndex24_cast_fu_1060_p1, newIndex27_fu_1086_p1, newIndex32_cast_fu_1129_p1, newIndex22_cast_fu_1234_p1, newIndex25_cast_fu_1256_p1, newIndex31_cast_fu_1349_p1, newIndex34_cast_fu_1412_p1, newIndex12_cast_fu_1489_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_15_reg_1964 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)) or ((tmp_14_reg_1950 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)) or ((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)))))) then 
            HTA_heap_1_address0 <= HTA_heap_1_addr_21_reg_1974;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            HTA_heap_1_address0 <= HTA_heap_1_addr_22_reg_2002;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            HTA_heap_1_address0 <= newIndex12_cast_fu_1489_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            HTA_heap_1_address0 <= newIndex34_cast_fu_1412_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            HTA_heap_1_address0 <= newIndex31_cast_fu_1349_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_26_reg_1846 = ap_const_lv1_1))) then 
            HTA_heap_1_address0 <= newIndex25_cast_fu_1256_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_26_reg_1846 = ap_const_lv1_0))) then 
            HTA_heap_1_address0 <= newIndex22_cast_fu_1234_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (((tmp_21_reg_1712 = ap_const_lv1_0) and (tmp_13_fu_1108_p2 = ap_const_lv1_1)) or ((tmp_21_reg_1712 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_1))))) then 
            HTA_heap_1_address0 <= newIndex32_cast_fu_1129_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_13_fu_1108_p2 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_0) and (tmp_33_reg_1784 = ap_const_lv1_1))) then 
            HTA_heap_1_address0 <= HTA_heap_1_addr_14_reg_1794;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            HTA_heap_1_address0 <= newIndex27_fu_1086_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            HTA_heap_1_address0 <= newIndex24_cast_fu_1060_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            HTA_heap_1_address0 <= newIndex14_cast_fu_940_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            HTA_heap_1_address0 <= newIndex11_cast_fu_902_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            HTA_heap_1_address0 <= newIndex6_cast_fu_787_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            HTA_heap_1_address0 <= newIndex3_cast_fu_755_p1(11 - 1 downto 0);
        else 
            HTA_heap_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    HTA_heap_1_address1_assign_proc : process(newIndex4_cast_reg_1646, ap_CS_fsm_state5, ap_CS_fsm_state7, tmp_21_reg_1712, tmp_24_reg_1727, HTA_heap_1_addr_7_reg_1731, tmp_23_reg_1736, HTA_heap_1_addr_8_reg_1740, HTA_heap_1_addr_11_reg_1755, ap_CS_fsm_state14, ap_CS_fsm_state18, tmp_28_reg_1878, tmp_11_reg_1882, HTA_heap_1_addr_16_reg_1891, HTA_heap_1_addr_15_reg_1896, ap_CS_fsm_state22, ap_CS_fsm_state25, HTA_heap_1_addr_19_reg_1940, ap_CS_fsm_state27, HTA_heap_1_addr_21_reg_1974, ap_CS_fsm_state28, tmp_35_reg_1991, HTA_heap_1_addr_22_reg_2002, ap_CS_fsm_state29, tmp_36_reg_2024, HTA_heap_1_addr_24_reg_2034, or_cond_reg_2047, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state31, newIndex10_cast_fu_884_p1, ap_CS_fsm_state8, newIndex13_cast_fu_914_p1, newIndex18_fu_1190_p1, newIndex33_cast_fu_1385_p1, newIndex5_fu_1515_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_1) and (tmp_35_reg_1991 = ap_const_lv1_1))) then 
            HTA_heap_1_address1 <= HTA_heap_1_addr_22_reg_2002;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_0) and (tmp_36_reg_2024 = ap_const_lv1_1))) then 
            HTA_heap_1_address1 <= HTA_heap_1_addr_24_reg_2034;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            HTA_heap_1_address1 <= newIndex5_fu_1515_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            HTA_heap_1_address1 <= HTA_heap_1_addr_21_reg_1974;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            HTA_heap_1_address1 <= HTA_heap_1_addr_19_reg_1940;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            HTA_heap_1_address1 <= newIndex33_cast_fu_1385_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_28_reg_1878 = ap_const_lv1_0) and (tmp_11_reg_1882 = ap_const_lv1_1))) then 
            HTA_heap_1_address1 <= HTA_heap_1_addr_15_reg_1896;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_0) and (tmp_28_reg_1878 = ap_const_lv1_1))) then 
            HTA_heap_1_address1 <= HTA_heap_1_addr_16_reg_1891;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            HTA_heap_1_address1 <= newIndex18_fu_1190_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            HTA_heap_1_address1 <= HTA_heap_1_addr_11_reg_1755;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_23_reg_1736 = ap_const_lv1_0) and (tmp_21_reg_1712 = ap_const_lv1_1))) then 
            HTA_heap_1_address1 <= HTA_heap_1_addr_8_reg_1740;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_0) and (tmp_24_reg_1727 = ap_const_lv1_1))) then 
            HTA_heap_1_address1 <= HTA_heap_1_addr_7_reg_1731;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            HTA_heap_1_address1 <= newIndex13_cast_fu_914_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            HTA_heap_1_address1 <= newIndex10_cast_fu_884_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            HTA_heap_1_address1 <= newIndex4_cast_reg_1646(11 - 1 downto 0);
        else 
            HTA_heap_1_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    HTA_heap_1_ce0_assign_proc : process(ap_CS_fsm_state4, grp_HLS_malloc_2_s_fu_649_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state9, tmp_21_reg_1712, ap_CS_fsm_state11, tmp_12_reg_1780, ap_CS_fsm_state14, tmp_33_reg_1784, ap_CS_fsm_state15, tmp_13_fu_1108_p2, tmp_26_reg_1846, ap_CS_fsm_state20, ap_CS_fsm_state23, grp_HLS_free_1_s_fu_687_ap_done, tmp_32_reg_1932, tmp_14_reg_1950, ap_CS_fsm_state26, tmp_15_reg_1964, ap_CS_fsm_state28, ap_CS_fsm_state29, or_cond_fu_1607_p2, ap_CS_fsm_state30, tmp_20_fu_1613_p2, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((grp_HLS_malloc_2_s_fu_649_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_15_reg_1964 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)) or ((tmp_14_reg_1950 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)) or ((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)))) or ((grp_HLS_free_1_s_fu_687_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_26_reg_1846 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_26_reg_1846 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (((tmp_21_reg_1712 = ap_const_lv1_0) and (tmp_13_fu_1108_p2 = ap_const_lv1_1)) or ((tmp_21_reg_1712 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_13_fu_1108_p2 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_0) and (tmp_33_reg_1784 = ap_const_lv1_1)))) then 
            HTA_heap_1_ce0 <= ap_const_logic_1;
        else 
            HTA_heap_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    HTA_heap_1_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_HLS_malloc_3_s_fu_661_ap_done, tmp_21_reg_1712, tmp_24_reg_1727, tmp_23_reg_1736, ap_CS_fsm_state14, ap_CS_fsm_state18, tmp_28_reg_1878, tmp_11_reg_1882, ap_CS_fsm_state22, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state28, tmp_35_reg_1991, ap_CS_fsm_state29, tmp_36_reg_2024, or_cond_reg_2047, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state31, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_0) and (tmp_36_reg_2024 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_1) and (tmp_35_reg_1991 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_23_reg_1736 = ap_const_lv1_0) and (tmp_21_reg_1712 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_28_reg_1878 = ap_const_lv1_0) and (tmp_11_reg_1882 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_0) and (tmp_28_reg_1878 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_0) and (tmp_24_reg_1727 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_HLS_malloc_3_s_fu_661_ap_done = ap_const_logic_1)))) then 
            HTA_heap_1_ce1 <= ap_const_logic_1;
        else 
            HTA_heap_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    HTA_heap_1_d0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state9, offset_new_node_cast_fu_927_p1, tmp_12_reg_1780, tmp_33_reg_1784, ap_CS_fsm_state15, tmp_13_fu_1108_p2, tmp_32_reg_1932, tmp_14_reg_1950, tmp_15_reg_1964, or_cond_fu_1607_p2, ap_CS_fsm_state30, offset_last_parent1_reg_543, tmp_20_fu_1613_p2, ap_CS_fsm_state8, now_load_phi_fu_1099_p3, swap_tmp3_fu_1586_p3, swap_tmp2_fu_1552_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_15_reg_1964 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)) or ((tmp_14_reg_1950 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1))))) then 
            HTA_heap_1_d0 <= swap_tmp2_fu_1552_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and (((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)) or ((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1))))) then 
            HTA_heap_1_d0 <= swap_tmp3_fu_1586_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_13_fu_1108_p2 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_0) and (tmp_33_reg_1784 = ap_const_lv1_1))) then 
            HTA_heap_1_d0 <= now_load_phi_fu_1099_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            HTA_heap_1_d0 <= offset_new_node_cast_fu_927_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            HTA_heap_1_d0 <= offset_last_parent1_reg_543;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            HTA_heap_1_d0 <= ap_const_lv32_FFFFFFFF;
        else 
            HTA_heap_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    HTA_heap_1_d1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, offset_new_node_cast_reg_1701, tmp_21_reg_1712, tmp_24_reg_1727, tmp_23_reg_1736, swap_tmp_reg_1799, tmp_28_reg_1878, tmp_11_reg_1882, ap_CS_fsm_state22, tmp_35_reg_1991, tmp_36_reg_2024, swap_tmp1_reg_2039, or_cond_reg_2047, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state31, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_0) and (tmp_36_reg_2024 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_1) and (tmp_35_reg_1991 = ap_const_lv1_1)))) then 
            HTA_heap_1_d1 <= swap_tmp1_reg_2039;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            HTA_heap_1_d1 <= swap_tmp_reg_1799;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_23_reg_1736 = ap_const_lv1_0) and (tmp_21_reg_1712 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_0) and (tmp_24_reg_1727 = ap_const_lv1_1)))) then 
            HTA_heap_1_d1 <= offset_new_node_cast_reg_1701;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_28_reg_1878 = ap_const_lv1_0) and (tmp_11_reg_1882 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_0) and (tmp_28_reg_1878 = ap_const_lv1_1)))) then 
            HTA_heap_1_d1 <= ap_const_lv32_FFFFFFFF;
        else 
            HTA_heap_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    HTA_heap_1_we0_assign_proc : process(ap_CS_fsm_state4, grp_HLS_malloc_2_s_fu_649_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state9, tmp_12_reg_1780, tmp_33_reg_1784, ap_CS_fsm_state15, tmp_13_fu_1108_p2, tmp_32_reg_1932, tmp_14_reg_1950, tmp_15_reg_1964, or_cond_fu_1607_p2, ap_CS_fsm_state30, tmp_20_fu_1613_p2, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((grp_HLS_malloc_2_s_fu_649_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((tmp_15_reg_1964 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)) or ((tmp_14_reg_1950 = ap_const_lv1_0) and (or_cond_fu_1607_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_15_reg_1964 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)) or ((or_cond_fu_1607_p2 = ap_const_lv1_0) and (tmp_14_reg_1950 = ap_const_lv1_0) and (tmp_20_fu_1613_p2 = ap_const_lv1_1) and (tmp_32_reg_1932 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_13_fu_1108_p2 = ap_const_lv1_0) and (tmp_12_reg_1780 = ap_const_lv1_0) and (tmp_33_reg_1784 = ap_const_lv1_1)))) then 
            HTA_heap_1_we0 <= ap_const_logic_1;
        else 
            HTA_heap_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    HTA_heap_1_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, grp_HLS_malloc_3_s_fu_661_ap_done, tmp_21_reg_1712, tmp_24_reg_1727, tmp_23_reg_1736, tmp_30_reg_1745, tmp_28_reg_1878, tmp_11_reg_1882, ap_CS_fsm_state22, tmp_35_reg_1991, tmp_36_reg_2024, or_cond_reg_2047, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state31, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_0) and (tmp_36_reg_2024 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (or_cond_reg_2047 = ap_const_lv1_1) and (tmp_35_reg_1991 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_30_reg_1745 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_23_reg_1736 = ap_const_lv1_0) and (tmp_21_reg_1712 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_28_reg_1878 = ap_const_lv1_0) and (tmp_11_reg_1882 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_11_reg_1882 = ap_const_lv1_0) and (tmp_28_reg_1878 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_21_reg_1712 = ap_const_lv1_0) and (tmp_24_reg_1727 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_HLS_malloc_3_s_fu_661_ap_done = ap_const_logic_1)))) then 
            HTA_heap_1_we1 <= ap_const_logic_1;
        else 
            HTA_heap_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    HTA_heap_load_5_phi_fu_1418_p3 <= 
        HTA_heap_1_q0 when (tmp_32_reg_1932(0) = '1') else 
        HTA_heap_0_q0;
    HTA_heap_load_phi_fu_1277_p3 <= 
        HTA_heap_1_q0 when (tmp_26_reg_1846(0) = '1') else 
        HTA_heap_0_q0;

    alloc_HTA_addr_ap_ack_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack, grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack, grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_HTA_addr_ap_ack <= grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            alloc_HTA_addr_ap_ack <= grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            alloc_HTA_addr_ap_ack <= grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack;
        else 
            alloc_HTA_addr_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    alloc_HTA_cmd_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state23, grp_HLS_malloc_2_s_fu_649_allocator_cmd, grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld, grp_HLS_malloc_3_s_fu_661_allocator_cmd, grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld, grp_HLS_malloc_1_s_fu_673_allocator_cmd, grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld, grp_HLS_free_1_s_fu_687_allocator_cmd, grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if (((grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            alloc_HTA_cmd <= grp_HLS_free_1_s_fu_687_allocator_cmd;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld = ap_const_logic_1))) then 
            alloc_HTA_cmd <= grp_HLS_malloc_1_s_fu_673_allocator_cmd;
        elsif (((grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            alloc_HTA_cmd <= grp_HLS_malloc_3_s_fu_661_allocator_cmd;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld = ap_const_logic_1))) then 
            alloc_HTA_cmd <= grp_HLS_malloc_2_s_fu_649_allocator_cmd;
        else 
            alloc_HTA_cmd <= "XXXXXXXX";
        end if; 
    end process;


    alloc_HTA_cmd_ap_vld_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state23, grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld, grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld, grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld, grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            alloc_HTA_cmd_ap_vld <= grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_HTA_cmd_ap_vld <= grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            alloc_HTA_cmd_ap_vld <= grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            alloc_HTA_cmd_ap_vld <= grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld;
        else 
            alloc_HTA_cmd_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    alloc_HTA_free_target_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state23, grp_HLS_malloc_2_s_fu_649_allocator_free_targe, grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld, grp_HLS_malloc_3_s_fu_661_allocator_free_targe, grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld, grp_HLS_malloc_1_s_fu_673_allocator_free_targe, grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld, grp_HLS_free_1_s_fu_687_allocator_free_targe, grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld, ap_CS_fsm_state2)
    begin
        if (((grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            alloc_HTA_free_target <= grp_HLS_free_1_s_fu_687_allocator_free_targe;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld = ap_const_logic_1))) then 
            alloc_HTA_free_target <= grp_HLS_malloc_1_s_fu_673_allocator_free_targe;
        elsif (((grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            alloc_HTA_free_target <= grp_HLS_malloc_3_s_fu_661_allocator_free_targe;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld = ap_const_logic_1))) then 
            alloc_HTA_free_target <= grp_HLS_malloc_2_s_fu_649_allocator_free_targe;
        else 
            alloc_HTA_free_target <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    alloc_HTA_free_target_ap_vld_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state23, grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld, grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld, grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld, grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            alloc_HTA_free_target_ap_vld <= grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_HTA_free_target_ap_vld <= grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            alloc_HTA_free_target_ap_vld <= grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            alloc_HTA_free_target_ap_vld <= grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld;
        else 
            alloc_HTA_free_target_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    alloc_HTA_size_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state23, grp_HLS_malloc_2_s_fu_649_allocator_size, grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld, grp_HLS_malloc_3_s_fu_661_allocator_size, grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld, grp_HLS_malloc_1_s_fu_673_allocator_size, grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld, grp_HLS_free_1_s_fu_687_allocator_size, grp_HLS_free_1_s_fu_687_allocator_size_ap_vld, ap_CS_fsm_state2)
    begin
        if (((grp_HLS_free_1_s_fu_687_allocator_size_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            alloc_HTA_size <= grp_HLS_free_1_s_fu_687_allocator_size;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld = ap_const_logic_1))) then 
            alloc_HTA_size <= grp_HLS_malloc_1_s_fu_673_allocator_size;
        elsif (((grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            alloc_HTA_size <= grp_HLS_malloc_3_s_fu_661_allocator_size;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld = ap_const_logic_1))) then 
            alloc_HTA_size <= grp_HLS_malloc_2_s_fu_649_allocator_size;
        else 
            alloc_HTA_size <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    alloc_HTA_size_ap_vld_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state23, grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld, grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld, grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld, grp_HLS_free_1_s_fu_687_allocator_size_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            alloc_HTA_size_ap_vld <= grp_HLS_free_1_s_fu_687_allocator_size_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            alloc_HTA_size_ap_vld <= grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            alloc_HTA_size_ap_vld <= grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            alloc_HTA_size_ap_vld <= grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld;
        else 
            alloc_HTA_size_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state18, tmp_5_fu_1169_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_5_fu_1169_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4_assign_proc : process(HTA_heap_0_q1, tmp_32_reg_1932, ap_CS_fsm_state26, HTA_heap_1_q1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
            if ((tmp_32_reg_1932 = ap_const_lv1_1)) then 
                ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 <= HTA_heap_0_q1;
            elsif ((tmp_32_reg_1932 = ap_const_lv1_0)) then 
                ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 <= HTA_heap_1_q1;
            else 
                ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_pn2_be_phi_fu_642_p4_assign_proc : process(offset_left_reg_1985, offset_right_reg_2018, or_cond_reg_2047, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
            if ((or_cond_reg_2047 = ap_const_lv1_0)) then 
                ap_phi_mux_p_pn2_be_phi_fu_642_p4 <= offset_right_reg_2018;
            elsif ((or_cond_reg_2047 = ap_const_lv1_1)) then 
                ap_phi_mux_p_pn2_be_phi_fu_642_p4 <= offset_left_reg_1985;
            else 
                ap_phi_mux_p_pn2_be_phi_fu_642_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_p_pn2_be_phi_fu_642_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18, tmp_5_fu_1169_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_5_fu_1169_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cnt_insert_cast_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cnt_insert_reg_563),32));

    data_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, tmp_7_fu_816_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            data_address0 <= tmp_7_fu_816_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_address0 <= ap_const_lv64_0(15 - 1 downto 0);
        else 
            data_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            data_ce0 <= ap_const_logic_1;
        else 
            data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dis_output_address0 <= tmp_6_fu_1200_p1(8 - 1 downto 0);

    dis_output_ce0_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dis_output_ce0 <= ap_const_logic_1;
        else 
            dis_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dis_output_d0 <= HTA_heap_0_q1;

    dis_output_we0_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dis_output_we0 <= ap_const_logic_1;
        else 
            dis_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_HLS_free_1_s_fu_687_ap_start <= grp_HLS_free_1_s_fu_687_ap_start_reg;
    grp_HLS_malloc_1_s_fu_673_ap_start <= grp_HLS_malloc_1_s_fu_673_ap_start_reg;
    grp_HLS_malloc_2_s_fu_649_ap_start <= grp_HLS_malloc_2_s_fu_649_ap_start_reg;
    grp_HLS_malloc_3_s_fu_661_ap_start <= grp_HLS_malloc_3_s_fu_661_ap_start_reg;
    grp_fu_699_p2 <= (newIndex10_cast1_reg_1707 or ap_const_lv11_3);
    i_1_cast_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_605),32));
    i_2_fu_1174_p2 <= std_logic_vector(unsigned(i_1_reg_605) + unsigned(ap_const_lv31_1));
    i_fu_1135_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(cnt_insert_reg_563));
    newIndex10_cast1_fu_933_p3 <= (tmp_10_reg_1691 & ap_const_lv2_0);
    newIndex10_cast2_fu_889_p3 <= (tmp_9_reg_1686 & ap_const_lv2_0);
    newIndex10_cast_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex10_fu_864_p4),64));
    newIndex10_fu_864_p4 <= ((ap_const_lv1_0 & tmp_9_fu_854_p4) & ap_const_lv2_0);
    newIndex11_cast_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex11_fu_896_p2),64));
    newIndex11_fu_896_p2 <= (newIndex10_cast2_fu_889_p3 or ap_const_lv12_2);
    newIndex12_cast_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex12_reg_1980),64));
    newIndex13_cast_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex13_fu_908_p2),64));
    newIndex13_fu_908_p2 <= (newIndex10_cast2_fu_889_p3 or ap_const_lv12_1);
    newIndex14_cast_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex14_reg_1676),64));
    newIndex15_cast_fu_978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex15_fu_968_p4),64));
    newIndex15_fu_968_p4 <= p_sum1_fu_958_p2(12 downto 1);
    newIndex16_cast_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex16_fu_994_p4),64));
    newIndex16_fu_994_p4 <= p_sum2_fu_984_p2(12 downto 1);
    newIndex17_fu_1180_p4 <= offset_now_reg_595(31 downto 1);
    newIndex18_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex17_fu_1180_p4),64));
    newIndex19_cast_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_699_p2),64));
    newIndex1_fu_714_p3 <= (tmp_1_fu_704_p4 & ap_const_lv2_0);
    newIndex20_fu_1473_p4 <= offset_left_fu_1462_p3(31 downto 1);
    newIndex21_cast_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_699_p2),64));
    newIndex22_cast_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex22_fu_1224_p4),64));
    newIndex22_fu_1224_p4 <= p_sum_fu_1218_p2(12 downto 1);
    newIndex23_cast_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex23_fu_1028_p4),64));
    newIndex23_fu_1028_p4 <= p_pn1_reg_575(12 downto 1);
    newIndex24_cast_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex24_fu_1050_p4),64));
    newIndex24_fu_1050_p4 <= now_0_sum_fu_1044_p2(12 downto 1);
    newIndex25_cast_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex25_fu_1246_p4),64));
    newIndex25_fu_1246_p4 <= p_sum7_fu_1240_p2(12 downto 1);
    newIndex26_fu_1076_p4 <= offset_parent_reg_584(31 downto 1);
    newIndex27_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex26_fu_1076_p4),64));
    newIndex28_fu_1318_p4 <= p_sum3_fu_1312_p2(12 downto 1);
    newIndex29_cast_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex28_fu_1318_p4),64));
    newIndex29_fu_1296_p4 <= p_sum8_fu_1290_p2(12 downto 1);
    newIndex2_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex1_fu_714_p3),64));
    newIndex30_cast_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex29_fu_1296_p4),64));
    newIndex31_cast_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex30_reg_1906),64));
    newIndex31_fu_1375_p4 <= now_1_sum1_fu_1365_p2(12 downto 1);
    newIndex32_cast_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex32_fu_1119_p4),64));
    newIndex32_fu_1119_p4 <= p_sum4_fu_1114_p2(12 downto 1);
    newIndex33_cast_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex31_fu_1375_p4),64));
    newIndex33_fu_1402_p4 <= now_1_sum_fu_1397_p2(12 downto 1);
    newIndex34_cast_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex33_fu_1402_p4),64));
    newIndex34_fu_1431_p4 <= p_pn2_reg_617(31 downto 1);
    newIndex35_fu_1441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex34_fu_1431_p4),64));
    newIndex36_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex20_fu_1473_p4),64));
    newIndex3_cast1_fu_747_p3 <= (tmp_2_fu_727_p4 & ap_const_lv2_0);
    newIndex3_cast_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex3_fu_737_p4),64));
    newIndex3_fu_737_p4 <= ((ap_const_lv1_0 & tmp_2_fu_727_p4) & ap_const_lv2_0);
    newIndex4_cast_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex4_fu_760_p2),64));
    newIndex4_fu_760_p2 <= (newIndex3_cast1_fu_747_p3 or ap_const_lv12_1);
    newIndex5_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex_fu_1505_p4),64));
    newIndex6_cast_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex6_fu_782_p2),64));
    newIndex6_fu_782_p2 <= (newIndex3_cast1_reg_1640 or ap_const_lv12_2);
    newIndex7_cast_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex7_fu_793_p2),64));
    newIndex7_fu_793_p2 <= (newIndex3_cast1_reg_1640 or ap_const_lv12_3);
    newIndex8_fu_841_p3 <= (tmp_8_fu_831_p4 & ap_const_lv2_0);
    newIndex9_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex8_fu_841_p3),64));
    newIndex_fu_1505_p4 <= offset_right_fu_1494_p3(31 downto 1);
    now_0_sum_fu_1044_p2 <= std_logic_vector(unsigned(ap_const_lv13_5) + unsigned(tmp_29_fu_1020_p1));
    now_1_sum1_fu_1365_p2 <= std_logic_vector(unsigned(ap_const_lv13_3) + unsigned(tmp_31_fu_1361_p1));
    now_1_sum_fu_1397_p2 <= std_logic_vector(unsigned(tmp_31_reg_1926) + unsigned(ap_const_lv13_4));
    now_load_phi_fu_1099_p3 <= 
        HTA_heap_1_q1 when (tmp_30_reg_1745(0) = '1') else 
        HTA_heap_0_q1;
    offset_head_cast_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_head_fu_771_p3),32));
    offset_head_fu_771_p3 <= (tmp_1_reg_1630 & ap_const_lv3_0);
    offset_last_parent_1_fu_1157_p3 <= 
        HTA_heap_0_q0 when (sel_tmp2_fu_1152_p2(0) = '1') else 
        sel_tmp1_fu_1145_p3;
    offset_left_fu_1462_p3 <= 
        HTA_heap_0_q1 when (tmp_32_reg_1932(0) = '1') else 
        HTA_heap_1_q1;
    offset_new_node_cast_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_new_node_fu_920_p3),32));
    offset_new_node_fu_920_p3 <= (tmp_8_reg_1681 & ap_const_lv3_0);
    offset_right_fu_1494_p3 <= 
        HTA_heap_1_q0 when (tmp_32_reg_1932(0) = '1') else 
        HTA_heap_0_q0;
    offset_tail_3_fu_1354_p3 <= 
        HTA_heap_1_q0 when (tmp_26_reg_1846(0) = '1') else 
        HTA_heap_0_q0;
    offset_tail_cast_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_tail_reg_554),32));
    or_cond_fu_1607_p2 <= (tmp_19_fu_1601_p2 and tmp_18_fu_1596_p2);
    p_sum1_fu_958_p2 <= std_logic_vector(unsigned(ap_const_lv13_4) + unsigned(tmp_22_fu_954_p1));
    p_sum2_fu_984_p2 <= std_logic_vector(unsigned(ap_const_lv13_3) + unsigned(tmp_22_fu_954_p1));
    p_sum3_fu_1312_p2 <= std_logic_vector(unsigned(tmp_27_fu_1269_p1) + unsigned(ap_const_lv13_3));
    p_sum4_fu_1114_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(tmp_22_reg_1722));
    p_sum6_fu_1447_p2 <= std_logic_vector(unsigned(ap_const_lv13_4) + unsigned(tmp_31_reg_1926));
    p_sum7_fu_1240_p2 <= std_logic_vector(unsigned(ap_const_lv13_6) + unsigned(tmp_25_fu_1214_p1));
    p_sum8_fu_1290_p2 <= std_logic_vector(unsigned(tmp_27_fu_1269_p1) + unsigned(ap_const_lv13_4));
    p_sum9_fu_1334_p2 <= std_logic_vector(unsigned(tmp_25_reg_1853) + unsigned(ap_const_lv13_2));
    p_sum_fu_1218_p2 <= std_logic_vector(unsigned(ap_const_lv13_5) + unsigned(tmp_25_fu_1214_p1));
    p_v_fu_1262_p3 <= 
        HTA_heap_0_q0 when (tmp_26_reg_1846(0) = '1') else 
        HTA_heap_1_q0;
    sel_tmp1_fu_1145_p3 <= 
        offset_last_parent1_reg_543 when (tmp_21_reg_1712(0) = '1') else 
        HTA_heap_1_q0;
    sel_tmp2_fu_1152_p2 <= (tmp_s_reg_1717 and tmp_34_fu_1141_p1);
    sel_tmp3_fu_1547_p2 <= (tmp_35_reg_1991 and sel_tmp_fu_1541_p2);
    sel_tmp4_fu_1567_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_17_fu_1562_p2(0) = '1') else 
        HTA_heap_0_q1;
    sel_tmp5_fu_1575_p2 <= (tmp_17_fu_1562_p2 xor ap_const_lv1_1);
    sel_tmp6_fu_1581_p2 <= (tmp_36_reg_2024 and sel_tmp5_fu_1575_p2);
    sel_tmp9_fu_1533_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_16_fu_1528_p2(0) = '1') else 
        HTA_heap_0_q0;
    sel_tmp_fu_1541_p2 <= (tmp_16_fu_1528_p2 xor ap_const_lv1_1);
    swap_tmp1_fu_1521_p3 <= 
        HTA_heap_1_q1 when (tmp_32_reg_1932(0) = '1') else 
        HTA_heap_0_q1;
    swap_tmp2_fu_1552_p3 <= 
        HTA_heap_1_q0 when (sel_tmp3_fu_1547_p2(0) = '1') else 
        sel_tmp9_fu_1533_p3;
    swap_tmp3_fu_1586_p3 <= 
        HTA_heap_1_q1 when (sel_tmp6_fu_1581_p2(0) = '1') else 
        sel_tmp4_fu_1567_p3;
    swap_tmp_fu_1092_p3 <= 
        HTA_heap_1_q0 when (tmp_33_reg_1784(0) = '1') else 
        HTA_heap_0_q0;
    tail_load_phi_fu_1205_p3 <= 
        HTA_heap_1_q1 when (tmp_26_fu_1196_p1(0) = '1') else 
        HTA_heap_0_q0;
    tmp_11_fu_1284_p2 <= "1" when (HTA_heap_load_phi_fu_1277_p3 = ap_const_lv32_1) else "0";
    tmp_12_fu_1066_p2 <= "1" when (offset_parent_reg_584 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_13_fu_1108_p2 <= "1" when (signed(swap_tmp_fu_1092_p3) > signed(now_load_phi_fu_1099_p3)) else "0";
    tmp_14_fu_1391_p2 <= "1" when (ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_15_fu_1425_p2 <= "1" when (HTA_heap_load_5_phi_fu_1418_p3 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_16_fu_1528_p2 <= "1" when (offset_left_reg_1985 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_17_fu_1562_p2 <= "1" when (offset_right_reg_2018 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_18_fu_1596_p2 <= "1" when (signed(swap_tmp2_fu_1552_p3) > signed(swap_tmp1_reg_2039)) else "0";
    tmp_19_fu_1601_p2 <= "1" when (signed(swap_tmp2_fu_1552_p3) > signed(swap_tmp3_fu_1586_p3)) else "0";
    tmp_1_fu_704_p4 <= grp_HLS_malloc_2_s_fu_649_ap_return(15 downto 3);
    tmp_20_fu_1613_p2 <= "1" when (signed(swap_tmp3_fu_1586_p3) > signed(swap_tmp1_reg_2039)) else "0";
    tmp_21_fu_944_p1 <= cnt_insert_reg_563(1 - 1 downto 0);
    tmp_22_fu_954_p1 <= offset_last_parent1_reg_543(13 - 1 downto 0);
    tmp_23_fu_990_p1 <= offset_last_parent1_reg_543(1 - 1 downto 0);
    tmp_24_fu_964_p1 <= offset_last_parent1_reg_543(1 - 1 downto 0);
    tmp_25_fu_1214_p1 <= offset_now_reg_595(13 - 1 downto 0);
    tmp_26_fu_1196_p1 <= offset_now_reg_595(1 - 1 downto 0);
    tmp_27_fu_1269_p1 <= p_v_fu_1262_p3(13 - 1 downto 0);
    tmp_28_fu_1273_p1 <= p_v_fu_1262_p3(1 - 1 downto 0);
    tmp_29_fu_1020_p1 <= p_pn1_reg_575(13 - 1 downto 0);
    tmp_2_fu_727_p4 <= grp_HLS_malloc_2_s_fu_649_ap_return(12 downto 3);
    tmp_30_fu_1024_p1 <= p_pn1_reg_575(1 - 1 downto 0);
    tmp_31_fu_1361_p1 <= p_pn2_reg_617(13 - 1 downto 0);
    tmp_32_fu_1371_p1 <= p_pn2_reg_617(1 - 1 downto 0);
    tmp_33_fu_1072_p1 <= offset_parent_reg_584(1 - 1 downto 0);
    tmp_34_fu_1141_p1 <= offset_last_parent1_reg_543(1 - 1 downto 0);
    tmp_35_fu_1469_p1 <= offset_left_fu_1462_p3(1 - 1 downto 0);
    tmp_36_fu_1501_p1 <= offset_right_fu_1494_p3(1 - 1 downto 0);
    tmp_3_fu_811_p2 <= "1" when (signed(cnt_insert_cast_fu_807_p1) < signed(n)) else "0";
    tmp_5_fu_1169_p2 <= "1" when (signed(i_1_cast_fu_1165_p1) < signed(n)) else "0";
    tmp_6_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_605),64));
    tmp_7_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cnt_insert_reg_563),64));
    tmp_8_fu_831_p4 <= grp_HLS_malloc_3_s_fu_661_ap_return(15 downto 3);
    tmp_9_fu_854_p4 <= grp_HLS_malloc_3_s_fu_661_ap_return(12 downto 3);
    tmp_s_fu_948_p2 <= (tmp_21_fu_944_p1 xor ap_const_lv1_1);
end behav;
