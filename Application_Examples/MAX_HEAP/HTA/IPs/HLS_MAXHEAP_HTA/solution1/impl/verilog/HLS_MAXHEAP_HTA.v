// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="HLS_MAXHEAP_HTA,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.683000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=1001,HLS_SYN_LUT=2315,HLS_VERSION=2018_2}" *)

module HLS_MAXHEAP_HTA (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n,
        data_address0,
        data_ce0,
        data_q0,
        dis_output_address0,
        dis_output_ce0,
        dis_output_we0,
        dis_output_d0,
        alloc_HTA_size,
        alloc_HTA_size_ap_vld,
        alloc_HTA_size_ap_ack,
        alloc_HTA_free_target,
        alloc_HTA_free_target_ap_vld,
        alloc_HTA_free_target_ap_ack,
        alloc_HTA_addr,
        alloc_HTA_addr_ap_vld,
        alloc_HTA_addr_ap_ack,
        alloc_HTA_cmd,
        alloc_HTA_cmd_ap_vld,
        alloc_HTA_cmd_ap_ack
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_state3 = 31'd4;
parameter    ap_ST_fsm_state4 = 31'd8;
parameter    ap_ST_fsm_state5 = 31'd16;
parameter    ap_ST_fsm_state6 = 31'd32;
parameter    ap_ST_fsm_state7 = 31'd64;
parameter    ap_ST_fsm_state8 = 31'd128;
parameter    ap_ST_fsm_state9 = 31'd256;
parameter    ap_ST_fsm_state10 = 31'd512;
parameter    ap_ST_fsm_state11 = 31'd1024;
parameter    ap_ST_fsm_state12 = 31'd2048;
parameter    ap_ST_fsm_state13 = 31'd4096;
parameter    ap_ST_fsm_state14 = 31'd8192;
parameter    ap_ST_fsm_state15 = 31'd16384;
parameter    ap_ST_fsm_state16 = 31'd32768;
parameter    ap_ST_fsm_state17 = 31'd65536;
parameter    ap_ST_fsm_state18 = 31'd131072;
parameter    ap_ST_fsm_state19 = 31'd262144;
parameter    ap_ST_fsm_state20 = 31'd524288;
parameter    ap_ST_fsm_state21 = 31'd1048576;
parameter    ap_ST_fsm_state22 = 31'd2097152;
parameter    ap_ST_fsm_state23 = 31'd4194304;
parameter    ap_ST_fsm_state24 = 31'd8388608;
parameter    ap_ST_fsm_state25 = 31'd16777216;
parameter    ap_ST_fsm_state26 = 31'd33554432;
parameter    ap_ST_fsm_state27 = 31'd67108864;
parameter    ap_ST_fsm_state28 = 31'd134217728;
parameter    ap_ST_fsm_state29 = 31'd268435456;
parameter    ap_ST_fsm_state30 = 31'd536870912;
parameter    ap_ST_fsm_state31 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] n;
output  [14:0] data_address0;
output   data_ce0;
input  [31:0] data_q0;
output  [7:0] dis_output_address0;
output   dis_output_ce0;
output   dis_output_we0;
output  [31:0] dis_output_d0;
output  [31:0] alloc_HTA_size;
output   alloc_HTA_size_ap_vld;
input   alloc_HTA_size_ap_ack;
output  [31:0] alloc_HTA_free_target;
output   alloc_HTA_free_target_ap_vld;
input   alloc_HTA_free_target_ap_ack;
input  [31:0] alloc_HTA_addr;
input   alloc_HTA_addr_ap_vld;
output   alloc_HTA_addr_ap_ack;
output  [7:0] alloc_HTA_cmd;
output   alloc_HTA_cmd_ap_vld;
input   alloc_HTA_cmd_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] data_address0;
reg data_ce0;
reg dis_output_ce0;
reg dis_output_we0;
reg[31:0] alloc_HTA_size;
reg alloc_HTA_size_ap_vld;
reg[31:0] alloc_HTA_free_target;
reg alloc_HTA_free_target_ap_vld;
reg alloc_HTA_addr_ap_ack;
reg[7:0] alloc_HTA_cmd;
reg alloc_HTA_cmd_ap_vld;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
wire   [12:0] tmp_1_fu_704_p4;
reg   [12:0] tmp_1_reg_1630;
wire    ap_CS_fsm_state4;
wire    grp_HLS_malloc_2_s_fu_649_ap_idle;
wire    grp_HLS_malloc_2_s_fu_649_ap_ready;
wire    grp_HLS_malloc_2_s_fu_649_ap_done;
reg   [10:0] HTA_heap_0_addr_reg_1635;
wire   [11:0] newIndex3_cast1_fu_747_p3;
reg   [11:0] newIndex3_cast1_reg_1640;
wire   [63:0] newIndex4_cast_fu_766_p1;
reg   [63:0] newIndex4_cast_reg_1646;
wire   [15:0] offset_head_fu_771_p3;
wire    ap_CS_fsm_state5;
wire   [31:0] offset_head_cast_fu_778_p1;
reg   [31:0] offset_head_cast_reg_1656;
wire   [31:0] offset_tail_cast_fu_803_p1;
reg   [31:0] offset_tail_cast_reg_1662;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_3_fu_811_p2;
reg   [11:0] newIndex14_reg_1676;
wire   [12:0] tmp_8_fu_831_p4;
reg   [12:0] tmp_8_reg_1681;
wire    ap_CS_fsm_state7;
wire    grp_HLS_malloc_3_s_fu_661_ap_idle;
wire    grp_HLS_malloc_3_s_fu_661_ap_ready;
wire    grp_HLS_malloc_3_s_fu_661_ap_done;
wire   [9:0] tmp_9_fu_854_p4;
reg   [9:0] tmp_9_reg_1686;
reg   [8:0] tmp_10_reg_1691;
wire   [15:0] offset_new_node_fu_920_p3;
reg   [15:0] offset_new_node_reg_1696;
wire    ap_CS_fsm_state9;
wire   [31:0] offset_new_node_cast_fu_927_p1;
reg   [31:0] offset_new_node_cast_reg_1701;
wire   [10:0] newIndex10_cast1_fu_933_p3;
reg   [10:0] newIndex10_cast1_reg_1707;
wire   [0:0] tmp_21_fu_944_p1;
reg   [0:0] tmp_21_reg_1712;
wire   [0:0] tmp_s_fu_948_p2;
reg   [0:0] tmp_s_reg_1717;
wire   [12:0] tmp_22_fu_954_p1;
reg   [12:0] tmp_22_reg_1722;
wire   [0:0] tmp_24_fu_964_p1;
reg   [0:0] tmp_24_reg_1727;
reg   [10:0] HTA_heap_1_addr_7_reg_1731;
wire   [0:0] tmp_23_fu_990_p1;
reg   [0:0] tmp_23_reg_1736;
reg   [10:0] HTA_heap_1_addr_8_reg_1740;
wire   [0:0] tmp_30_fu_1024_p1;
reg   [0:0] tmp_30_reg_1745;
wire    ap_CS_fsm_state11;
reg   [10:0] HTA_heap_0_addr_13_reg_1750;
reg   [10:0] HTA_heap_1_addr_11_reg_1755;
wire   [31:0] HTA_heap_1_q0;
wire    ap_CS_fsm_state12;
wire   [31:0] HTA_heap_0_q1;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_12_fu_1066_p2;
reg   [0:0] tmp_12_reg_1780;
wire    ap_CS_fsm_state14;
wire   [0:0] tmp_33_fu_1072_p1;
reg   [0:0] tmp_33_reg_1784;
reg   [10:0] HTA_heap_0_addr_16_reg_1789;
reg   [10:0] HTA_heap_1_addr_14_reg_1794;
wire   [31:0] swap_tmp_fu_1092_p3;
reg   [31:0] swap_tmp_reg_1799;
wire    ap_CS_fsm_state15;
wire   [0:0] tmp_13_fu_1108_p2;
wire   [30:0] i_fu_1135_p2;
reg   [30:0] i_reg_1818;
wire   [31:0] offset_last_parent_1_fu_1157_p3;
wire    ap_CS_fsm_state17;
wire   [30:0] i_2_fu_1174_p2;
reg   [30:0] i_2_reg_1831;
wire    ap_CS_fsm_state18;
wire   [0:0] tmp_5_fu_1169_p2;
wire   [0:0] tmp_26_fu_1196_p1;
reg   [0:0] tmp_26_reg_1846;
wire    ap_CS_fsm_state19;
wire   [12:0] tmp_25_fu_1214_p1;
reg   [12:0] tmp_25_reg_1853;
wire    ap_CS_fsm_state20;
wire   [0:0] tmp_28_fu_1273_p1;
reg   [0:0] tmp_28_reg_1878;
wire    ap_CS_fsm_state21;
wire   [0:0] tmp_11_fu_1284_p2;
reg   [0:0] tmp_11_reg_1882;
reg   [10:0] HTA_heap_0_addr_18_reg_1886;
reg   [10:0] HTA_heap_1_addr_16_reg_1891;
reg   [10:0] HTA_heap_1_addr_15_reg_1896;
reg   [10:0] HTA_heap_0_addr_17_reg_1901;
reg   [11:0] newIndex30_reg_1906;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    grp_HLS_free_1_s_fu_687_ap_idle;
wire    grp_HLS_free_1_s_fu_687_ap_ready;
wire    grp_HLS_free_1_s_fu_687_ap_done;
wire   [31:0] offset_tail_3_fu_1354_p3;
reg   [31:0] offset_tail_3_reg_1921;
wire    ap_CS_fsm_state24;
wire   [12:0] tmp_31_fu_1361_p1;
reg   [12:0] tmp_31_reg_1926;
wire    ap_CS_fsm_state25;
wire   [0:0] tmp_32_fu_1371_p1;
reg   [0:0] tmp_32_reg_1932;
reg   [10:0] HTA_heap_1_addr_19_reg_1940;
reg   [10:0] HTA_heap_0_addr_21_reg_1945;
wire   [0:0] tmp_14_fu_1391_p2;
reg   [0:0] tmp_14_reg_1950;
wire    ap_CS_fsm_state26;
wire   [0:0] tmp_15_fu_1425_p2;
reg   [0:0] tmp_15_reg_1964;
wire    ap_CS_fsm_state27;
reg   [10:0] HTA_heap_0_addr_23_reg_1968;
reg   [10:0] HTA_heap_1_addr_21_reg_1974;
reg   [11:0] newIndex12_reg_1980;
wire   [31:0] offset_left_fu_1462_p3;
reg   [31:0] offset_left_reg_1985;
wire    ap_CS_fsm_state28;
wire   [0:0] tmp_35_fu_1469_p1;
reg   [0:0] tmp_35_reg_1991;
reg   [10:0] HTA_heap_0_addr_24_reg_1996;
reg   [10:0] HTA_heap_1_addr_22_reg_2002;
wire   [31:0] offset_right_fu_1494_p3;
reg   [31:0] offset_right_reg_2018;
wire    ap_CS_fsm_state29;
wire   [0:0] tmp_36_fu_1501_p1;
reg   [0:0] tmp_36_reg_2024;
reg   [10:0] HTA_heap_0_addr_26_reg_2029;
reg   [10:0] HTA_heap_1_addr_24_reg_2034;
wire   [31:0] swap_tmp1_fu_1521_p3;
reg   [31:0] swap_tmp1_reg_2039;
wire   [0:0] or_cond_fu_1607_p2;
reg   [0:0] or_cond_reg_2047;
wire    ap_CS_fsm_state30;
reg   [10:0] HTA_heap_0_address0;
reg    HTA_heap_0_ce0;
reg    HTA_heap_0_we0;
reg   [31:0] HTA_heap_0_d0;
wire   [31:0] HTA_heap_0_q0;
reg   [10:0] HTA_heap_0_address1;
reg    HTA_heap_0_ce1;
reg    HTA_heap_0_we1;
reg   [31:0] HTA_heap_0_d1;
reg   [10:0] HTA_heap_1_address0;
reg    HTA_heap_1_ce0;
reg    HTA_heap_1_we0;
reg   [31:0] HTA_heap_1_d0;
reg   [10:0] HTA_heap_1_address1;
reg    HTA_heap_1_ce1;
reg    HTA_heap_1_we1;
reg   [31:0] HTA_heap_1_d1;
wire   [31:0] HTA_heap_1_q1;
wire    grp_HLS_malloc_2_s_fu_649_ap_start;
wire   [31:0] grp_HLS_malloc_2_s_fu_649_allocator_size;
wire    grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld;
wire   [31:0] grp_HLS_malloc_2_s_fu_649_allocator_free_targe;
wire    grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld;
wire    grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack;
wire   [7:0] grp_HLS_malloc_2_s_fu_649_allocator_cmd;
wire    grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld;
wire   [31:0] grp_HLS_malloc_2_s_fu_649_ap_return;
wire    grp_HLS_malloc_3_s_fu_661_ap_start;
wire   [31:0] grp_HLS_malloc_3_s_fu_661_allocator_size;
wire    grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld;
wire   [31:0] grp_HLS_malloc_3_s_fu_661_allocator_free_targe;
wire    grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld;
wire    grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack;
wire   [7:0] grp_HLS_malloc_3_s_fu_661_allocator_cmd;
wire    grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld;
wire   [31:0] grp_HLS_malloc_3_s_fu_661_ap_return;
wire    grp_HLS_malloc_1_s_fu_673_ap_start;
wire    grp_HLS_malloc_1_s_fu_673_ap_done;
wire    grp_HLS_malloc_1_s_fu_673_ap_idle;
wire    grp_HLS_malloc_1_s_fu_673_ap_ready;
wire   [31:0] grp_HLS_malloc_1_s_fu_673_allocator_size;
wire    grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld;
wire   [31:0] grp_HLS_malloc_1_s_fu_673_allocator_free_targe;
wire    grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld;
wire    grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack;
wire   [7:0] grp_HLS_malloc_1_s_fu_673_allocator_cmd;
wire    grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld;
wire    grp_HLS_free_1_s_fu_687_ap_start;
wire   [31:0] grp_HLS_free_1_s_fu_687_allocator_size;
wire    grp_HLS_free_1_s_fu_687_allocator_size_ap_vld;
wire   [31:0] grp_HLS_free_1_s_fu_687_allocator_free_targe;
wire    grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld;
wire   [7:0] grp_HLS_free_1_s_fu_687_allocator_cmd;
wire    grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld;
reg   [31:0] offset_last_parent1_reg_543;
reg   [15:0] offset_tail_reg_554;
reg   [30:0] cnt_insert_reg_563;
reg   [31:0] p_pn1_reg_575;
wire    ap_CS_fsm_state10;
reg   [31:0] offset_parent_reg_584;
wire    ap_CS_fsm_state16;
reg   [31:0] offset_now_reg_595;
wire   [0:0] tmp_20_fu_1613_p2;
reg   [30:0] i_1_reg_605;
reg   [31:0] p_pn2_reg_617;
reg   [31:0] ap_phi_mux_p_pn2_be_phi_fu_642_p4;
wire    ap_CS_fsm_state31;
reg   [31:0] ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4;
reg    grp_HLS_malloc_2_s_fu_649_ap_start_reg;
reg    grp_HLS_malloc_3_s_fu_661_ap_start_reg;
reg    grp_HLS_malloc_1_s_fu_673_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_HLS_free_1_s_fu_687_ap_start_reg;
wire   [63:0] newIndex2_fu_722_p1;
wire   [63:0] newIndex3_cast_fu_755_p1;
wire   [63:0] newIndex6_cast_fu_787_p1;
wire   [63:0] newIndex7_cast_fu_798_p1;
wire   [63:0] tmp_7_fu_816_p1;
wire   [63:0] newIndex9_fu_849_p1;
wire   [63:0] newIndex10_cast_fu_884_p1;
wire   [63:0] newIndex11_cast_fu_902_p1;
wire    ap_CS_fsm_state8;
wire   [63:0] newIndex13_cast_fu_914_p1;
wire   [63:0] newIndex14_cast_fu_940_p1;
wire   [63:0] newIndex15_cast_fu_978_p1;
wire   [63:0] newIndex16_cast_fu_1004_p1;
wire   [63:0] newIndex19_cast_fu_1010_p1;
wire   [63:0] newIndex21_cast_fu_1015_p1;
wire   [63:0] newIndex23_cast_fu_1038_p1;
wire   [63:0] newIndex24_cast_fu_1060_p1;
wire   [63:0] newIndex27_fu_1086_p1;
wire   [63:0] newIndex32_cast_fu_1129_p1;
wire   [63:0] newIndex18_fu_1190_p1;
wire   [63:0] tmp_6_fu_1200_p1;
wire   [63:0] newIndex22_cast_fu_1234_p1;
wire   [63:0] newIndex25_cast_fu_1256_p1;
wire   [63:0] newIndex30_cast_fu_1306_p1;
wire   [63:0] newIndex29_cast_fu_1328_p1;
wire   [63:0] newIndex31_cast_fu_1349_p1;
wire   [63:0] newIndex33_cast_fu_1385_p1;
wire   [63:0] newIndex34_cast_fu_1412_p1;
wire   [63:0] newIndex35_fu_1441_p1;
wire   [63:0] newIndex36_fu_1483_p1;
wire   [63:0] newIndex12_cast_fu_1489_p1;
wire   [63:0] newIndex5_fu_1515_p1;
wire   [31:0] now_load_phi_fu_1099_p3;
wire   [31:0] tail_load_phi_fu_1205_p3;
wire   [31:0] swap_tmp3_fu_1586_p3;
wire   [31:0] swap_tmp2_fu_1552_p3;
wire   [14:0] newIndex1_fu_714_p3;
wire   [9:0] tmp_2_fu_727_p4;
wire   [12:0] newIndex3_fu_737_p4;
wire   [11:0] newIndex4_fu_760_p2;
wire   [11:0] newIndex6_fu_782_p2;
wire   [11:0] newIndex7_fu_793_p2;
wire   [31:0] cnt_insert_cast_fu_807_p1;
wire   [14:0] newIndex8_fu_841_p3;
wire   [12:0] newIndex10_fu_864_p4;
wire   [11:0] newIndex10_cast2_fu_889_p3;
wire   [11:0] newIndex11_fu_896_p2;
wire   [11:0] newIndex13_fu_908_p2;
wire   [12:0] p_sum1_fu_958_p2;
wire   [11:0] newIndex15_fu_968_p4;
wire   [12:0] p_sum2_fu_984_p2;
wire   [11:0] newIndex16_fu_994_p4;
wire   [10:0] grp_fu_699_p2;
wire   [11:0] newIndex23_fu_1028_p4;
wire   [12:0] tmp_29_fu_1020_p1;
wire   [12:0] now_0_sum_fu_1044_p2;
wire   [11:0] newIndex24_fu_1050_p4;
wire   [30:0] newIndex26_fu_1076_p4;
wire   [12:0] p_sum4_fu_1114_p2;
wire   [11:0] newIndex32_fu_1119_p4;
wire   [0:0] tmp_34_fu_1141_p1;
wire   [0:0] sel_tmp2_fu_1152_p2;
wire   [31:0] sel_tmp1_fu_1145_p3;
wire   [31:0] i_1_cast_fu_1165_p1;
wire   [30:0] newIndex17_fu_1180_p4;
wire   [12:0] p_sum_fu_1218_p2;
wire   [11:0] newIndex22_fu_1224_p4;
wire   [12:0] p_sum7_fu_1240_p2;
wire   [11:0] newIndex25_fu_1246_p4;
wire   [31:0] p_v_fu_1262_p3;
wire   [31:0] HTA_heap_load_phi_fu_1277_p3;
wire   [12:0] tmp_27_fu_1269_p1;
wire   [12:0] p_sum8_fu_1290_p2;
wire   [11:0] newIndex29_fu_1296_p4;
wire   [12:0] p_sum3_fu_1312_p2;
wire   [11:0] newIndex28_fu_1318_p4;
wire   [12:0] p_sum9_fu_1334_p2;
wire   [12:0] now_1_sum1_fu_1365_p2;
wire   [11:0] newIndex31_fu_1375_p4;
wire   [12:0] now_1_sum_fu_1397_p2;
wire   [11:0] newIndex33_fu_1402_p4;
wire   [31:0] HTA_heap_load_5_phi_fu_1418_p3;
wire   [30:0] newIndex34_fu_1431_p4;
wire   [12:0] p_sum6_fu_1447_p2;
wire   [30:0] newIndex20_fu_1473_p4;
wire   [30:0] newIndex_fu_1505_p4;
wire   [0:0] tmp_16_fu_1528_p2;
wire   [0:0] sel_tmp_fu_1541_p2;
wire   [0:0] sel_tmp3_fu_1547_p2;
wire   [31:0] sel_tmp9_fu_1533_p3;
wire   [0:0] tmp_17_fu_1562_p2;
wire   [0:0] sel_tmp5_fu_1575_p2;
wire   [0:0] sel_tmp6_fu_1581_p2;
wire   [31:0] sel_tmp4_fu_1567_p3;
wire   [0:0] tmp_18_fu_1596_p2;
wire   [0:0] tmp_19_fu_1601_p2;
reg   [30:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
#0 grp_HLS_malloc_2_s_fu_649_ap_start_reg = 1'b0;
#0 grp_HLS_malloc_3_s_fu_661_ap_start_reg = 1'b0;
#0 grp_HLS_malloc_1_s_fu_673_ap_start_reg = 1'b0;
#0 grp_HLS_free_1_s_fu_687_ap_start_reg = 1'b0;
end

HLS_MAXHEAP_HTA_Hbkb #(
    .DataWidth( 32 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
HTA_heap_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(HTA_heap_0_address0),
    .ce0(HTA_heap_0_ce0),
    .we0(HTA_heap_0_we0),
    .d0(HTA_heap_0_d0),
    .q0(HTA_heap_0_q0),
    .address1(HTA_heap_0_address1),
    .ce1(HTA_heap_0_ce1),
    .we1(HTA_heap_0_we1),
    .d1(HTA_heap_0_d1),
    .q1(HTA_heap_0_q1)
);

HLS_MAXHEAP_HTA_Hbkb #(
    .DataWidth( 32 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
HTA_heap_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(HTA_heap_1_address0),
    .ce0(HTA_heap_1_ce0),
    .we0(HTA_heap_1_we0),
    .d0(HTA_heap_1_d0),
    .q0(HTA_heap_1_q0),
    .address1(HTA_heap_1_address1),
    .ce1(HTA_heap_1_ce1),
    .we1(HTA_heap_1_we1),
    .d1(HTA_heap_1_d1),
    .q1(HTA_heap_1_q1)
);

HLS_malloc_2_s grp_HLS_malloc_2_s_fu_649(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_HLS_malloc_2_s_fu_649_ap_start),
    .ap_done(grp_HLS_malloc_2_s_fu_649_ap_done),
    .ap_idle(grp_HLS_malloc_2_s_fu_649_ap_idle),
    .ap_ready(grp_HLS_malloc_2_s_fu_649_ap_ready),
    .allocator_size(grp_HLS_malloc_2_s_fu_649_allocator_size),
    .allocator_size_ap_vld(grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld),
    .allocator_size_ap_ack(alloc_HTA_size_ap_ack),
    .allocator_free_targe(grp_HLS_malloc_2_s_fu_649_allocator_free_targe),
    .allocator_free_targe_ap_vld(grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld),
    .allocator_free_targe_ap_ack(alloc_HTA_free_target_ap_ack),
    .allocator_addr(alloc_HTA_addr),
    .allocator_addr_ap_vld(alloc_HTA_addr_ap_vld),
    .allocator_addr_ap_ack(grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack),
    .allocator_cmd(grp_HLS_malloc_2_s_fu_649_allocator_cmd),
    .allocator_cmd_ap_vld(grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld),
    .allocator_cmd_ap_ack(alloc_HTA_cmd_ap_ack),
    .ap_return(grp_HLS_malloc_2_s_fu_649_ap_return)
);

HLS_malloc_3_s grp_HLS_malloc_3_s_fu_661(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_HLS_malloc_3_s_fu_661_ap_start),
    .ap_done(grp_HLS_malloc_3_s_fu_661_ap_done),
    .ap_idle(grp_HLS_malloc_3_s_fu_661_ap_idle),
    .ap_ready(grp_HLS_malloc_3_s_fu_661_ap_ready),
    .allocator_size(grp_HLS_malloc_3_s_fu_661_allocator_size),
    .allocator_size_ap_vld(grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld),
    .allocator_size_ap_ack(alloc_HTA_size_ap_ack),
    .allocator_free_targe(grp_HLS_malloc_3_s_fu_661_allocator_free_targe),
    .allocator_free_targe_ap_vld(grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld),
    .allocator_free_targe_ap_ack(alloc_HTA_free_target_ap_ack),
    .allocator_addr(alloc_HTA_addr),
    .allocator_addr_ap_vld(alloc_HTA_addr_ap_vld),
    .allocator_addr_ap_ack(grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack),
    .allocator_cmd(grp_HLS_malloc_3_s_fu_661_allocator_cmd),
    .allocator_cmd_ap_vld(grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld),
    .allocator_cmd_ap_ack(alloc_HTA_cmd_ap_ack),
    .ap_return(grp_HLS_malloc_3_s_fu_661_ap_return)
);

HLS_malloc_1_s grp_HLS_malloc_1_s_fu_673(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_HLS_malloc_1_s_fu_673_ap_start),
    .ap_done(grp_HLS_malloc_1_s_fu_673_ap_done),
    .ap_idle(grp_HLS_malloc_1_s_fu_673_ap_idle),
    .ap_ready(grp_HLS_malloc_1_s_fu_673_ap_ready),
    .size(n),
    .allocator_size(grp_HLS_malloc_1_s_fu_673_allocator_size),
    .allocator_size_ap_vld(grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld),
    .allocator_size_ap_ack(alloc_HTA_size_ap_ack),
    .allocator_free_targe(grp_HLS_malloc_1_s_fu_673_allocator_free_targe),
    .allocator_free_targe_ap_vld(grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld),
    .allocator_free_targe_ap_ack(alloc_HTA_free_target_ap_ack),
    .allocator_addr(alloc_HTA_addr),
    .allocator_addr_ap_vld(alloc_HTA_addr_ap_vld),
    .allocator_addr_ap_ack(grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack),
    .allocator_cmd(grp_HLS_malloc_1_s_fu_673_allocator_cmd),
    .allocator_cmd_ap_vld(grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld),
    .allocator_cmd_ap_ack(alloc_HTA_cmd_ap_ack)
);

HLS_free_1_s grp_HLS_free_1_s_fu_687(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_HLS_free_1_s_fu_687_ap_start),
    .ap_done(grp_HLS_free_1_s_fu_687_ap_done),
    .ap_idle(grp_HLS_free_1_s_fu_687_ap_idle),
    .ap_ready(grp_HLS_free_1_s_fu_687_ap_ready),
    .free_target(offset_now_reg_595),
    .allocator_size(grp_HLS_free_1_s_fu_687_allocator_size),
    .allocator_size_ap_vld(grp_HLS_free_1_s_fu_687_allocator_size_ap_vld),
    .allocator_size_ap_ack(alloc_HTA_size_ap_ack),
    .allocator_free_targe(grp_HLS_free_1_s_fu_687_allocator_free_targe),
    .allocator_free_targe_ap_vld(grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld),
    .allocator_free_targe_ap_ack(alloc_HTA_free_target_ap_ack),
    .allocator_cmd(grp_HLS_free_1_s_fu_687_allocator_cmd),
    .allocator_cmd_ap_vld(grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld),
    .allocator_cmd_ap_ack(alloc_HTA_cmd_ap_ack)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_HLS_free_1_s_fu_687_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_HLS_free_1_s_fu_687_ap_start_reg <= 1'b1;
        end else if ((grp_HLS_free_1_s_fu_687_ap_ready == 1'b1)) begin
            grp_HLS_free_1_s_fu_687_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_HLS_malloc_1_s_fu_673_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_HLS_malloc_1_s_fu_673_ap_start_reg <= 1'b1;
        end else if ((grp_HLS_malloc_1_s_fu_673_ap_ready == 1'b1)) begin
            grp_HLS_malloc_1_s_fu_673_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_HLS_malloc_2_s_fu_649_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_HLS_malloc_2_s_fu_649_ap_start_reg <= 1'b1;
        end else if ((grp_HLS_malloc_2_s_fu_649_ap_ready == 1'b1)) begin
            grp_HLS_malloc_2_s_fu_649_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_HLS_malloc_3_s_fu_661_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) & (tmp_3_fu_811_p2 == 1'd1))) begin
            grp_HLS_malloc_3_s_fu_661_ap_start_reg <= 1'b1;
        end else if ((grp_HLS_malloc_3_s_fu_661_ap_ready == 1'b1)) begin
            grp_HLS_malloc_3_s_fu_661_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        cnt_insert_reg_563 <= i_reg_1818;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        cnt_insert_reg_563 <= 31'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_3_fu_811_p2 == 1'd0))) begin
        i_1_reg_605 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state30) & (((tmp_20_fu_1613_p2 == 1'd0) & (or_cond_fu_1607_p2 == 1'd0)) | ((tmp_15_reg_1964 == 1'd1) & (tmp_14_reg_1950 == 1'd1))))) begin
        i_1_reg_605 <= i_2_reg_1831;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        offset_last_parent1_reg_543 <= offset_last_parent_1_fu_1157_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        offset_last_parent1_reg_543 <= offset_head_cast_fu_778_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_3_fu_811_p2 == 1'd0))) begin
        offset_now_reg_595 <= offset_tail_cast_fu_803_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) & (((tmp_20_fu_1613_p2 == 1'd0) & (or_cond_fu_1607_p2 == 1'd0)) | ((tmp_15_reg_1964 == 1'd1) & (tmp_14_reg_1950 == 1'd1))))) begin
        offset_now_reg_595 <= offset_tail_3_reg_1921;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        offset_parent_reg_584 <= HTA_heap_0_q1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        offset_parent_reg_584 <= HTA_heap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
                offset_tail_reg_554[15 : 3] <= offset_new_node_reg_1696[15 : 3];
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
                offset_tail_reg_554[15 : 3] <= offset_head_fu_771_p3[15 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_pn1_reg_575 <= offset_parent_reg_584;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_pn1_reg_575 <= offset_new_node_cast_reg_1701;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        p_pn2_reg_617 <= ap_phi_mux_p_pn2_be_phi_fu_642_p4;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        p_pn2_reg_617 <= offset_head_cast_reg_1656;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        HTA_heap_0_addr_13_reg_1750 <= newIndex23_cast_fu_1038_p1;
        HTA_heap_1_addr_11_reg_1755 <= newIndex23_cast_fu_1038_p1;
        tmp_30_reg_1745 <= tmp_30_fu_1024_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (tmp_12_fu_1066_p2 == 1'd0))) begin
        HTA_heap_0_addr_16_reg_1789 <= newIndex27_fu_1086_p1;
        HTA_heap_1_addr_14_reg_1794 <= newIndex27_fu_1086_p1;
        tmp_33_reg_1784 <= tmp_33_fu_1072_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (tmp_11_fu_1284_p2 == 1'd1))) begin
        HTA_heap_0_addr_17_reg_1901 <= newIndex29_cast_fu_1328_p1;
        HTA_heap_1_addr_15_reg_1896 <= newIndex29_cast_fu_1328_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (tmp_11_fu_1284_p2 == 1'd0))) begin
        HTA_heap_0_addr_18_reg_1886 <= newIndex30_cast_fu_1306_p1;
        HTA_heap_1_addr_16_reg_1891 <= newIndex30_cast_fu_1306_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        HTA_heap_0_addr_21_reg_1945 <= newIndex33_cast_fu_1385_p1;
        HTA_heap_1_addr_19_reg_1940 <= newIndex33_cast_fu_1385_p1;
        tmp_31_reg_1926 <= tmp_31_fu_1361_p1;
        tmp_32_reg_1932 <= tmp_32_fu_1371_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & ((tmp_15_fu_1425_p2 == 1'd0) | (tmp_14_reg_1950 == 1'd0)))) begin
        HTA_heap_0_addr_23_reg_1968 <= newIndex35_fu_1441_p1;
        HTA_heap_1_addr_21_reg_1974 <= newIndex35_fu_1441_p1;
        newIndex12_reg_1980 <= {{p_sum6_fu_1447_p2[12:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        HTA_heap_0_addr_24_reg_1996 <= newIndex36_fu_1483_p1;
        HTA_heap_1_addr_22_reg_2002 <= newIndex36_fu_1483_p1;
        offset_left_reg_1985 <= offset_left_fu_1462_p3;
        tmp_35_reg_1991 <= tmp_35_fu_1469_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        HTA_heap_0_addr_26_reg_2029 <= newIndex5_fu_1515_p1;
        HTA_heap_1_addr_24_reg_2034 <= newIndex5_fu_1515_p1;
        offset_right_reg_2018 <= offset_right_fu_1494_p3;
        swap_tmp1_reg_2039 <= swap_tmp1_fu_1521_p3;
        tmp_36_reg_2024 <= tmp_36_fu_1501_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_HLS_malloc_2_s_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        HTA_heap_0_addr_reg_1635[10 : 2] <= newIndex2_fu_722_p1[10 : 2];
        newIndex3_cast1_reg_1640[11 : 2] <= newIndex3_cast1_fu_747_p3[11 : 2];
        newIndex4_cast_reg_1646[11 : 2] <= newIndex4_cast_fu_766_p1[11 : 2];
        tmp_1_reg_1630 <= {{grp_HLS_malloc_2_s_fu_649_ap_return[15:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_21_fu_944_p1 == 1'd0))) begin
        HTA_heap_1_addr_7_reg_1731 <= newIndex15_cast_fu_978_p1;
        tmp_24_reg_1727 <= tmp_24_fu_964_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_21_fu_944_p1 == 1'd1))) begin
        HTA_heap_1_addr_8_reg_1740 <= newIndex16_cast_fu_1004_p1;
        tmp_23_reg_1736 <= tmp_23_fu_990_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_2_reg_1831 <= i_2_fu_1174_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((tmp_13_fu_1108_p2 == 1'd1) | (tmp_12_reg_1780 == 1'd1)))) begin
        i_reg_1818 <= i_fu_1135_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        newIndex10_cast1_reg_1707[10 : 2] <= newIndex10_cast1_fu_933_p3[10 : 2];
        offset_new_node_cast_reg_1701[15 : 3] <= offset_new_node_cast_fu_927_p1[15 : 3];
        offset_new_node_reg_1696[15 : 3] <= offset_new_node_fu_920_p3[15 : 3];
        tmp_21_reg_1712 <= tmp_21_fu_944_p1;
        tmp_22_reg_1722 <= tmp_22_fu_954_p1;
        tmp_s_reg_1717 <= tmp_s_fu_948_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_3_fu_811_p2 == 1'd1))) begin
        newIndex14_reg_1676 <= {{offset_tail_reg_554[12:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        newIndex30_reg_1906 <= {{p_sum9_fu_1334_p2[12:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        offset_head_cast_reg_1656[15 : 3] <= offset_head_cast_fu_778_p1[15 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        offset_tail_3_reg_1921 <= offset_tail_3_fu_1354_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        offset_tail_cast_reg_1662[15 : 3] <= offset_tail_cast_fu_803_p1[15 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & ((tmp_15_reg_1964 == 1'd0) | (tmp_14_reg_1950 == 1'd0)))) begin
        or_cond_reg_2047 <= or_cond_fu_1607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_12_reg_1780 == 1'd0))) begin
        swap_tmp_reg_1799 <= swap_tmp_fu_1092_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_HLS_malloc_3_s_fu_661_ap_done == 1'b1))) begin
        tmp_10_reg_1691 <= {{grp_HLS_malloc_3_s_fu_661_ap_return[11:3]}};
        tmp_8_reg_1681 <= {{grp_HLS_malloc_3_s_fu_661_ap_return[15:3]}};
        tmp_9_reg_1686 <= {{grp_HLS_malloc_3_s_fu_661_ap_return[12:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_11_reg_1882 <= tmp_11_fu_1284_p2;
        tmp_28_reg_1878 <= tmp_28_fu_1273_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_12_reg_1780 <= tmp_12_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_14_reg_1950 <= tmp_14_fu_1391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (tmp_14_reg_1950 == 1'd1))) begin
        tmp_15_reg_1964 <= tmp_15_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_25_reg_1853 <= tmp_25_fu_1214_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_26_reg_1846 <= tmp_26_fu_1196_p1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state30) & (((tmp_15_reg_1964 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1)) | ((tmp_14_reg_1950 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state30) & (((or_cond_fu_1607_p2 == 1'd0) & (tmp_15_reg_1964 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1)) | ((or_cond_fu_1607_p2 == 1'd0) & (tmp_14_reg_1950 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1)))))) begin
        HTA_heap_0_address0 = HTA_heap_0_addr_23_reg_1968;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        HTA_heap_0_address0 = HTA_heap_0_addr_24_reg_1996;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        HTA_heap_0_address0 = newIndex12_cast_fu_1489_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        HTA_heap_0_address0 = newIndex34_cast_fu_1412_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        HTA_heap_0_address0 = newIndex31_cast_fu_1349_p1;
    end else if (((1'b1 == ap_CS_fsm_state20) & (tmp_26_reg_1846 == 1'd0))) begin
        HTA_heap_0_address0 = newIndex25_cast_fu_1256_p1;
    end else if (((1'b1 == ap_CS_fsm_state20) & (tmp_26_reg_1846 == 1'd1))) begin
        HTA_heap_0_address0 = newIndex22_cast_fu_1234_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        HTA_heap_0_address0 = newIndex18_fu_1190_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) & ((tmp_13_fu_1108_p2 == 1'd1) | (tmp_12_reg_1780 == 1'd1)))) begin
        HTA_heap_0_address0 = newIndex32_cast_fu_1129_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_13_fu_1108_p2 == 1'd0) & (tmp_33_reg_1784 == 1'd0) & (tmp_12_reg_1780 == 1'd0))) begin
        HTA_heap_0_address0 = HTA_heap_0_addr_16_reg_1789;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        HTA_heap_0_address0 = newIndex27_fu_1086_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd1))) begin
        HTA_heap_0_address0 = newIndex21_cast_fu_1015_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd0))) begin
        HTA_heap_0_address0 = newIndex19_cast_fu_1010_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        HTA_heap_0_address0 = newIndex11_cast_fu_902_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        HTA_heap_0_address0 = newIndex9_fu_849_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        HTA_heap_0_address0 = newIndex6_cast_fu_787_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        HTA_heap_0_address0 = newIndex2_fu_722_p1;
    end else begin
        HTA_heap_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) & (tmp_35_reg_1991 == 1'd0) & (or_cond_reg_2047 == 1'd1))) begin
        HTA_heap_0_address1 = HTA_heap_0_addr_24_reg_1996;
    end else if (((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd0) & (tmp_36_reg_2024 == 1'd0))) begin
        HTA_heap_0_address1 = HTA_heap_0_addr_26_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        HTA_heap_0_address1 = newIndex5_fu_1515_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        HTA_heap_0_address1 = HTA_heap_0_addr_23_reg_1968;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        HTA_heap_0_address1 = HTA_heap_0_addr_21_reg_1945;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        HTA_heap_0_address1 = newIndex33_cast_fu_1385_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd1) & (tmp_28_reg_1878 == 1'd1))) begin
        HTA_heap_0_address1 = HTA_heap_0_addr_17_reg_1901;
    end else if (((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd0) & (tmp_28_reg_1878 == 1'd0))) begin
        HTA_heap_0_address1 = HTA_heap_0_addr_18_reg_1886;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        HTA_heap_0_address1 = HTA_heap_0_addr_reg_1635;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14))) begin
        HTA_heap_0_address1 = HTA_heap_0_addr_13_reg_1750;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        HTA_heap_0_address1 = newIndex24_cast_fu_1060_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (tmp_23_fu_990_p1 == 1'd1) & (tmp_21_fu_944_p1 == 1'd1))) begin
        HTA_heap_0_address1 = newIndex16_cast_fu_1004_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (tmp_24_fu_964_p1 == 1'd0) & (tmp_21_fu_944_p1 == 1'd0))) begin
        HTA_heap_0_address1 = newIndex15_cast_fu_978_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        HTA_heap_0_address1 = newIndex13_cast_fu_914_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        HTA_heap_0_address1 = newIndex7_cast_fu_798_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        HTA_heap_0_address1 = newIndex4_cast_fu_766_p1;
    end else begin
        HTA_heap_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state5) | ((grp_HLS_malloc_2_s_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd1)) | ((1'b1 == ap_CS_fsm_state30) & (((tmp_15_reg_1964 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1)) | ((tmp_14_reg_1950 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state30) & (((or_cond_fu_1607_p2 == 1'd0) & (tmp_15_reg_1964 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1)) | ((or_cond_fu_1607_p2 == 1'd0) & (tmp_14_reg_1950 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1)))) | ((grp_HLS_free_1_s_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((1'b1 == ap_CS_fsm_state20) & (tmp_26_reg_1846 == 1'd1)) | ((1'b1 == ap_CS_fsm_state20) & (tmp_26_reg_1846 == 1'd0)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & ((tmp_13_fu_1108_p2 == 1'd1) | (tmp_12_reg_1780 == 1'd1))) | ((1'b1 == ap_CS_fsm_state15) & (tmp_13_fu_1108_p2 == 1'd0) & (tmp_33_reg_1784 == 1'd0) & (tmp_12_reg_1780 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (grp_HLS_malloc_3_s_fu_661_ap_done == 1'b1)))) begin
        HTA_heap_0_ce0 = 1'b1;
    end else begin
        HTA_heap_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5) | ((grp_HLS_malloc_2_s_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd0) & (tmp_36_reg_2024 == 1'd0)) | ((1'b1 == ap_CS_fsm_state31) & (tmp_35_reg_1991 == 1'd0) & (or_cond_reg_2047 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd1) & (tmp_28_reg_1878 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd0) & (tmp_28_reg_1878 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_23_fu_990_p1 == 1'd1) & (tmp_21_fu_944_p1 == 1'd1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_24_fu_964_p1 == 1'd0) & (tmp_21_fu_944_p1 == 1'd0)))) begin
        HTA_heap_0_ce1 = 1'b1;
    end else begin
        HTA_heap_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) & (((tmp_15_reg_1964 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1)) | ((tmp_14_reg_1950 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1))))) begin
        HTA_heap_0_d0 = swap_tmp2_fu_1552_p3;
    end else if (((1'b1 == ap_CS_fsm_state30) & (((or_cond_fu_1607_p2 == 1'd0) & (tmp_15_reg_1964 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1)) | ((or_cond_fu_1607_p2 == 1'd0) & (tmp_14_reg_1950 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1))))) begin
        HTA_heap_0_d0 = swap_tmp3_fu_1586_p3;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_13_fu_1108_p2 == 1'd0) & (tmp_33_reg_1784 == 1'd0) & (tmp_12_reg_1780 == 1'd0))) begin
        HTA_heap_0_d0 = now_load_phi_fu_1099_p3;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd1))) begin
        HTA_heap_0_d0 = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd0))) begin
        HTA_heap_0_d0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        HTA_heap_0_d0 = 32'd4294967295;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7))) begin
        HTA_heap_0_d0 = data_q0;
    end else begin
        HTA_heap_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd0) & (tmp_36_reg_2024 == 1'd0)) | ((1'b1 == ap_CS_fsm_state31) & (tmp_35_reg_1991 == 1'd0) & (or_cond_reg_2047 == 1'd1)))) begin
        HTA_heap_0_d1 = swap_tmp1_reg_2039;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        HTA_heap_0_d1 = tail_load_phi_fu_1205_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        HTA_heap_0_d1 = swap_tmp_reg_1799;
    end else if ((((1'b1 == ap_CS_fsm_state9) & (tmp_23_fu_990_p1 == 1'd1) & (tmp_21_fu_944_p1 == 1'd1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_24_fu_964_p1 == 1'd0) & (tmp_21_fu_944_p1 == 1'd0)))) begin
        HTA_heap_0_d1 = offset_new_node_cast_fu_927_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        HTA_heap_0_d1 = offset_tail_cast_reg_1662;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd1) & (tmp_28_reg_1878 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd0) & (tmp_28_reg_1878 == 1'd0)))) begin
        HTA_heap_0_d1 = 32'd4294967295;
    end else begin
        HTA_heap_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | ((grp_HLS_malloc_2_s_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd1)) | ((1'b1 == ap_CS_fsm_state30) & (((tmp_15_reg_1964 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1)) | ((tmp_14_reg_1950 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state30) & (((or_cond_fu_1607_p2 == 1'd0) & (tmp_15_reg_1964 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1)) | ((or_cond_fu_1607_p2 == 1'd0) & (tmp_14_reg_1950 == 1'd0) & (tmp_32_reg_1932 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_13_fu_1108_p2 == 1'd0) & (tmp_33_reg_1784 == 1'd0) & (tmp_12_reg_1780 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (grp_HLS_malloc_3_s_fu_661_ap_done == 1'b1)))) begin
        HTA_heap_0_we0 = 1'b1;
    end else begin
        HTA_heap_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state5) | ((grp_HLS_malloc_2_s_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd0) & (tmp_36_reg_2024 == 1'd0)) | ((1'b1 == ap_CS_fsm_state31) & (tmp_35_reg_1991 == 1'd0) & (or_cond_reg_2047 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (tmp_30_reg_1745 == 1'd0)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd1) & (tmp_28_reg_1878 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd0) & (tmp_28_reg_1878 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_23_fu_990_p1 == 1'd1) & (tmp_21_fu_944_p1 == 1'd1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_24_fu_964_p1 == 1'd0) & (tmp_21_fu_944_p1 == 1'd0)))) begin
        HTA_heap_0_we1 = 1'b1;
    end else begin
        HTA_heap_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state30) & (((tmp_15_reg_1964 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)) | ((tmp_14_reg_1950 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state30) & (((or_cond_fu_1607_p2 == 1'd0) & (tmp_15_reg_1964 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)) | ((or_cond_fu_1607_p2 == 1'd0) & (tmp_14_reg_1950 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)))))) begin
        HTA_heap_1_address0 = HTA_heap_1_addr_21_reg_1974;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        HTA_heap_1_address0 = HTA_heap_1_addr_22_reg_2002;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        HTA_heap_1_address0 = newIndex12_cast_fu_1489_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        HTA_heap_1_address0 = newIndex34_cast_fu_1412_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        HTA_heap_1_address0 = newIndex31_cast_fu_1349_p1;
    end else if (((1'b1 == ap_CS_fsm_state20) & (tmp_26_reg_1846 == 1'd1))) begin
        HTA_heap_1_address0 = newIndex25_cast_fu_1256_p1;
    end else if (((1'b1 == ap_CS_fsm_state20) & (tmp_26_reg_1846 == 1'd0))) begin
        HTA_heap_1_address0 = newIndex22_cast_fu_1234_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (((tmp_21_reg_1712 == 1'd0) & (tmp_13_fu_1108_p2 == 1'd1)) | ((tmp_21_reg_1712 == 1'd0) & (tmp_12_reg_1780 == 1'd1))))) begin
        HTA_heap_1_address0 = newIndex32_cast_fu_1129_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_13_fu_1108_p2 == 1'd0) & (tmp_12_reg_1780 == 1'd0) & (tmp_33_reg_1784 == 1'd1))) begin
        HTA_heap_1_address0 = HTA_heap_1_addr_14_reg_1794;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        HTA_heap_1_address0 = newIndex27_fu_1086_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        HTA_heap_1_address0 = newIndex24_cast_fu_1060_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        HTA_heap_1_address0 = newIndex14_cast_fu_940_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        HTA_heap_1_address0 = newIndex11_cast_fu_902_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        HTA_heap_1_address0 = newIndex6_cast_fu_787_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        HTA_heap_1_address0 = newIndex3_cast_fu_755_p1;
    end else begin
        HTA_heap_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd1) & (tmp_35_reg_1991 == 1'd1))) begin
        HTA_heap_1_address1 = HTA_heap_1_addr_22_reg_2002;
    end else if (((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd0) & (tmp_36_reg_2024 == 1'd1))) begin
        HTA_heap_1_address1 = HTA_heap_1_addr_24_reg_2034;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        HTA_heap_1_address1 = newIndex5_fu_1515_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        HTA_heap_1_address1 = HTA_heap_1_addr_21_reg_1974;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        HTA_heap_1_address1 = HTA_heap_1_addr_19_reg_1940;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        HTA_heap_1_address1 = newIndex33_cast_fu_1385_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) & (tmp_28_reg_1878 == 1'd0) & (tmp_11_reg_1882 == 1'd1))) begin
        HTA_heap_1_address1 = HTA_heap_1_addr_15_reg_1896;
    end else if (((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd0) & (tmp_28_reg_1878 == 1'd1))) begin
        HTA_heap_1_address1 = HTA_heap_1_addr_16_reg_1891;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        HTA_heap_1_address1 = newIndex18_fu_1190_p1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14))) begin
        HTA_heap_1_address1 = HTA_heap_1_addr_11_reg_1755;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_23_reg_1736 == 1'd0) & (tmp_21_reg_1712 == 1'd1))) begin
        HTA_heap_1_address1 = HTA_heap_1_addr_8_reg_1740;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd0) & (tmp_24_reg_1727 == 1'd1))) begin
        HTA_heap_1_address1 = HTA_heap_1_addr_7_reg_1731;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        HTA_heap_1_address1 = newIndex13_cast_fu_914_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        HTA_heap_1_address1 = newIndex10_cast_fu_884_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        HTA_heap_1_address1 = newIndex4_cast_reg_1646;
    end else begin
        HTA_heap_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((grp_HLS_malloc_2_s_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_state30) & (((tmp_15_reg_1964 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)) | ((tmp_14_reg_1950 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state30) & (((or_cond_fu_1607_p2 == 1'd0) & (tmp_15_reg_1964 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)) | ((or_cond_fu_1607_p2 == 1'd0) & (tmp_14_reg_1950 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)))) | ((grp_HLS_free_1_s_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((1'b1 == ap_CS_fsm_state20) & (tmp_26_reg_1846 == 1'd1)) | ((1'b1 == ap_CS_fsm_state20) & (tmp_26_reg_1846 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (((tmp_21_reg_1712 == 1'd0) & (tmp_13_fu_1108_p2 == 1'd1)) | ((tmp_21_reg_1712 == 1'd0) & (tmp_12_reg_1780 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state15) & (tmp_13_fu_1108_p2 == 1'd0) & (tmp_12_reg_1780 == 1'd0) & (tmp_33_reg_1784 == 1'd1)))) begin
        HTA_heap_1_ce0 = 1'b1;
    end else begin
        HTA_heap_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd0) & (tmp_36_reg_2024 == 1'd1)) | ((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd1) & (tmp_35_reg_1991 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_23_reg_1736 == 1'd0) & (tmp_21_reg_1712 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_28_reg_1878 == 1'd0) & (tmp_11_reg_1882 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd0) & (tmp_28_reg_1878 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd0) & (tmp_24_reg_1727 == 1'd1)) | ((1'b1 == ap_CS_fsm_state7) & (grp_HLS_malloc_3_s_fu_661_ap_done == 1'b1)))) begin
        HTA_heap_1_ce1 = 1'b1;
    end else begin
        HTA_heap_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) & (((tmp_15_reg_1964 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)) | ((tmp_14_reg_1950 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1))))) begin
        HTA_heap_1_d0 = swap_tmp2_fu_1552_p3;
    end else if (((1'b1 == ap_CS_fsm_state30) & (((or_cond_fu_1607_p2 == 1'd0) & (tmp_15_reg_1964 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)) | ((or_cond_fu_1607_p2 == 1'd0) & (tmp_14_reg_1950 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1))))) begin
        HTA_heap_1_d0 = swap_tmp3_fu_1586_p3;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_13_fu_1108_p2 == 1'd0) & (tmp_12_reg_1780 == 1'd0) & (tmp_33_reg_1784 == 1'd1))) begin
        HTA_heap_1_d0 = now_load_phi_fu_1099_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        HTA_heap_1_d0 = offset_new_node_cast_fu_927_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        HTA_heap_1_d0 = offset_last_parent1_reg_543;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        HTA_heap_1_d0 = 32'd4294967295;
    end else begin
        HTA_heap_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd0) & (tmp_36_reg_2024 == 1'd1)) | ((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd1) & (tmp_35_reg_1991 == 1'd1)))) begin
        HTA_heap_1_d1 = swap_tmp1_reg_2039;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        HTA_heap_1_d1 = swap_tmp_reg_1799;
    end else if ((((1'b1 == ap_CS_fsm_state10) & (tmp_23_reg_1736 == 1'd0) & (tmp_21_reg_1712 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd0) & (tmp_24_reg_1727 == 1'd1)))) begin
        HTA_heap_1_d1 = offset_new_node_cast_reg_1701;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state22) & (tmp_28_reg_1878 == 1'd0) & (tmp_11_reg_1882 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd0) & (tmp_28_reg_1878 == 1'd1)))) begin
        HTA_heap_1_d1 = 32'd4294967295;
    end else begin
        HTA_heap_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((grp_HLS_malloc_2_s_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_state30) & (((tmp_15_reg_1964 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)) | ((tmp_14_reg_1950 == 1'd0) & (or_cond_fu_1607_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state30) & (((or_cond_fu_1607_p2 == 1'd0) & (tmp_15_reg_1964 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)) | ((or_cond_fu_1607_p2 == 1'd0) & (tmp_14_reg_1950 == 1'd0) & (tmp_20_fu_1613_p2 == 1'd1) & (tmp_32_reg_1932 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state15) & (tmp_13_fu_1108_p2 == 1'd0) & (tmp_12_reg_1780 == 1'd0) & (tmp_33_reg_1784 == 1'd1)))) begin
        HTA_heap_1_we0 = 1'b1;
    end else begin
        HTA_heap_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd0) & (tmp_36_reg_2024 == 1'd1)) | ((1'b1 == ap_CS_fsm_state31) & (or_cond_reg_2047 == 1'd1) & (tmp_35_reg_1991 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (tmp_30_reg_1745 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_23_reg_1736 == 1'd0) & (tmp_21_reg_1712 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_28_reg_1878 == 1'd0) & (tmp_11_reg_1882 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_11_reg_1882 == 1'd0) & (tmp_28_reg_1878 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_21_reg_1712 == 1'd0) & (tmp_24_reg_1727 == 1'd1)) | ((1'b1 == ap_CS_fsm_state7) & (grp_HLS_malloc_3_s_fu_661_ap_done == 1'b1)))) begin
        HTA_heap_1_we1 = 1'b1;
    end else begin
        HTA_heap_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        alloc_HTA_addr_ap_ack = grp_HLS_malloc_1_s_fu_673_allocator_addr_ap_ack;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        alloc_HTA_addr_ap_ack = grp_HLS_malloc_3_s_fu_661_allocator_addr_ap_ack;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        alloc_HTA_addr_ap_ack = grp_HLS_malloc_2_s_fu_649_allocator_addr_ap_ack;
    end else begin
        alloc_HTA_addr_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        alloc_HTA_cmd = grp_HLS_free_1_s_fu_687_allocator_cmd;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld == 1'b1))) begin
        alloc_HTA_cmd = grp_HLS_malloc_1_s_fu_673_allocator_cmd;
    end else if (((grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        alloc_HTA_cmd = grp_HLS_malloc_3_s_fu_661_allocator_cmd;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld == 1'b1))) begin
        alloc_HTA_cmd = grp_HLS_malloc_2_s_fu_649_allocator_cmd;
    end else begin
        alloc_HTA_cmd = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        alloc_HTA_cmd_ap_vld = grp_HLS_free_1_s_fu_687_allocator_cmd_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        alloc_HTA_cmd_ap_vld = grp_HLS_malloc_1_s_fu_673_allocator_cmd_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        alloc_HTA_cmd_ap_vld = grp_HLS_malloc_3_s_fu_661_allocator_cmd_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        alloc_HTA_cmd_ap_vld = grp_HLS_malloc_2_s_fu_649_allocator_cmd_ap_vld;
    end else begin
        alloc_HTA_cmd_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        alloc_HTA_free_target = grp_HLS_free_1_s_fu_687_allocator_free_targe;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld == 1'b1))) begin
        alloc_HTA_free_target = grp_HLS_malloc_1_s_fu_673_allocator_free_targe;
    end else if (((grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        alloc_HTA_free_target = grp_HLS_malloc_3_s_fu_661_allocator_free_targe;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld == 1'b1))) begin
        alloc_HTA_free_target = grp_HLS_malloc_2_s_fu_649_allocator_free_targe;
    end else begin
        alloc_HTA_free_target = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        alloc_HTA_free_target_ap_vld = grp_HLS_free_1_s_fu_687_allocator_free_targe_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        alloc_HTA_free_target_ap_vld = grp_HLS_malloc_1_s_fu_673_allocator_free_targe_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        alloc_HTA_free_target_ap_vld = grp_HLS_malloc_3_s_fu_661_allocator_free_targe_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        alloc_HTA_free_target_ap_vld = grp_HLS_malloc_2_s_fu_649_allocator_free_targe_ap_vld;
    end else begin
        alloc_HTA_free_target_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_HLS_free_1_s_fu_687_allocator_size_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        alloc_HTA_size = grp_HLS_free_1_s_fu_687_allocator_size;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld == 1'b1))) begin
        alloc_HTA_size = grp_HLS_malloc_1_s_fu_673_allocator_size;
    end else if (((grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        alloc_HTA_size = grp_HLS_malloc_3_s_fu_661_allocator_size;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld == 1'b1))) begin
        alloc_HTA_size = grp_HLS_malloc_2_s_fu_649_allocator_size;
    end else begin
        alloc_HTA_size = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        alloc_HTA_size_ap_vld = grp_HLS_free_1_s_fu_687_allocator_size_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        alloc_HTA_size_ap_vld = grp_HLS_malloc_1_s_fu_673_allocator_size_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        alloc_HTA_size_ap_vld = grp_HLS_malloc_3_s_fu_661_allocator_size_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        alloc_HTA_size_ap_vld = grp_HLS_malloc_2_s_fu_649_allocator_size_ap_vld;
    end else begin
        alloc_HTA_size_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (tmp_5_fu_1169_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        if ((tmp_32_reg_1932 == 1'd1)) begin
            ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 = HTA_heap_0_q1;
        end else if ((tmp_32_reg_1932 == 1'd0)) begin
            ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 = HTA_heap_1_q1;
        end else begin
            ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((or_cond_reg_2047 == 1'd0)) begin
            ap_phi_mux_p_pn2_be_phi_fu_642_p4 = offset_right_reg_2018;
        end else if ((or_cond_reg_2047 == 1'd1)) begin
            ap_phi_mux_p_pn2_be_phi_fu_642_p4 = offset_left_reg_1985;
        end else begin
            ap_phi_mux_p_pn2_be_phi_fu_642_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_p_pn2_be_phi_fu_642_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (tmp_5_fu_1169_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        data_address0 = tmp_7_fu_816_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        data_address0 = 64'd0;
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dis_output_ce0 = 1'b1;
    end else begin
        dis_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dis_output_we0 = 1'b1;
    end else begin
        dis_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_HLS_malloc_1_s_fu_673_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_HLS_malloc_2_s_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_3_fu_811_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_HLS_malloc_3_s_fu_661_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_30_fu_1024_p1 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (tmp_13_fu_1108_p2 == 1'd0) & (tmp_12_reg_1780 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (tmp_5_fu_1169_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_HLS_free_1_s_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (tmp_15_fu_1425_p2 == 1'd1) & (tmp_14_reg_1950 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (((tmp_20_fu_1613_p2 == 1'd0) & (or_cond_fu_1607_p2 == 1'd0)) | ((tmp_15_reg_1964 == 1'd1) & (tmp_14_reg_1950 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HTA_heap_load_5_phi_fu_1418_p3 = ((tmp_32_reg_1932[0:0] === 1'b1) ? HTA_heap_1_q0 : HTA_heap_0_q0);

assign HTA_heap_load_phi_fu_1277_p3 = ((tmp_26_reg_1846[0:0] === 1'b1) ? HTA_heap_1_q0 : HTA_heap_0_q0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign cnt_insert_cast_fu_807_p1 = cnt_insert_reg_563;

assign dis_output_address0 = tmp_6_fu_1200_p1;

assign dis_output_d0 = HTA_heap_0_q1;

assign grp_HLS_free_1_s_fu_687_ap_start = grp_HLS_free_1_s_fu_687_ap_start_reg;

assign grp_HLS_malloc_1_s_fu_673_ap_start = grp_HLS_malloc_1_s_fu_673_ap_start_reg;

assign grp_HLS_malloc_2_s_fu_649_ap_start = grp_HLS_malloc_2_s_fu_649_ap_start_reg;

assign grp_HLS_malloc_3_s_fu_661_ap_start = grp_HLS_malloc_3_s_fu_661_ap_start_reg;

assign grp_fu_699_p2 = (newIndex10_cast1_reg_1707 | 11'd3);

assign i_1_cast_fu_1165_p1 = i_1_reg_605;

assign i_2_fu_1174_p2 = (i_1_reg_605 + 31'd1);

assign i_fu_1135_p2 = (31'd1 + cnt_insert_reg_563);

assign newIndex10_cast1_fu_933_p3 = {{tmp_10_reg_1691}, {2'd0}};

assign newIndex10_cast2_fu_889_p3 = {{tmp_9_reg_1686}, {2'd0}};

assign newIndex10_cast_fu_884_p1 = newIndex10_fu_864_p4;

assign newIndex10_fu_864_p4 = {{{{1'd0}, {tmp_9_fu_854_p4}}}, {2'd0}};

assign newIndex11_cast_fu_902_p1 = newIndex11_fu_896_p2;

assign newIndex11_fu_896_p2 = (newIndex10_cast2_fu_889_p3 | 12'd2);

assign newIndex12_cast_fu_1489_p1 = newIndex12_reg_1980;

assign newIndex13_cast_fu_914_p1 = newIndex13_fu_908_p2;

assign newIndex13_fu_908_p2 = (newIndex10_cast2_fu_889_p3 | 12'd1);

assign newIndex14_cast_fu_940_p1 = newIndex14_reg_1676;

assign newIndex15_cast_fu_978_p1 = newIndex15_fu_968_p4;

assign newIndex15_fu_968_p4 = {{p_sum1_fu_958_p2[12:1]}};

assign newIndex16_cast_fu_1004_p1 = newIndex16_fu_994_p4;

assign newIndex16_fu_994_p4 = {{p_sum2_fu_984_p2[12:1]}};

assign newIndex17_fu_1180_p4 = {{offset_now_reg_595[31:1]}};

assign newIndex18_fu_1190_p1 = newIndex17_fu_1180_p4;

assign newIndex19_cast_fu_1010_p1 = grp_fu_699_p2;

assign newIndex1_fu_714_p3 = {{tmp_1_fu_704_p4}, {2'd0}};

assign newIndex20_fu_1473_p4 = {{offset_left_fu_1462_p3[31:1]}};

assign newIndex21_cast_fu_1015_p1 = grp_fu_699_p2;

assign newIndex22_cast_fu_1234_p1 = newIndex22_fu_1224_p4;

assign newIndex22_fu_1224_p4 = {{p_sum_fu_1218_p2[12:1]}};

assign newIndex23_cast_fu_1038_p1 = newIndex23_fu_1028_p4;

assign newIndex23_fu_1028_p4 = {{p_pn1_reg_575[12:1]}};

assign newIndex24_cast_fu_1060_p1 = newIndex24_fu_1050_p4;

assign newIndex24_fu_1050_p4 = {{now_0_sum_fu_1044_p2[12:1]}};

assign newIndex25_cast_fu_1256_p1 = newIndex25_fu_1246_p4;

assign newIndex25_fu_1246_p4 = {{p_sum7_fu_1240_p2[12:1]}};

assign newIndex26_fu_1076_p4 = {{offset_parent_reg_584[31:1]}};

assign newIndex27_fu_1086_p1 = newIndex26_fu_1076_p4;

assign newIndex28_fu_1318_p4 = {{p_sum3_fu_1312_p2[12:1]}};

assign newIndex29_cast_fu_1328_p1 = newIndex28_fu_1318_p4;

assign newIndex29_fu_1296_p4 = {{p_sum8_fu_1290_p2[12:1]}};

assign newIndex2_fu_722_p1 = newIndex1_fu_714_p3;

assign newIndex30_cast_fu_1306_p1 = newIndex29_fu_1296_p4;

assign newIndex31_cast_fu_1349_p1 = newIndex30_reg_1906;

assign newIndex31_fu_1375_p4 = {{now_1_sum1_fu_1365_p2[12:1]}};

assign newIndex32_cast_fu_1129_p1 = newIndex32_fu_1119_p4;

assign newIndex32_fu_1119_p4 = {{p_sum4_fu_1114_p2[12:1]}};

assign newIndex33_cast_fu_1385_p1 = newIndex31_fu_1375_p4;

assign newIndex33_fu_1402_p4 = {{now_1_sum_fu_1397_p2[12:1]}};

assign newIndex34_cast_fu_1412_p1 = newIndex33_fu_1402_p4;

assign newIndex34_fu_1431_p4 = {{p_pn2_reg_617[31:1]}};

assign newIndex35_fu_1441_p1 = newIndex34_fu_1431_p4;

assign newIndex36_fu_1483_p1 = newIndex20_fu_1473_p4;

assign newIndex3_cast1_fu_747_p3 = {{tmp_2_fu_727_p4}, {2'd0}};

assign newIndex3_cast_fu_755_p1 = newIndex3_fu_737_p4;

assign newIndex3_fu_737_p4 = {{{{1'd0}, {tmp_2_fu_727_p4}}}, {2'd0}};

assign newIndex4_cast_fu_766_p1 = newIndex4_fu_760_p2;

assign newIndex4_fu_760_p2 = (newIndex3_cast1_fu_747_p3 | 12'd1);

assign newIndex5_fu_1515_p1 = newIndex_fu_1505_p4;

assign newIndex6_cast_fu_787_p1 = newIndex6_fu_782_p2;

assign newIndex6_fu_782_p2 = (newIndex3_cast1_reg_1640 | 12'd2);

assign newIndex7_cast_fu_798_p1 = newIndex7_fu_793_p2;

assign newIndex7_fu_793_p2 = (newIndex3_cast1_reg_1640 | 12'd3);

assign newIndex8_fu_841_p3 = {{tmp_8_fu_831_p4}, {2'd0}};

assign newIndex9_fu_849_p1 = newIndex8_fu_841_p3;

assign newIndex_fu_1505_p4 = {{offset_right_fu_1494_p3[31:1]}};

assign now_0_sum_fu_1044_p2 = (13'd5 + tmp_29_fu_1020_p1);

assign now_1_sum1_fu_1365_p2 = (13'd3 + tmp_31_fu_1361_p1);

assign now_1_sum_fu_1397_p2 = (tmp_31_reg_1926 + 13'd4);

assign now_load_phi_fu_1099_p3 = ((tmp_30_reg_1745[0:0] === 1'b1) ? HTA_heap_1_q1 : HTA_heap_0_q1);

assign offset_head_cast_fu_778_p1 = offset_head_fu_771_p3;

assign offset_head_fu_771_p3 = {{tmp_1_reg_1630}, {3'd0}};

assign offset_last_parent_1_fu_1157_p3 = ((sel_tmp2_fu_1152_p2[0:0] === 1'b1) ? HTA_heap_0_q0 : sel_tmp1_fu_1145_p3);

assign offset_left_fu_1462_p3 = ((tmp_32_reg_1932[0:0] === 1'b1) ? HTA_heap_0_q1 : HTA_heap_1_q1);

assign offset_new_node_cast_fu_927_p1 = offset_new_node_fu_920_p3;

assign offset_new_node_fu_920_p3 = {{tmp_8_reg_1681}, {3'd0}};

assign offset_right_fu_1494_p3 = ((tmp_32_reg_1932[0:0] === 1'b1) ? HTA_heap_1_q0 : HTA_heap_0_q0);

assign offset_tail_3_fu_1354_p3 = ((tmp_26_reg_1846[0:0] === 1'b1) ? HTA_heap_1_q0 : HTA_heap_0_q0);

assign offset_tail_cast_fu_803_p1 = offset_tail_reg_554;

assign or_cond_fu_1607_p2 = (tmp_19_fu_1601_p2 & tmp_18_fu_1596_p2);

assign p_sum1_fu_958_p2 = (13'd4 + tmp_22_fu_954_p1);

assign p_sum2_fu_984_p2 = (13'd3 + tmp_22_fu_954_p1);

assign p_sum3_fu_1312_p2 = (tmp_27_fu_1269_p1 + 13'd3);

assign p_sum4_fu_1114_p2 = (13'd1 + tmp_22_reg_1722);

assign p_sum6_fu_1447_p2 = (13'd4 + tmp_31_reg_1926);

assign p_sum7_fu_1240_p2 = (13'd6 + tmp_25_fu_1214_p1);

assign p_sum8_fu_1290_p2 = (tmp_27_fu_1269_p1 + 13'd4);

assign p_sum9_fu_1334_p2 = (tmp_25_reg_1853 + 13'd2);

assign p_sum_fu_1218_p2 = (13'd5 + tmp_25_fu_1214_p1);

assign p_v_fu_1262_p3 = ((tmp_26_reg_1846[0:0] === 1'b1) ? HTA_heap_0_q0 : HTA_heap_1_q0);

assign sel_tmp1_fu_1145_p3 = ((tmp_21_reg_1712[0:0] === 1'b1) ? offset_last_parent1_reg_543 : HTA_heap_1_q0);

assign sel_tmp2_fu_1152_p2 = (tmp_s_reg_1717 & tmp_34_fu_1141_p1);

assign sel_tmp3_fu_1547_p2 = (tmp_35_reg_1991 & sel_tmp_fu_1541_p2);

assign sel_tmp4_fu_1567_p3 = ((tmp_17_fu_1562_p2[0:0] === 1'b1) ? 32'd4294967295 : HTA_heap_0_q1);

assign sel_tmp5_fu_1575_p2 = (tmp_17_fu_1562_p2 ^ 1'd1);

assign sel_tmp6_fu_1581_p2 = (tmp_36_reg_2024 & sel_tmp5_fu_1575_p2);

assign sel_tmp9_fu_1533_p3 = ((tmp_16_fu_1528_p2[0:0] === 1'b1) ? 32'd4294967295 : HTA_heap_0_q0);

assign sel_tmp_fu_1541_p2 = (tmp_16_fu_1528_p2 ^ 1'd1);

assign swap_tmp1_fu_1521_p3 = ((tmp_32_reg_1932[0:0] === 1'b1) ? HTA_heap_1_q1 : HTA_heap_0_q1);

assign swap_tmp2_fu_1552_p3 = ((sel_tmp3_fu_1547_p2[0:0] === 1'b1) ? HTA_heap_1_q0 : sel_tmp9_fu_1533_p3);

assign swap_tmp3_fu_1586_p3 = ((sel_tmp6_fu_1581_p2[0:0] === 1'b1) ? HTA_heap_1_q1 : sel_tmp4_fu_1567_p3);

assign swap_tmp_fu_1092_p3 = ((tmp_33_reg_1784[0:0] === 1'b1) ? HTA_heap_1_q0 : HTA_heap_0_q0);

assign tail_load_phi_fu_1205_p3 = ((tmp_26_fu_1196_p1[0:0] === 1'b1) ? HTA_heap_1_q1 : HTA_heap_0_q0);

assign tmp_11_fu_1284_p2 = ((HTA_heap_load_phi_fu_1277_p3 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_12_fu_1066_p2 = ((offset_parent_reg_584 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_13_fu_1108_p2 = (($signed(swap_tmp_fu_1092_p3) > $signed(now_load_phi_fu_1099_p3)) ? 1'b1 : 1'b0);

assign tmp_14_fu_1391_p2 = ((ap_phi_mux_HTA_heap_load_3_phi_phi_fu_630_p4 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_15_fu_1425_p2 = ((HTA_heap_load_5_phi_fu_1418_p3 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_16_fu_1528_p2 = ((offset_left_reg_1985 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_17_fu_1562_p2 = ((offset_right_reg_2018 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_18_fu_1596_p2 = (($signed(swap_tmp2_fu_1552_p3) > $signed(swap_tmp1_reg_2039)) ? 1'b1 : 1'b0);

assign tmp_19_fu_1601_p2 = (($signed(swap_tmp2_fu_1552_p3) > $signed(swap_tmp3_fu_1586_p3)) ? 1'b1 : 1'b0);

assign tmp_1_fu_704_p4 = {{grp_HLS_malloc_2_s_fu_649_ap_return[15:3]}};

assign tmp_20_fu_1613_p2 = (($signed(swap_tmp3_fu_1586_p3) > $signed(swap_tmp1_reg_2039)) ? 1'b1 : 1'b0);

assign tmp_21_fu_944_p1 = cnt_insert_reg_563[0:0];

assign tmp_22_fu_954_p1 = offset_last_parent1_reg_543[12:0];

assign tmp_23_fu_990_p1 = offset_last_parent1_reg_543[0:0];

assign tmp_24_fu_964_p1 = offset_last_parent1_reg_543[0:0];

assign tmp_25_fu_1214_p1 = offset_now_reg_595[12:0];

assign tmp_26_fu_1196_p1 = offset_now_reg_595[0:0];

assign tmp_27_fu_1269_p1 = p_v_fu_1262_p3[12:0];

assign tmp_28_fu_1273_p1 = p_v_fu_1262_p3[0:0];

assign tmp_29_fu_1020_p1 = p_pn1_reg_575[12:0];

assign tmp_2_fu_727_p4 = {{grp_HLS_malloc_2_s_fu_649_ap_return[12:3]}};

assign tmp_30_fu_1024_p1 = p_pn1_reg_575[0:0];

assign tmp_31_fu_1361_p1 = p_pn2_reg_617[12:0];

assign tmp_32_fu_1371_p1 = p_pn2_reg_617[0:0];

assign tmp_33_fu_1072_p1 = offset_parent_reg_584[0:0];

assign tmp_34_fu_1141_p1 = offset_last_parent1_reg_543[0:0];

assign tmp_35_fu_1469_p1 = offset_left_fu_1462_p3[0:0];

assign tmp_36_fu_1501_p1 = offset_right_fu_1494_p3[0:0];

assign tmp_3_fu_811_p2 = (($signed(cnt_insert_cast_fu_807_p1) < $signed(n)) ? 1'b1 : 1'b0);

assign tmp_5_fu_1169_p2 = (($signed(i_1_cast_fu_1165_p1) < $signed(n)) ? 1'b1 : 1'b0);

assign tmp_6_fu_1200_p1 = i_1_reg_605;

assign tmp_7_fu_816_p1 = cnt_insert_reg_563;

assign tmp_8_fu_831_p4 = {{grp_HLS_malloc_3_s_fu_661_ap_return[15:3]}};

assign tmp_9_fu_854_p4 = {{grp_HLS_malloc_3_s_fu_661_ap_return[12:3]}};

assign tmp_s_fu_948_p2 = (tmp_21_fu_944_p1 ^ 1'd1);

always @ (posedge ap_clk) begin
    HTA_heap_0_addr_reg_1635[1:0] <= 2'b00;
    newIndex3_cast1_reg_1640[1:0] <= 2'b00;
    newIndex4_cast_reg_1646[1:0] <= 2'b01;
    newIndex4_cast_reg_1646[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    offset_head_cast_reg_1656[2:0] <= 3'b000;
    offset_head_cast_reg_1656[31:16] <= 16'b0000000000000000;
    offset_tail_cast_reg_1662[2:0] <= 3'b000;
    offset_tail_cast_reg_1662[31:16] <= 16'b0000000000000000;
    offset_new_node_reg_1696[2:0] <= 3'b000;
    offset_new_node_cast_reg_1701[2:0] <= 3'b000;
    offset_new_node_cast_reg_1701[31:16] <= 16'b0000000000000000;
    newIndex10_cast1_reg_1707[1:0] <= 2'b00;
    offset_tail_reg_554[2:0] <= 3'b000;
end

endmodule //HLS_MAXHEAP_HTA
