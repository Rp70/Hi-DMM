// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="KWTA_mini4_theta,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.356500,HLS_SYN_LAT=5,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=0,HLS_SYN_FF=585,HLS_SYN_LUT=1659,HLS_VERSION=2018_2}" *)

module KWTA_mini4_theta (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        alloc_size,
        alloc_size_ap_vld,
        alloc_size_ap_ack,
        alloc_free_target,
        alloc_free_target_ap_vld,
        alloc_free_target_ap_ack,
        alloc_addr,
        alloc_addr_ap_vld,
        alloc_addr_ap_ack,
        alloc_cmd,
        alloc_cmd_ap_vld,
        alloc_cmd_ap_ack
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] alloc_size;
input   alloc_size_ap_vld;
output   alloc_size_ap_ack;
input  [31:0] alloc_free_target;
input   alloc_free_target_ap_vld;
output   alloc_free_target_ap_ack;
output  [31:0] alloc_addr;
output   alloc_addr_ap_vld;
input   alloc_addr_ap_ack;
input  [7:0] alloc_cmd;
input   alloc_cmd_ap_vld;
output   alloc_cmd_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg alloc_size_ap_ack;
reg alloc_free_target_ap_ack;
reg[31:0] alloc_addr;
reg alloc_addr_ap_vld;
reg alloc_cmd_ap_ack;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] top_heap_V;
reg   [19:0] last_offset_V;
reg   [19:0] last_addr_V;
reg   [11:0] used_free_V_address0;
reg    used_free_V_ce0;
reg    used_free_V_we0;
reg   [31:0] used_free_V_d0;
wire   [31:0] used_free_V_q0;
reg   [7:0] last_loc1_V;
reg   [7:0] last_loc2_V;
reg   [5:0] heap_tree_V_address0;
reg    heap_tree_V_ce0;
reg    heap_tree_V_we0;
reg   [63:0] heap_tree_V_d0;
wire   [63:0] heap_tree_V_q0;
reg    alloc_size_blk_n;
reg    alloc_free_target_blk_n;
reg    alloc_addr_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_878_p2;
wire   [0:0] or_cond_fu_937_p2;
wire   [0:0] tmp_32_fu_947_p3;
wire    ap_CS_fsm_state15;
reg   [0:0] tmp_reg_1473;
reg   [0:0] or_cond_reg_1509;
reg   [0:0] tmp_32_reg_1518;
wire   [0:0] tmp_3_fu_887_p2;
reg    alloc_cmd_blk_n;
reg   [7:0] alloc_cmd_read_reg_1455;
reg    ap_block_state1;
reg   [31:0] alloc_size_read_reg_1461;
reg   [31:0] alloc_free_target_re_reg_1466;
reg    ap_sig_ioackin_alloc_addr_ap_ack;
reg    ap_predicate_op38_write_state2;
reg    ap_predicate_op60_write_state2;
reg    ap_predicate_op65_write_state2;
reg    ap_block_state2_io;
reg   [63:0] p_Val2_5_reg_1477;
reg   [0:0] tmp_3_reg_1484;
reg   [7:0] p_Result_6_reg_1488;
reg   [5:0] p_Result_7_reg_1493;
wire   [63:0] tmp_8_fu_919_p1;
reg   [63:0] tmp_8_reg_1499;
reg   [19:0] p_Val2_s_reg_1513;
wire   [63:0] p_not_fu_964_p2;
reg   [63:0] p_not_reg_1527;
wire   [31:0] p_Result_2_fu_986_p5;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_s_fu_974_p2;
wire   [63:0] tmp_13_fu_998_p1;
reg   [63:0] tmp_13_reg_1540;
wire   [63:0] tmp_7_fu_1045_p1;
reg   [63:0] tmp_7_reg_1550;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_11_fu_1059_p2;
reg   [0:0] tmp_11_reg_1560;
wire    ap_CS_fsm_state7;
reg   [7:0] last_loc1_V_load_reg_1564;
wire   [63:0] tmp_15_fu_1088_p1;
reg   [63:0] tmp_15_reg_1569;
wire   [5:0] p_0167_0_i1_cast_fu_1186_p1;
reg   [5:0] p_0167_0_i1_cast_reg_1597;
wire    ap_CS_fsm_state9;
wire   [6:0] p_0252_0_i1_cast_fu_1196_p1;
reg   [6:0] p_0252_0_i1_cast_reg_1605;
wire   [7:0] loc1_V_fu_1238_p2;
reg   [7:0] loc1_V_reg_1616;
wire    ap_CS_fsm_state10;
wire   [15:0] AA_V_1_fu_1267_p1;
reg   [15:0] AA_V_1_reg_1626;
wire    ap_CS_fsm_state11;
reg   [15:0] BB_V_1_reg_1631;
reg   [15:0] CC_V_1_reg_1636;
reg   [15:0] DD_V_1_reg_1641;
wire   [7:0] loc2_V_fu_1361_p2;
reg   [7:0] loc2_V_reg_1658;
wire    ap_CS_fsm_state12;
wire   [8:0] r_V_1_fu_1385_p2;
reg   [8:0] r_V_1_reg_1663;
wire    ap_CS_fsm_state13;
wire   [63:0] tmp_28_fu_1391_p1;
reg   [63:0] tmp_28_reg_1669;
wire   [10:0] phitmp_fu_1425_p2;
reg   [10:0] phitmp_reg_1679;
wire    ap_CS_fsm_state14;
reg   [31:0] storemerge_reg_400;
wire    ap_CS_fsm_state4;
reg   [3:0] ap_phi_mux_p_0167_0_i1_phi_fu_415_p34;
wire   [0:0] tmp_12_fu_1180_p2;
wire   [15:0] AA_V_fu_1146_p1;
reg   [4:0] ap_phi_mux_p_0252_0_i1_phi_fu_471_p34;
wire   [0:0] tmp_19_fu_1190_p2;
wire   [15:0] BB_V_fu_1150_p4;
reg   [5:0] p_0248_0_i1_reg_524;
wire   [0:0] tmp_20_fu_1200_p2;
wire   [15:0] CC_V_fu_1160_p4;
reg   [4:0] p_0244_0_i1_reg_581;
wire   [0:0] tmp_21_fu_1206_p2;
wire   [15:0] DD_V_fu_1170_p4;
reg   [3:0] ap_phi_mux_p_0167_0_i_phi_fu_657_p34;
wire   [0:0] tmp_23_fu_1301_p2;
reg   [4:0] ap_phi_mux_p_0252_0_i_phi_fu_713_p34;
wire   [0:0] tmp_24_fu_1310_p2;
reg   [5:0] ap_phi_mux_p_0248_0_i_phi_fu_769_p34;
wire   [0:0] tmp_25_fu_1319_p2;
reg   [4:0] ap_phi_mux_p_0244_0_i_phi_fu_825_p34;
wire   [0:0] tmp_26_fu_1328_p2;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_22_fu_1250_p1;
reg   [63:0] p_Result_1_fu_1005_p4;
reg   [63:0] p_Result_5_fu_1127_p4;
wire   [0:0] tmp_16_fu_1118_p2;
wire   [19:0] tmp_27_fu_1396_p1;
wire   [19:0] tmp_6_fu_1034_p2;
wire   [19:0] phitmp_cast_fu_1431_p1;
wire   [31:0] tmp_5_fu_959_p1;
wire  signed [31:0] tmp_36_cast_fu_1450_p1;
reg    ap_reg_ioackin_alloc_addr_ap_ack;
reg    ap_predicate_op335_write_state15;
reg    ap_block_state15_io;
wire   [31:0] p_Result_4_fu_1071_p5;
wire   [31:0] p_Result_8_fu_1405_p5;
reg   [63:0] p_Result_s_36_fu_1023_p4;
reg   [63:0] p_Result_3_fu_1107_p4;
wire   [9:0] tmp_offset_V_fu_910_p4;
wire   [0:0] tmp_1_fu_924_p2;
wire   [0:0] tmp_10_fu_930_p3;
wire   [4:0] tmp_33_fu_970_p1;
wire   [4:0] loc_V_2_trunc_fu_980_p2;
wire   [31:0] i_assign_1_fu_1002_p1;
wire   [31:0] i_assign_fu_1020_p1;
wire   [4:0] p_Result_s_fu_1049_p4;
wire   [4:0] loc_V_trunc_fu_1065_p2;
wire   [31:0] i_assign_2_fu_1103_p1;
wire   [31:0] i_assign_3_fu_1124_p1;
wire   [63:0] p_Val2_2_fu_1142_p2;
wire  signed [5:0] p_0244_0_i1_cast8_fu_1212_p1;
wire   [5:0] tmp2_fu_1220_p2;
wire   [6:0] p_0244_0_i1_cast_fu_1216_p1;
wire   [6:0] tmp3_fu_1229_p2;
wire   [7:0] tmp2_cast_fu_1225_p1;
wire   [7:0] tmp3_cast_fu_1234_p1;
wire   [63:0] p_not1_fu_1255_p2;
wire   [63:0] p_Val2_7_fu_1261_p2;
wire  signed [5:0] p_0244_0_i_cast7_fu_1333_p1;
wire   [6:0] p_0252_0_i_cast_fu_1315_p1;
wire   [6:0] p_0248_0_i_cast_fu_1324_p1;
wire   [6:0] tmp5_fu_1341_p2;
wire   [6:0] p_0167_0_i_cast_fu_1306_p1;
wire   [6:0] p_0244_0_i_cast_fu_1337_p1;
wire   [6:0] tmp6_fu_1351_p2;
wire   [7:0] tmp6_cast_fu_1357_p1;
wire   [7:0] tmp5_cast_fu_1347_p1;
wire   [7:0] r_V_fu_1373_p2;
wire   [8:0] lhs_V_fu_1378_p1;
wire   [8:0] rhs_V_fu_1382_p1;
wire   [10:0] tmp_29_fu_1418_p3;
wire   [11:0] tmp_35_cast_fu_1441_p1;
wire   [11:0] tmp_31_fu_1444_p2;
reg   [14:0] ap_NS_fsm;
reg    ap_condition_1009;
reg    ap_condition_927;
reg    ap_condition_496;
reg    ap_condition_845;
reg    ap_condition_680;
reg    ap_condition_596;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 top_heap_V = 64'd18446744073709551615;
#0 last_offset_V = 20'd1048575;
#0 last_addr_V = 20'd0;
#0 last_loc1_V = 8'd0;
#0 last_loc2_V = 8'd0;
#0 ap_reg_ioackin_alloc_addr_ap_ack = 1'b0;
end

KWTA_mini4_theta_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
used_free_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(used_free_V_address0),
    .ce0(used_free_V_ce0),
    .we0(used_free_V_we0),
    .d0(used_free_V_d0),
    .q0(used_free_V_q0)
);

KWTA_mini4_theta_cud #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
heap_tree_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(heap_tree_V_address0),
    .ce0(heap_tree_V_ce0),
    .we0(heap_tree_V_we0),
    .d0(heap_tree_V_d0),
    .q0(heap_tree_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_alloc_addr_ap_ack <= 1'b0;
    end else begin
        if ((((ap_predicate_op65_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io)) | ((ap_predicate_op60_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io)) | ((ap_predicate_op38_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io)) | ((ap_predicate_op335_write_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_io)))) begin
            ap_reg_ioackin_alloc_addr_ap_ack <= 1'b0;
        end else if ((((ap_predicate_op65_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == alloc_addr_ap_ack)) | ((ap_predicate_op60_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == alloc_addr_ap_ack)) | ((ap_predicate_op38_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == alloc_addr_ap_ack)) | ((or_cond_reg_1509 == 1'd0) & (tmp_32_reg_1518 == 1'd1) & (tmp_reg_1473 == 1'd1) & (1'b1 == alloc_addr_ap_ack) & (1'b1 == ap_CS_fsm_state15)))) begin
            ap_reg_ioackin_alloc_addr_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        last_addr_V <= phitmp_cast_fu_1431_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        last_addr_V <= tmp_6_fu_1034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        last_offset_V <= tmp_27_fu_1396_p1;
    end else if (((tmp_11_fu_1059_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        last_offset_V <= 20'd1048575;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        if ((tmp_21_fu_1206_p2 == 1'd1)) begin
            p_0244_0_i1_reg_581 <= 5'd0;
        end else if ((1'b1 == ap_condition_680)) begin
            p_0244_0_i1_reg_581 <= 5'd16;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd2 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd17;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd4 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd18;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd8 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd19;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd16 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd20;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd32 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd21;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd64 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd22;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd128 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd23;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd256 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd24;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd512 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd25;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd1024 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd26;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd2048 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd27;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd4096 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd28;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd8192 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd29;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd16384 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd30;
        end else if (((tmp_21_fu_1206_p2 == 1'd0) & (16'd32768 == DD_V_fu_1170_p4))) begin
            p_0244_0_i1_reg_581 <= 5'd31;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        if ((tmp_20_fu_1200_p2 == 1'd1)) begin
                        p_0248_0_i1_reg_524[0] <= 1'b0;
            p_0248_0_i1_reg_524[1] <= 1'b0;
            p_0248_0_i1_reg_524[2] <= 1'b0;
            p_0248_0_i1_reg_524[3] <= 1'b0;
            p_0248_0_i1_reg_524[5] <= 1'b0;
        end else if ((1'b1 == ap_condition_596)) begin
                        p_0248_0_i1_reg_524[0] <= 1'b0;
            p_0248_0_i1_reg_524[1] <= 1'b0;
            p_0248_0_i1_reg_524[2] <= 1'b0;
            p_0248_0_i1_reg_524[3] <= 1'b0;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd2 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b1;
            p_0248_0_i1_reg_524[1] <= 1'b0;
            p_0248_0_i1_reg_524[2] <= 1'b0;
            p_0248_0_i1_reg_524[3] <= 1'b0;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd4 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b0;
            p_0248_0_i1_reg_524[1] <= 1'b1;
            p_0248_0_i1_reg_524[2] <= 1'b0;
            p_0248_0_i1_reg_524[3] <= 1'b0;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd8 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b1;
            p_0248_0_i1_reg_524[1] <= 1'b1;
            p_0248_0_i1_reg_524[2] <= 1'b0;
            p_0248_0_i1_reg_524[3] <= 1'b0;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd16 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b0;
            p_0248_0_i1_reg_524[1] <= 1'b0;
            p_0248_0_i1_reg_524[2] <= 1'b1;
            p_0248_0_i1_reg_524[3] <= 1'b0;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd32 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b1;
            p_0248_0_i1_reg_524[1] <= 1'b0;
            p_0248_0_i1_reg_524[2] <= 1'b1;
            p_0248_0_i1_reg_524[3] <= 1'b0;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd64 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b0;
            p_0248_0_i1_reg_524[1] <= 1'b1;
            p_0248_0_i1_reg_524[2] <= 1'b1;
            p_0248_0_i1_reg_524[3] <= 1'b0;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd128 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b1;
            p_0248_0_i1_reg_524[1] <= 1'b1;
            p_0248_0_i1_reg_524[2] <= 1'b1;
            p_0248_0_i1_reg_524[3] <= 1'b0;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd256 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b0;
            p_0248_0_i1_reg_524[1] <= 1'b0;
            p_0248_0_i1_reg_524[2] <= 1'b0;
            p_0248_0_i1_reg_524[3] <= 1'b1;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd512 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b1;
            p_0248_0_i1_reg_524[1] <= 1'b0;
            p_0248_0_i1_reg_524[2] <= 1'b0;
            p_0248_0_i1_reg_524[3] <= 1'b1;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd1024 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b0;
            p_0248_0_i1_reg_524[1] <= 1'b1;
            p_0248_0_i1_reg_524[2] <= 1'b0;
            p_0248_0_i1_reg_524[3] <= 1'b1;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd2048 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b1;
            p_0248_0_i1_reg_524[1] <= 1'b1;
            p_0248_0_i1_reg_524[2] <= 1'b0;
            p_0248_0_i1_reg_524[3] <= 1'b1;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd4096 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b0;
            p_0248_0_i1_reg_524[1] <= 1'b0;
            p_0248_0_i1_reg_524[2] <= 1'b1;
            p_0248_0_i1_reg_524[3] <= 1'b1;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd8192 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b1;
            p_0248_0_i1_reg_524[1] <= 1'b0;
            p_0248_0_i1_reg_524[2] <= 1'b1;
            p_0248_0_i1_reg_524[3] <= 1'b1;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd16384 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b0;
            p_0248_0_i1_reg_524[1] <= 1'b1;
            p_0248_0_i1_reg_524[2] <= 1'b1;
            p_0248_0_i1_reg_524[3] <= 1'b1;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end else if (((tmp_20_fu_1200_p2 == 1'd0) & (16'd32768 == CC_V_fu_1160_p4))) begin
                        p_0248_0_i1_reg_524[0] <= 1'b1;
            p_0248_0_i1_reg_524[1] <= 1'b1;
            p_0248_0_i1_reg_524[2] <= 1'b1;
            p_0248_0_i1_reg_524[3] <= 1'b1;
            p_0248_0_i1_reg_524[5] <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        storemerge_reg_400 <= 32'd0;
    end else if (((tmp_s_fu_974_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        storemerge_reg_400 <= p_Result_2_fu_986_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_1560 == 1'd1) & (tmp_16_fu_1118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        top_heap_V <= p_Result_5_fu_1127_p4;
    end else if (((tmp_s_fu_974_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        top_heap_V <= p_Result_1_fu_1005_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        AA_V_1_reg_1626 <= AA_V_1_fu_1267_p1;
        BB_V_1_reg_1631 <= {{p_Val2_7_fu_1261_p2[31:16]}};
        CC_V_1_reg_1636 <= {{p_Val2_7_fu_1261_p2[47:32]}};
        DD_V_1_reg_1641 <= {{p_Val2_7_fu_1261_p2[63:48]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_cmd_read_reg_1455 <= alloc_cmd;
        alloc_free_target_re_reg_1466 <= alloc_free_target;
        alloc_size_read_reg_1461 <= alloc_size;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        last_loc1_V <= loc1_V_fu_1238_p2;
        loc1_V_reg_1616 <= loc1_V_fu_1238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_fu_1059_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        last_loc1_V_load_reg_1564 <= last_loc1_V;
        tmp_15_reg_1569[7 : 0] <= tmp_15_fu_1088_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        last_loc2_V <= loc2_V_fu_1361_p2;
        loc2_V_reg_1658 <= loc2_V_fu_1361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_878_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        or_cond_reg_1509 <= or_cond_fu_937_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_0167_0_i1_cast_reg_1597[3 : 0] <= p_0167_0_i1_cast_fu_1186_p1[3 : 0];
        p_0252_0_i1_cast_reg_1605[4 : 0] <= p_0252_0_i1_cast_fu_1196_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_887_p2 == 1'd1) & (tmp_fu_878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        p_Result_6_reg_1488 <= {{alloc_free_target_re_reg_1466[9:2]}};
        p_Result_7_reg_1493 <= {{alloc_free_target_re_reg_1466[15:10]}};
        tmp_8_reg_1499[9 : 0] <= tmp_8_fu_919_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        p_Val2_5_reg_1477 <= top_heap_V;
        tmp_reg_1473 <= tmp_fu_878_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_937_p2 == 1'd0) & (tmp_fu_878_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        p_Val2_s_reg_1513 <= last_offset_V;
        tmp_32_reg_1518 <= last_offset_V[32'd19];
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_937_p2 == 1'd0) & (tmp_32_fu_947_p3 == 1'd1) & (tmp_fu_878_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        p_not_reg_1527 <= p_not_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        phitmp_reg_1679[10 : 2] <= phitmp_fu_1425_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        r_V_1_reg_1663 <= r_V_1_fu_1385_p2;
        tmp_28_reg_1669[8 : 0] <= tmp_28_fu_1391_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_11_reg_1560 <= tmp_11_fu_1059_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_974_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_13_reg_1540[5 : 0] <= tmp_13_fu_998_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        tmp_3_reg_1484 <= tmp_3_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_7_reg_1550[19 : 0] <= tmp_7_fu_1045_p1[19 : 0];
    end
end

always @ (*) begin
    if (((or_cond_reg_1509 == 1'd0) & (tmp_32_reg_1518 == 1'd1) & (tmp_reg_1473 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        alloc_addr = tmp_36_cast_fu_1450_p1;
    end else if (((ap_predicate_op60_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        alloc_addr = tmp_5_fu_959_p1;
    end else if ((((ap_predicate_op65_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_predicate_op38_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        alloc_addr = 32'd4294967295;
    end else begin
        alloc_addr = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op65_write_state2 == 1'b1) & (ap_reg_ioackin_alloc_addr_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_predicate_op60_write_state2 == 1'b1) & (ap_reg_ioackin_alloc_addr_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_predicate_op38_write_state2 == 1'b1) & (ap_reg_ioackin_alloc_addr_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_predicate_op335_write_state15 == 1'b1) & (ap_reg_ioackin_alloc_addr_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state15)))) begin
        alloc_addr_ap_vld = 1'b1;
    end else begin
        alloc_addr_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_32_fu_947_p3 == 1'd0) & (or_cond_fu_937_p2 == 1'd0) & (tmp_fu_878_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((or_cond_fu_937_p2 == 1'd1) & (tmp_fu_878_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_3_fu_887_p2 == 1'd0) & (tmp_fu_878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((or_cond_reg_1509 == 1'd0) & (tmp_32_reg_1518 == 1'd1) & (tmp_reg_1473 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        alloc_addr_blk_n = alloc_addr_ap_ack;
    end else begin
        alloc_addr_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_cmd_ap_ack = 1'b1;
    end else begin
        alloc_cmd_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_cmd_blk_n = alloc_cmd_ap_vld;
    end else begin
        alloc_cmd_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_free_target_ap_ack = 1'b1;
    end else begin
        alloc_free_target_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_free_target_blk_n = alloc_free_target_ap_vld;
    end else begin
        alloc_free_target_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_size_ap_ack = 1'b1;
    end else begin
        alloc_size_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        alloc_size_blk_n = alloc_size_ap_vld;
    end else begin
        alloc_size_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_io))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_12_fu_1180_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | (~(16'd2 == AA_V_fu_1146_p1) & ~(16'd4 == AA_V_fu_1146_p1) & ~(16'd8 == AA_V_fu_1146_p1) & ~(16'd16 == AA_V_fu_1146_p1) & ~(16'd32 == AA_V_fu_1146_p1) & ~(16'd64 == AA_V_fu_1146_p1) & ~(16'd128 == AA_V_fu_1146_p1) & ~(16'd256 == AA_V_fu_1146_p1) & ~(16'd512 == AA_V_fu_1146_p1) & ~(16'd1024 == AA_V_fu_1146_p1) & ~(16'd2048 == AA_V_fu_1146_p1) & ~(16'd4096 == AA_V_fu_1146_p1) & ~(16'd8192 == AA_V_fu_1146_p1) & ~(16'd16384 == AA_V_fu_1146_p1) & ~(16'd32768 == AA_V_fu_1146_p1) & (tmp_12_fu_1180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd0;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd2 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd1;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd4 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd2;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd8 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd3;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd16 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd4;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd32 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd5;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd64 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd6;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd128 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd7;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd256 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd8;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd512 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd9;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd1024 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd10;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd2048 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd11;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd4096 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd12;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd8192 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd13;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd16384 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd14;
    end else if (((tmp_12_fu_1180_p2 == 1'd0) & (16'd32768 == AA_V_fu_1146_p1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 4'd15;
    end else begin
        ap_phi_mux_p_0167_0_i1_phi_fu_415_p34 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_23_fu_1301_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | (~(16'd2 == AA_V_1_reg_1626) & ~(16'd4 == AA_V_1_reg_1626) & ~(16'd8 == AA_V_1_reg_1626) & ~(16'd16 == AA_V_1_reg_1626) & ~(16'd32 == AA_V_1_reg_1626) & ~(16'd64 == AA_V_1_reg_1626) & ~(16'd128 == AA_V_1_reg_1626) & ~(16'd256 == AA_V_1_reg_1626) & ~(16'd512 == AA_V_1_reg_1626) & ~(16'd1024 == AA_V_1_reg_1626) & ~(16'd2048 == AA_V_1_reg_1626) & ~(16'd4096 == AA_V_1_reg_1626) & ~(16'd8192 == AA_V_1_reg_1626) & ~(16'd16384 == AA_V_1_reg_1626) & ~(16'd32768 == AA_V_1_reg_1626) & (tmp_23_fu_1301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd0;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd2 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd1;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd4 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd2;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd8 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd3;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd16 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd4;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd32 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd5;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd64 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd6;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd128 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd7;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd256 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd8;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd512 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd9;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd1024 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd10;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd2048 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd11;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd4096 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd12;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd8192 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd13;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd16384 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd14;
    end else if (((tmp_23_fu_1301_p2 == 1'd0) & (16'd32768 == AA_V_1_reg_1626) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 4'd15;
    end else begin
        ap_phi_mux_p_0167_0_i_phi_fu_657_p34 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((tmp_26_fu_1328_p2 == 1'd1)) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd0;
        end else if ((1'b1 == ap_condition_1009)) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd16;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd2 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd17;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd4 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd18;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd8 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd19;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd16 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd20;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd32 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd21;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd64 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd22;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd128 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd23;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd256 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd24;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd512 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd25;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd1024 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd26;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd2048 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd27;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd4096 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd28;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd8192 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd29;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd16384 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd30;
        end else if (((tmp_26_fu_1328_p2 == 1'd0) & (16'd32768 == DD_V_1_reg_1641))) begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 5'd31;
        end else begin
            ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 'bx;
        end
    end else begin
        ap_phi_mux_p_0244_0_i_phi_fu_825_p34 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((tmp_25_fu_1319_p2 == 1'd1)) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd0;
        end else if ((1'b1 == ap_condition_927)) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd32;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd2 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd33;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd4 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd34;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd8 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd35;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd16 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd36;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd32 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd37;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd64 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd38;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd128 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd39;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd256 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd40;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd512 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd41;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd1024 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd42;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd2048 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd43;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd4096 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd44;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd8192 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd45;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd16384 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd46;
        end else if (((tmp_25_fu_1319_p2 == 1'd0) & (16'd32768 == CC_V_1_reg_1636))) begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 6'd47;
        end else begin
            ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 'bx;
        end
    end else begin
        ap_phi_mux_p_0248_0_i_phi_fu_769_p34 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        if ((tmp_19_fu_1190_p2 == 1'd1)) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd0;
        end else if ((1'b1 == ap_condition_496)) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd16;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd2 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd17;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd4 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd18;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd8 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd19;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd16 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd20;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd32 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd21;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd64 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd22;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd128 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd23;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd256 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd24;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd512 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd25;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd1024 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd26;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd2048 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd27;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd4096 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd28;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd8192 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd29;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd16384 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd30;
        end else if (((tmp_19_fu_1190_p2 == 1'd0) & (16'd32768 == BB_V_fu_1150_p4))) begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 5'd31;
        end else begin
            ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 'bx;
        end
    end else begin
        ap_phi_mux_p_0252_0_i1_phi_fu_471_p34 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((tmp_24_fu_1310_p2 == 1'd1)) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd0;
        end else if ((1'b1 == ap_condition_845)) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd16;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd2 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd17;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd4 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd18;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd8 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd19;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd16 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd20;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd32 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd21;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd64 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd22;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd128 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd23;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd256 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd24;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd512 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd25;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd1024 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd26;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd2048 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd27;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd4096 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd28;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd8192 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd29;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd16384 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd30;
        end else if (((tmp_24_fu_1310_p2 == 1'd0) & (16'd32768 == BB_V_1_reg_1631))) begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 5'd31;
        end else begin
            ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 'bx;
        end
    end else begin
        ap_phi_mux_p_0252_0_i_phi_fu_713_p34 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_io))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_alloc_addr_ap_ack == 1'b0)) begin
        ap_sig_ioackin_alloc_addr_ap_ack = alloc_addr_ap_ack;
    end else begin
        ap_sig_ioackin_alloc_addr_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        heap_tree_V_address0 = tmp_22_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        heap_tree_V_address0 = tmp_15_reg_1569;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        heap_tree_V_address0 = tmp_15_fu_1088_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        heap_tree_V_address0 = tmp_13_reg_1540;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        heap_tree_V_address0 = tmp_13_fu_998_p1;
    end else begin
        heap_tree_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8))) begin
        heap_tree_V_ce0 = 1'b1;
    end else begin
        heap_tree_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        heap_tree_V_d0 = p_Result_3_fu_1107_p4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        heap_tree_V_d0 = p_Result_s_36_fu_1023_p4;
    end else begin
        heap_tree_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((tmp_11_reg_1560 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        heap_tree_V_we0 = 1'b1;
    end else begin
        heap_tree_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        used_free_V_address0 = tmp_28_reg_1669;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        used_free_V_address0 = tmp_28_fu_1391_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        used_free_V_address0 = tmp_7_reg_1550;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        used_free_V_address0 = tmp_7_fu_1045_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        used_free_V_address0 = tmp_8_reg_1499;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        used_free_V_address0 = tmp_8_fu_919_p1;
    end else begin
        used_free_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io)))) begin
        used_free_V_ce0 = 1'b1;
    end else begin
        used_free_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        used_free_V_d0 = p_Result_8_fu_1405_p5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        used_free_V_d0 = p_Result_4_fu_1071_p5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        used_free_V_d0 = storemerge_reg_400;
    end else begin
        used_free_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((tmp_11_fu_1059_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((tmp_3_reg_1484 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        used_free_V_we0 = 1'b1;
    end else begin
        used_free_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((or_cond_fu_937_p2 == 1'd1) & (tmp_fu_878_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((or_cond_fu_937_p2 == 1'd0) & (tmp_32_fu_947_p3 == 1'd1) & (tmp_fu_878_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((tmp_32_fu_947_p3 == 1'd0) & (or_cond_fu_937_p2 == 1'd0) & (tmp_fu_878_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((tmp_3_fu_887_p2 == 1'd0) & (tmp_fu_878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((tmp_3_fu_887_p2 == 1'd1) & (tmp_fu_878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_s_fu_974_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_io))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AA_V_1_fu_1267_p1 = p_Val2_7_fu_1261_p2[15:0];

assign AA_V_fu_1146_p1 = p_Val2_2_fu_1142_p2[15:0];

assign BB_V_fu_1150_p4 = {{p_Val2_2_fu_1142_p2[31:16]}};

assign CC_V_fu_1160_p4 = {{p_Val2_2_fu_1142_p2[47:32]}};

assign DD_V_fu_1170_p4 = {{p_Val2_2_fu_1142_p2[63:48]}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == alloc_cmd_ap_vld) | (1'b0 == alloc_free_target_ap_vld) | (1'b0 == alloc_size_ap_vld) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state15_io = ((ap_predicate_op335_write_state15 == 1'b1) & (ap_sig_ioackin_alloc_addr_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = (((ap_predicate_op65_write_state2 == 1'b1) & (ap_sig_ioackin_alloc_addr_ap_ack == 1'b0)) | ((ap_predicate_op60_write_state2 == 1'b1) & (ap_sig_ioackin_alloc_addr_ap_ack == 1'b0)) | ((ap_predicate_op38_write_state2 == 1'b1) & (ap_sig_ioackin_alloc_addr_ap_ack == 1'b0)));
end

always @ (*) begin
    ap_condition_1009 = (~(16'd2 == DD_V_1_reg_1641) & ~(16'd4 == DD_V_1_reg_1641) & ~(16'd8 == DD_V_1_reg_1641) & ~(16'd16 == DD_V_1_reg_1641) & ~(16'd32 == DD_V_1_reg_1641) & ~(16'd64 == DD_V_1_reg_1641) & ~(16'd128 == DD_V_1_reg_1641) & ~(16'd256 == DD_V_1_reg_1641) & ~(16'd512 == DD_V_1_reg_1641) & ~(16'd1024 == DD_V_1_reg_1641) & ~(16'd2048 == DD_V_1_reg_1641) & ~(16'd4096 == DD_V_1_reg_1641) & ~(16'd8192 == DD_V_1_reg_1641) & ~(16'd16384 == DD_V_1_reg_1641) & ~(16'd32768 == DD_V_1_reg_1641) & (tmp_26_fu_1328_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_496 = (~(16'd2 == BB_V_fu_1150_p4) & ~(16'd4 == BB_V_fu_1150_p4) & ~(16'd8 == BB_V_fu_1150_p4) & ~(16'd16 == BB_V_fu_1150_p4) & ~(16'd32 == BB_V_fu_1150_p4) & ~(16'd64 == BB_V_fu_1150_p4) & ~(16'd128 == BB_V_fu_1150_p4) & ~(16'd256 == BB_V_fu_1150_p4) & ~(16'd512 == BB_V_fu_1150_p4) & ~(16'd1024 == BB_V_fu_1150_p4) & ~(16'd2048 == BB_V_fu_1150_p4) & ~(16'd4096 == BB_V_fu_1150_p4) & ~(16'd8192 == BB_V_fu_1150_p4) & ~(16'd16384 == BB_V_fu_1150_p4) & ~(16'd32768 == BB_V_fu_1150_p4) & (tmp_19_fu_1190_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_596 = (~(16'd2 == CC_V_fu_1160_p4) & ~(16'd4 == CC_V_fu_1160_p4) & ~(16'd8 == CC_V_fu_1160_p4) & ~(16'd16 == CC_V_fu_1160_p4) & ~(16'd32 == CC_V_fu_1160_p4) & ~(16'd64 == CC_V_fu_1160_p4) & ~(16'd128 == CC_V_fu_1160_p4) & ~(16'd256 == CC_V_fu_1160_p4) & ~(16'd512 == CC_V_fu_1160_p4) & ~(16'd1024 == CC_V_fu_1160_p4) & ~(16'd2048 == CC_V_fu_1160_p4) & ~(16'd4096 == CC_V_fu_1160_p4) & ~(16'd8192 == CC_V_fu_1160_p4) & ~(16'd16384 == CC_V_fu_1160_p4) & ~(16'd32768 == CC_V_fu_1160_p4) & (tmp_20_fu_1200_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_680 = (~(16'd2 == DD_V_fu_1170_p4) & ~(16'd4 == DD_V_fu_1170_p4) & ~(16'd8 == DD_V_fu_1170_p4) & ~(16'd16 == DD_V_fu_1170_p4) & ~(16'd32 == DD_V_fu_1170_p4) & ~(16'd64 == DD_V_fu_1170_p4) & ~(16'd128 == DD_V_fu_1170_p4) & ~(16'd256 == DD_V_fu_1170_p4) & ~(16'd512 == DD_V_fu_1170_p4) & ~(16'd1024 == DD_V_fu_1170_p4) & ~(16'd2048 == DD_V_fu_1170_p4) & ~(16'd4096 == DD_V_fu_1170_p4) & ~(16'd8192 == DD_V_fu_1170_p4) & ~(16'd16384 == DD_V_fu_1170_p4) & ~(16'd32768 == DD_V_fu_1170_p4) & (tmp_21_fu_1206_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_845 = (~(16'd2 == BB_V_1_reg_1631) & ~(16'd4 == BB_V_1_reg_1631) & ~(16'd8 == BB_V_1_reg_1631) & ~(16'd16 == BB_V_1_reg_1631) & ~(16'd32 == BB_V_1_reg_1631) & ~(16'd64 == BB_V_1_reg_1631) & ~(16'd128 == BB_V_1_reg_1631) & ~(16'd256 == BB_V_1_reg_1631) & ~(16'd512 == BB_V_1_reg_1631) & ~(16'd1024 == BB_V_1_reg_1631) & ~(16'd2048 == BB_V_1_reg_1631) & ~(16'd4096 == BB_V_1_reg_1631) & ~(16'd8192 == BB_V_1_reg_1631) & ~(16'd16384 == BB_V_1_reg_1631) & ~(16'd32768 == BB_V_1_reg_1631) & (tmp_24_fu_1310_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_927 = (~(16'd2 == CC_V_1_reg_1636) & ~(16'd4 == CC_V_1_reg_1636) & ~(16'd8 == CC_V_1_reg_1636) & ~(16'd16 == CC_V_1_reg_1636) & ~(16'd32 == CC_V_1_reg_1636) & ~(16'd64 == CC_V_1_reg_1636) & ~(16'd128 == CC_V_1_reg_1636) & ~(16'd256 == CC_V_1_reg_1636) & ~(16'd512 == CC_V_1_reg_1636) & ~(16'd1024 == CC_V_1_reg_1636) & ~(16'd2048 == CC_V_1_reg_1636) & ~(16'd4096 == CC_V_1_reg_1636) & ~(16'd8192 == CC_V_1_reg_1636) & ~(16'd16384 == CC_V_1_reg_1636) & ~(16'd32768 == CC_V_1_reg_1636) & (tmp_25_fu_1319_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op335_write_state15 = ((or_cond_reg_1509 == 1'd0) & (tmp_32_reg_1518 == 1'd1) & (tmp_reg_1473 == 1'd1));
end

always @ (*) begin
    ap_predicate_op38_write_state2 = ((tmp_3_fu_887_p2 == 1'd0) & (tmp_fu_878_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op60_write_state2 = ((tmp_32_fu_947_p3 == 1'd0) & (or_cond_fu_937_p2 == 1'd0) & (tmp_fu_878_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op65_write_state2 = ((or_cond_fu_937_p2 == 1'd1) & (tmp_fu_878_p2 == 1'd1));
end

assign i_assign_1_fu_1002_p1 = p_Result_7_reg_1493;

assign i_assign_2_fu_1103_p1 = last_loc2_V;

assign i_assign_3_fu_1124_p1 = last_loc1_V_load_reg_1564;

assign i_assign_fu_1020_p1 = p_Result_6_reg_1488;

assign lhs_V_fu_1378_p1 = r_V_fu_1373_p2;

assign loc1_V_fu_1238_p2 = (tmp2_cast_fu_1225_p1 + tmp3_cast_fu_1234_p1);

assign loc2_V_fu_1361_p2 = (tmp6_cast_fu_1357_p1 + tmp5_cast_fu_1347_p1);

assign loc_V_2_trunc_fu_980_p2 = (tmp_33_fu_970_p1 + 5'd1);

assign loc_V_trunc_fu_1065_p2 = (p_Result_s_fu_1049_p4 + 5'd1);

assign or_cond_fu_937_p2 = (tmp_1_fu_924_p2 | tmp_10_fu_930_p3);

assign p_0167_0_i1_cast_fu_1186_p1 = ap_phi_mux_p_0167_0_i1_phi_fu_415_p34;

assign p_0167_0_i_cast_fu_1306_p1 = ap_phi_mux_p_0167_0_i_phi_fu_657_p34;

assign p_0244_0_i1_cast8_fu_1212_p1 = $signed(p_0244_0_i1_reg_581);

assign p_0244_0_i1_cast_fu_1216_p1 = $unsigned(p_0244_0_i1_cast8_fu_1212_p1);

assign p_0244_0_i_cast7_fu_1333_p1 = $signed(ap_phi_mux_p_0244_0_i_phi_fu_825_p34);

assign p_0244_0_i_cast_fu_1337_p1 = $unsigned(p_0244_0_i_cast7_fu_1333_p1);

assign p_0248_0_i_cast_fu_1324_p1 = ap_phi_mux_p_0248_0_i_phi_fu_769_p34;

assign p_0252_0_i1_cast_fu_1196_p1 = ap_phi_mux_p_0252_0_i1_phi_fu_471_p34;

assign p_0252_0_i_cast_fu_1315_p1 = ap_phi_mux_p_0252_0_i_phi_fu_713_p34;

always @ (*) begin
    p_Result_1_fu_1005_p4 = p_Val2_5_reg_1477;
    p_Result_1_fu_1005_p4[i_assign_1_fu_1002_p1] = |(1'd1);
end

assign p_Result_2_fu_986_p5 = {{used_free_V_q0[31:5]}, {loc_V_2_trunc_fu_980_p2}};

always @ (*) begin
    p_Result_3_fu_1107_p4 = heap_tree_V_q0;
    p_Result_3_fu_1107_p4[i_assign_2_fu_1103_p1] = |(1'd0);
end

assign p_Result_4_fu_1071_p5 = {{used_free_V_q0[31:10]}, {loc_V_trunc_fu_1065_p2}, {used_free_V_q0[4:0]}};

always @ (*) begin
    p_Result_5_fu_1127_p4 = p_Val2_5_reg_1477;
    p_Result_5_fu_1127_p4[i_assign_3_fu_1124_p1] = |(1'd0);
end

assign p_Result_8_fu_1405_p5 = {{used_free_V_q0[31:10]}, {5'd1}, {used_free_V_q0[4:0]}};

always @ (*) begin
    p_Result_s_36_fu_1023_p4 = heap_tree_V_q0;
    p_Result_s_36_fu_1023_p4[i_assign_fu_1020_p1] = |(1'd1);
end

assign p_Result_s_fu_1049_p4 = {{used_free_V_q0[9:5]}};

assign p_Val2_2_fu_1142_p2 = (p_not_reg_1527 & p_Val2_5_reg_1477);

assign p_Val2_7_fu_1261_p2 = (p_not1_fu_1255_p2 & heap_tree_V_q0);

assign p_not1_fu_1255_p2 = (64'd0 - heap_tree_V_q0);

assign p_not_fu_964_p2 = (64'd0 - top_heap_V);

assign phitmp_cast_fu_1431_p1 = phitmp_fu_1425_p2;

assign phitmp_fu_1425_p2 = (tmp_29_fu_1418_p3 | 11'd1);

assign r_V_1_fu_1385_p2 = (lhs_V_fu_1378_p1 + rhs_V_fu_1382_p1);

assign r_V_fu_1373_p2 = loc1_V_reg_1616 << 8'd6;

assign rhs_V_fu_1382_p1 = loc2_V_reg_1658;

assign tmp2_cast_fu_1225_p1 = tmp2_fu_1220_p2;

assign tmp2_fu_1220_p2 = (p_0248_0_i1_reg_524 + p_0167_0_i1_cast_reg_1597);

assign tmp3_cast_fu_1234_p1 = tmp3_fu_1229_p2;

assign tmp3_fu_1229_p2 = (p_0244_0_i1_cast_fu_1216_p1 + p_0252_0_i1_cast_reg_1605);

assign tmp5_cast_fu_1347_p1 = tmp5_fu_1341_p2;

assign tmp5_fu_1341_p2 = (p_0252_0_i_cast_fu_1315_p1 + p_0248_0_i_cast_fu_1324_p1);

assign tmp6_cast_fu_1357_p1 = tmp6_fu_1351_p2;

assign tmp6_fu_1351_p2 = (p_0167_0_i_cast_fu_1306_p1 + p_0244_0_i_cast_fu_1337_p1);

assign tmp_10_fu_930_p3 = alloc_size_read_reg_1461[32'd1];

assign tmp_11_fu_1059_p2 = ((p_Result_s_fu_1049_p4 == 5'd3) ? 1'b1 : 1'b0);

assign tmp_12_fu_1180_p2 = ((AA_V_fu_1146_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_13_fu_998_p1 = p_Result_7_reg_1493;

assign tmp_15_fu_1088_p1 = last_loc1_V;

assign tmp_16_fu_1118_p2 = ((p_Result_3_fu_1107_p4 == 64'd0) ? 1'b1 : 1'b0);

assign tmp_19_fu_1190_p2 = ((BB_V_fu_1150_p4 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_1_fu_924_p2 = ((top_heap_V == 64'd0) ? 1'b1 : 1'b0);

assign tmp_20_fu_1200_p2 = ((CC_V_fu_1160_p4 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_21_fu_1206_p2 = ((DD_V_fu_1170_p4 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_22_fu_1250_p1 = loc1_V_fu_1238_p2;

assign tmp_23_fu_1301_p2 = ((AA_V_1_reg_1626 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_24_fu_1310_p2 = ((BB_V_1_reg_1631 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_25_fu_1319_p2 = ((CC_V_1_reg_1636 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_26_fu_1328_p2 = ((DD_V_1_reg_1641 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_27_fu_1396_p1 = r_V_1_reg_1663;

assign tmp_28_fu_1391_p1 = r_V_1_fu_1385_p2;

assign tmp_29_fu_1418_p3 = {{r_V_1_reg_1663}, {2'd0}};

assign tmp_31_fu_1444_p2 = ($signed(12'd4095) + $signed(tmp_35_cast_fu_1441_p1));

assign tmp_32_fu_947_p3 = last_offset_V[32'd19];

assign tmp_33_fu_970_p1 = used_free_V_q0[4:0];

assign tmp_35_cast_fu_1441_p1 = phitmp_reg_1679;

assign tmp_36_cast_fu_1450_p1 = $signed(tmp_31_fu_1444_p2);

assign tmp_3_fu_887_p2 = ((alloc_cmd_read_reg_1455 == 8'd3) ? 1'b1 : 1'b0);

assign tmp_5_fu_959_p1 = last_addr_V;

assign tmp_6_fu_1034_p2 = (last_addr_V + 20'd1);

assign tmp_7_fu_1045_p1 = p_Val2_s_reg_1513;

assign tmp_8_fu_919_p1 = tmp_offset_V_fu_910_p4;

assign tmp_fu_878_p2 = ((alloc_cmd_read_reg_1455 == 8'd2) ? 1'b1 : 1'b0);

assign tmp_offset_V_fu_910_p4 = {{alloc_free_target_re_reg_1466[11:2]}};

assign tmp_s_fu_974_p2 = ((tmp_33_fu_970_p1 == 5'd3) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_8_reg_1499[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_1540[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_7_reg_1550[63:20] <= 44'b00000000000000000000000000000000000000000000;
    tmp_15_reg_1569[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    p_0167_0_i1_cast_reg_1597[5:4] <= 2'b00;
    p_0252_0_i1_cast_reg_1605[6:5] <= 2'b00;
    tmp_28_reg_1669[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    phitmp_reg_1679[1:0] <= 2'b01;
    p_0248_0_i1_reg_524[4] <= 1'b0;
end

endmodule //KWTA_mini4_theta
